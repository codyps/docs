var searchIndex = {};
searchIndex["hash_roll"] = {"doc":"","items":[[3,"Range","hash_roll","",null,null],[12,"first","","",0,null],[12,"last","","",0,null],[3,"Zpaq","","zpaq - a splitter used in go &#39;dedup&#39; and zpaq that does not require looking back in the source\n       data to update",null,null],[3,"Rsyncable","","&#39;Rsyncable&#39; is used by the gzip rsyncable patch (still not merged, but widely distributed) as\nwell as the rsyncrypto project to split the unerlying content into variable sized blocks prior\nto applying a filter (compression and/or encryption) to the blocks, which the intent of allowing\nthe resulting filtered data to be more easily propogated via rsync.",null,null],[3,"SplitterSplit","","",null,null],[3,"SplitterVecs","","",null,null],[4,"Bound","","",null,null],[13,"Included","","",1,null],[13,"Excluded","","",1,null],[13,"Unbounded","","",1,null],[0,"circ","","",null,null],[3,"Buf","hash_roll::circ","",null,null],[3,"Iter","","",null,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"new","","",2,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"push","","",2,null],[11,"iter","","",2,null],[11,"len","","",2,null],[11,"limit","","",2,null],[11,"as_slices","","",2,null],[11,"to_vec","","",2,null],[11,"eq","","",2,null],[11,"eq","","",2,null],[11,"index","","",2,null],[11,"index_mut","","",2,null],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"from","","",3,{"inputs":[{"name":"buf"}],"output":{"name":"self"}}],[11,"next","","",3,null],[0,"window","hash_roll","",null,null],[3,"Buf","hash_roll::window","",null,null],[11,"fmt","","",4,null],[11,"clone","","",4,null],[11,"new","","",4,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"push","","",4,null],[11,"len","","",4,null],[11,"window","","",4,null],[11,"into_vec","","",4,null],[11,"deref","","",4,null],[0,"slice","hash_roll","",null,null],[3,"SplitOn","hash_roll::slice","",null,null],[8,"SliceExt","","",null,null],[16,"Item","","",5,null],[10,"split_on","","",5,null],[11,"clone","","",6,null],[11,"next","","",6,null],[11,"size_hint","","",6,null],[11,"next_back","","",6,null],[8,"Splitter","hash_roll","",null,null],[11,"into_slices","","",7,null],[11,"as_slices","","",7,null],[11,"into_vecs","","",7,null],[11,"as_vecs","","",7,null],[10,"split","","Split data into 2 pieces using a given splitter.",7,null],[10,"next_iter","","Return chunks from a given iterator, split according to the splitter used.",7,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"clone","","",8,null],[11,"fmt","","",8,null],[11,"with_range","","Create a splitter using the range of output block sizes.",8,{"inputs":[{"name":"range"}],"output":{"name":"self"}}],[11,"with_average_size","","Create a splitter using the defaults from Zpaq (the compressor) given a average size is base\n2 (zpaq argument &quot;-fragment&quot;)",8,{"inputs":[{"name":"u8"}],"output":{"name":"self"}}],[11,"with_max_size","","Use the defaults from go-dedup to generate a splitter given the max size of a split.",8,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"with_average_and_range","","Create a splitter with control of all parameters",8,{"inputs":[{"name":"u8"},{"name":"range"}],"output":{"name":"self"}}],[11,"new","","Create a splitter using the defaults from Zpaq (the compressor)",8,{"inputs":[],"output":{"name":"self"}}],[11,"split","","",8,null],[11,"next_iter","","",8,null],[11,"fmt","","",9,null],[11,"clone","","",9,null],[11,"split","","",9,null],[11,"next_iter","","",9,null],[11,"new","","",9,{"inputs":[],"output":{"name":"rsyncable"}}],[11,"with_window_and_modulus","","",9,{"inputs":[{"name":"usize"},{"name":"u64"}],"output":{"name":"rsyncable"}}],[11,"clone","","",10,null],[11,"fmt","","",10,null],[11,"from","","",10,null],[11,"next","","",10,null],[11,"size_hint","","",10,null],[11,"clone","","",11,null],[11,"fmt","","",11,null],[11,"from","","",11,{"inputs":[{"name":"p"},{"name":"t"}],"output":{"name":"self"}}],[11,"next","","",11,null],[11,"size_hint","","",11,null]],"paths":[[3,"Range"],[4,"Bound"],[3,"Buf"],[3,"Iter"],[3,"Buf"],[8,"SliceExt"],[3,"SplitOn"],[8,"Splitter"],[3,"Zpaq"],[3,"Rsyncable"],[3,"SplitterSplit"],[3,"SplitterVecs"]]};
initSearch(searchIndex);
