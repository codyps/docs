var searchIndex={};
searchIndex["build_env"] = {"doc":"","i":[[3,"BuildEnv","build_env","Allow retrieval of values pretaining to a `build` process…",null,null],[3,"VarError","","Describes a variable retrieval failure",null,null],[4,"VarErrorKind","","If variable retrieval fails, it will be for one of these…",null,null],[13,"NotFound","","",0,null],[13,"NotString","","",0,null],[11,"from_env","","Use environment variables (such as those set by cargo) to…",1,[[],[["result",["buildenv","varerror"]],["varerror"],["buildenv"]]]],[11,"new_cross","","Construct a BuildEnv where the host and target may be…",1,[[["string"]],["buildenv"]]],[11,"new","","Construct a BuildEnv where target and host are the same.",1,[[["string"]],["buildenv"]]],[11,"target","","The target we're supplying values for",1,[[["self"]],["str"]]],[11,"host","","The host we're supplying values for",1,[[["self"]],["str"]]],[11,"var","","Query the environment for a value, trying the most…",1,[[["asref",["osstr"]],["self"],["osstr"]],[["option",["osstring"]],["osstring"]]]],[11,"var_str","","The same as Self::var(), but converts the return to an…",1,[[["osstr"],["asref",["osstr"]],["debug"],["self"],["any"]],[["varerror"],["result",["string","varerror"]],["string"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",1,[[["self"]],["buildenv"]]],[11,"clone","","",0,[[["self"]],["varerrorkind"]]],[11,"clone","","",2,[[["self"]],["varerror"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"description","","",2,[[["self"]],["str"]]]],"p":[[4,"VarErrorKind"],[3,"BuildEnv"],[3,"VarError"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);