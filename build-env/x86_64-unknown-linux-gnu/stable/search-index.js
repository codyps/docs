var searchIndex = {};
searchIndex["build_env"] = {"doc":"","items":[[3,"BuildEnv","build_env","Allow retrieval of values pretaining to a `build` process that may be related to the `target`\nand/or `host` triple.",null,null],[3,"VarError","","Describes a variable retrieval failure",null,null],[4,"VarErrorKind","","If variable retrieval fails, it will be for one of these reasons",null,null],[13,"NotFound","","",0,null],[13,"NotString","","",0,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"description","","",2,null],[11,"from_env","","Use environment variables (such as those set by cargo) to determine values for `target` and\n`host` via the environment variables `TARGET` and `HOST`.",1,{"inputs":[],"output":{"name":"result"}}],[11,"new_cross","","Construct a BuildEnv where the host and target _may_ be different.",1,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"buildenv"}}],[11,"new","","Construct a BuildEnv where target and host are the same.",1,{"inputs":[{"name":"string"}],"output":{"name":"buildenv"}}],[11,"target","","The target we&#39;re supplying values for",1,null],[11,"host","","The host we&#39;re supplying values for",1,null],[11,"var","","Query the environment for a value, trying the most specific first, before querying more\ngeneral variables.",1,null],[11,"var_str","","The same as Self::var(), but converts the return to an OsString and provides a useful error\nmessage",1,null]],"paths":[[4,"VarErrorKind"],[3,"BuildEnv"],[3,"VarError"]]};
initSearch(searchIndex);
