var searchIndex = {};
searchIndex["systemd"] = {"doc":"","items":[[11,"from","alloc::boxed","",0,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",0,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",0,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",0,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",0,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"from","","",0,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",1,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"str"}}],[11,"description","","",2,{"inputs":[{"name":"utf8error"}],"output":{"name":"str"}}],[11,"description","core::num","",3,{"inputs":[{"name":"parseinterror"}],"output":{"name":"str"}}],[11,"description","core::num::dec2flt","",4,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"str"}}],[11,"description","collections::string","",5,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"str"}}],[11,"description","","",6,{"inputs":[{"name":"fromutf16error"}],"output":{"name":"str"}}],[11,"description","","",7,{"inputs":[{"name":"parseerror"}],"output":{"name":"str"}}],[11,"description","alloc::boxed","",0,{"inputs":[{"name":"box"}],"output":{"name":"str"}}],[11,"cause","","",0,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"is","","Returns true if the boxed type is the same as `T`",8,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",8,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",8,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",8,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",8,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",8,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",8,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",8,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",8,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",8,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",8,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",8,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"next","std::ascii","",9,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",9,null],[11,"next_back","","",9,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"shl","core::num","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",10,null],[11,"shr","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",10,null],[11,"shl","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",10,null],[11,"shr","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",10,null],[11,"shl","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",10,null],[11,"shr","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",10,null],[11,"shl","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",10,null],[11,"shr","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",10,null],[11,"shl","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",10,null],[11,"shr","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",10,null],[11,"shl","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",10,null],[11,"shr","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",10,null],[11,"shl","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",10,null],[11,"shr","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",10,null],[11,"shl","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",10,null],[11,"shr","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",10,null],[11,"shl","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",10,null],[11,"shr","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",10,null],[11,"shl","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",10,null],[11,"shr","","",10,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",10,null],[11,"add","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",10,null],[11,"sub","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",10,null],[11,"mul","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",10,null],[11,"div","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",10,null],[11,"rem","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",10,null],[11,"not","","",10,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",10,null],[11,"bitor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",10,null],[11,"bitand","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",10,null],[11,"add","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",10,null],[11,"sub","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",10,null],[11,"mul","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",10,null],[11,"div","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",10,null],[11,"rem","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",10,null],[11,"not","","",10,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",10,null],[11,"bitor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",10,null],[11,"bitand","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",10,null],[11,"add","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",10,null],[11,"sub","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",10,null],[11,"mul","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",10,null],[11,"div","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",10,null],[11,"rem","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",10,null],[11,"not","","",10,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",10,null],[11,"bitor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",10,null],[11,"bitand","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",10,null],[11,"add","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",10,null],[11,"sub","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",10,null],[11,"mul","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",10,null],[11,"div","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",10,null],[11,"rem","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",10,null],[11,"not","","",10,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",10,null],[11,"bitor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",10,null],[11,"bitand","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",10,null],[11,"add","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",10,null],[11,"sub","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",10,null],[11,"mul","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",10,null],[11,"div","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",10,null],[11,"rem","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",10,null],[11,"not","","",10,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",10,null],[11,"bitor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",10,null],[11,"bitand","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",10,null],[11,"add","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",10,null],[11,"sub","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",10,null],[11,"mul","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",10,null],[11,"div","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",10,null],[11,"rem","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",10,null],[11,"not","","",10,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",10,null],[11,"bitor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",10,null],[11,"bitand","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",10,null],[11,"add","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",10,null],[11,"sub","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",10,null],[11,"mul","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",10,null],[11,"div","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",10,null],[11,"rem","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",10,null],[11,"not","","",10,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",10,null],[11,"bitor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",10,null],[11,"bitand","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",10,null],[11,"add","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",10,null],[11,"sub","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",10,null],[11,"mul","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",10,null],[11,"div","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",10,null],[11,"rem","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",10,null],[11,"not","","",10,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",10,null],[11,"bitor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",10,null],[11,"bitand","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",10,null],[11,"add","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",10,null],[11,"sub","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",10,null],[11,"mul","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",10,null],[11,"div","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",10,null],[11,"rem","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",10,null],[11,"not","","",10,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",10,null],[11,"bitor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",10,null],[11,"bitand","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",10,null],[11,"add","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",10,null],[11,"sub","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",10,null],[11,"mul","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",10,null],[11,"div","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",10,null],[11,"rem","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",10,null],[11,"not","","",10,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",10,null],[11,"bitor","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",10,null],[11,"bitand","","",10,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",10,null],[11,"clone","std::thread::local","",11,{"inputs":[{"name":"localkeystate"}],"output":{"name":"localkeystate"}}],[11,"eq","","",11,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"with","","Acquires a reference to the value in this TLS key.",12,{"inputs":[{"name":"localkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"state","","Query the current state of this key.",12,{"inputs":[{"name":"localkey"}],"output":{"name":"localkeystate"}}],[11,"set","std::thread::scoped_tls","Inserts a value into this scoped thread local storage slot for a\nduration of a closure.",13,{"inputs":[{"name":"scopedkey"},{"name":"t"},{"name":"f"}],"output":{"name":"r"}}],[11,"with","","Gets a value out of this scoped variable.",13,{"inputs":[{"name":"scopedkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"is_set","","Test whether this TLS key has been `set` for the current thread.",13,{"inputs":[{"name":"scopedkey"}],"output":{"name":"bool"}}],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",14,{"inputs":[],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",14,{"inputs":[{"name":"builder"},{"name":"string"}],"output":{"name":"builder"}}],[11,"stack_size","","Sets the size of the stack for the new thread.",14,{"inputs":[{"name":"builder"},{"name":"usize"}],"output":{"name":"builder"}}],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",14,{"inputs":[{"name":"builder"},{"name":"f"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"thread"}],"output":{"name":"thread"}}],[11,"unpark","","Atomically makes the handle&#39;s token available if it is not already.",15,null],[11,"name","","Gets the thread&#39;s name.",15,{"inputs":[{"name":"thread"}],"output":{"name":"option"}}],[11,"fmt","","",15,{"inputs":[{"name":"thread"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",15,{"inputs":[{"name":"option"}],"output":{"name":"thread"}}],[11,"thread","","Extracts a handle to the underlying thread",16,{"inputs":[{"name":"joinhandle"}],"output":{"name":"thread"}}],[11,"join","","Waits for the associated thread to finish.",16,{"inputs":[{"name":"joinhandle"}],"output":{"name":"result"}}],[11,"clone","std::collections::hash::table","",17,{"inputs":[{"name":"rawbucket"}],"output":{"name":"rawbucket"}}],[11,"clone","","",18,{"inputs":[{"name":"bucket"}],"output":{"name":"bucket"}}],[11,"clone","","",19,{"inputs":[{"name":"safehash"}],"output":{"name":"safehash"}}],[11,"eq","","",19,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"inspect","","Peek at the hash value, which is guaranteed to be non-zero.",19,{"inputs":[{"name":"safehash"}],"output":{"name":"u64"}}],[11,"table","","Borrow a reference to the table.",20,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",20,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",20,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"table","","Borrow a reference to the table.",21,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",21,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",18,{"inputs":[{"name":"bucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",18,{"inputs":[{"name":"bucket"}],"output":{"name":"usize"}}],[11,"new","","",18,{"inputs":[{"name":"m"},{"name":"safehash"}],"output":{"name":"bucket"}}],[11,"at_index","","",18,{"inputs":[{"name":"m"},{"name":"usize"}],"output":{"name":"bucket"}}],[11,"first","","",18,{"inputs":[{"name":"m"}],"output":{"name":"bucket"}}],[11,"peek","","Reads a bucket at a given index, returning an enum indicating whether\nit&#39;s initialized or not. You need to match on this enum to get\nthe appropriate types to call most of the other functions in\nthis module.",18,{"inputs":[{"name":"bucket"}],"output":{"name":"bucketstate"}}],[11,"next","","Modifies the bucket pointer in place to make it point to the next slot.",18,null],[11,"next","","",21,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",21,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"gap_peek","","",21,{"inputs":[{"name":"emptybucket"}],"output":{"name":"option"}}],[11,"put","","Puts given key and value pair, along with the key&#39;s hash,\ninto this bucket in the hashtable. Note how `self` is &#39;moved&#39; into\nthis function, because this slot will no longer be empty when\nwe return! A `FullBucket` is returned for later use, pointing to\nthe newly-filled slot in the hashtable.",21,{"inputs":[{"name":"emptybucket"},{"name":"safehash"},{"name":"k"},{"name":"v"}],"output":{"name":"fullbucket"}}],[11,"next","","",20,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",20,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"distance","","Get the distance between this bucket and the &#39;ideal&#39; location\nas determined by the key&#39;s hash stored in it.",20,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"hash","","",20,{"inputs":[{"name":"fullbucket"}],"output":{"name":"safehash"}}],[11,"read","","Gets references to the key and value at a given index.",20,null],[11,"take","","Removes this bucket&#39;s key and value from the hashtable.",20,null],[11,"replace","","",20,null],[11,"read_mut","","Gets mutable references to the key and value at a given index.",20,null],[11,"into_refs","","Exchange a bucket state for immutable references into the table.\nBecause the underlying reference to the table is also consumed,\nno further changes to the structure of the table are possible;\nin exchange for this, the returned references have a longer lifetime\nthan the references returned by `read()`.",20,null],[11,"into_mut_refs","","This works similarly to `into_refs`, exchanging a bucket state\nfor mutable references into the table.",20,null],[11,"expect_full","","",22,{"inputs":[{"name":"bucketstate"}],"output":{"name":"fullbucket"}}],[11,"full","","",23,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"fullbucket"}}],[11,"shift","","",23,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"option"}}],[11,"new","","Creates a new raw table from a given capacity. All buckets are\ninitially empty.",24,{"inputs":[{"name":"usize"}],"output":{"name":"rawtable"}}],[11,"capacity","","The hashtable&#39;s capacity, similar to a vector&#39;s.",24,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"size","","The number of elements ever `put` in the hashtable, minus the number\nof elements ever `take`n.",24,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"iter","","",24,{"inputs":[{"name":"rawtable"}],"output":{"name":"iter"}}],[11,"iter_mut","","",24,{"inputs":[{"name":"rawtable"}],"output":{"name":"itermut"}}],[11,"into_iter","","",24,{"inputs":[{"name":"rawtable"}],"output":{"name":"intoiter"}}],[11,"drain","","",24,{"inputs":[{"name":"rawtable"}],"output":{"name":"drain"}}],[11,"clone","","",25,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"rawbuckets"}}],[11,"next","","",25,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"option"}}],[11,"next","","",26,{"inputs":[{"name":"revmovebuckets"}],"output":{"name":"option"}}],[11,"clone","","",27,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",27,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",27,null],[11,"len","","",27,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",28,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",28,null],[11,"len","","",28,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",29,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",29,null],[11,"len","","",29,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",30,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",30,null],[11,"len","","",30,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"drop","","",30,null],[11,"clone","","",24,{"inputs":[{"name":"rawtable"}],"output":{"name":"rawtable"}}],[11,"drop","","",24,null],[11,"clone","std::collections::hash::map","",31,{"inputs":[{"name":"defaultresizepolicy"}],"output":{"name":"defaultresizepolicy"}}],[11,"clone","","",32,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"new","","Creates an empty HashMap.",32,{"inputs":[],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",32,{"inputs":[{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hasher","","Creates an empty hashmap which will use the given hash builder to hash\nkeys.",32,{"inputs":[{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_hash_state","","Deprecated, renamed to `with_hasher`",32,{"inputs":[{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hasher","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",32,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hash_state","","Deprecated, renamed to `with_capacity_and_hasher`",32,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"hasher","","Returns a reference to the map&#39;s hasher.",32,{"inputs":[{"name":"hashmap"}],"output":{"name":"s"}}],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",32,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",32,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",32,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&amp;&#39;a K`.",32,{"inputs":[{"name":"hashmap"}],"output":{"name":"keys"}}],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&amp;&#39;a V`.",32,{"inputs":[{"name":"hashmap"}],"output":{"name":"values"}}],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a V)`.",32,{"inputs":[{"name":"hashmap"}],"output":{"name":"iter"}}],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a mut V)`.",32,{"inputs":[{"name":"hashmap"}],"output":{"name":"itermut"}}],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",32,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"entry"}}],[11,"len","","Returns the number of elements in the map.",32,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",32,{"inputs":[{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",32,{"inputs":[{"name":"hashmap"}],"output":{"name":"drain"}}],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",32,null],[11,"get","","Returns a reference to the value corresponding to the key.",32,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",32,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",32,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map.",32,{"inputs":[{"name":"hashmap"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",32,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",32,{"inputs":[{"name":"hashmap"},{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"fmt","","",32,{"inputs":[{"name":"hashmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",32,{"inputs":[],"output":{"name":"hashmap"}}],[11,"index","","",32,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"v"}}],[11,"clone","","",33,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",34,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"clone","","",35,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",32,{"inputs":[{"name":"hashmap"}],"output":{"name":"intoiter"}}],[11,"next","","",33,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",33,null],[11,"len","","",33,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",36,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",36,null],[11,"len","","",36,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",37,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",37,null],[11,"len","","",37,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",34,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",34,null],[11,"len","","",34,{"inputs":[{"name":"keys"}],"output":{"name":"usize"}}],[11,"next","","",35,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",35,null],[11,"len","","",35,{"inputs":[{"name":"values"}],"output":{"name":"usize"}}],[11,"next","","",38,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",38,null],[11,"len","","",38,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",39,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",39,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",40,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",40,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",40,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry, and returns the entry&#39;s old value",40,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value out of the entry, and returns it",40,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it",41,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"from_iter","","",32,{"inputs":[{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",32,null],[11,"extend","","",32,null],[11,"clone","","",42,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",42,{"inputs":[],"output":{"name":"randomstate"}}],[11,"build_hasher","","",42,{"inputs":[{"name":"randomstate"}],"output":{"name":"siphasher"}}],[11,"default","","",42,{"inputs":[],"output":{"name":"randomstate"}}],[11,"get","","",32,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"take","","",32,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"replace","","",32,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"option"}}],[11,"clone","std::collections::hash::set","",43,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"new","","Creates an empty HashSet.",43,{"inputs":[],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",43,{"inputs":[{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hasher","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",43,{"inputs":[{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hasher","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",43,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"hasher","","Returns a reference to the set&#39;s hasher.",43,{"inputs":[{"name":"hashset"}],"output":{"name":"s"}}],[11,"with_hash_state","","Deprecated, renamed to `with_hasher`",43,{"inputs":[{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hash_state","","Deprecated, renamed to `with_capacity_and_hasher`",43,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",43,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",43,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",43,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &amp;&#39;a T.",43,{"inputs":[{"name":"hashset"}],"output":{"name":"iter"}}],[11,"difference","","Visit the values representing the difference.",43,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",43,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"symmetricdifference"}}],[11,"intersection","","Visit the values representing the intersection.",43,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"intersection"}}],[11,"union","","Visit the values representing the union.",43,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"union"}}],[11,"len","","Returns the number of elements in the set.",43,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the set contains no elements.",43,{"inputs":[{"name":"hashset"}],"output":{"name":"bool"}}],[11,"drain","","Clears the set, returning all elements in an iterator.",43,{"inputs":[{"name":"hashset"}],"output":{"name":"drain"}}],[11,"clear","","Clears the set, removing all values.",43,null],[11,"contains","","Returns `true` if the set contains a value.",43,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",43,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"option"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",43,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",43,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",43,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set.",43,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"bool"}}],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",43,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"option"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",43,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",43,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",43,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"fmt","","",43,{"inputs":[{"name":"hashset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",43,{"inputs":[{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",43,null],[11,"extend","","",43,null],[11,"default","","",43,{"inputs":[],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",43,{"inputs":[{"name":"hashset"}],"output":{"name":"intoiter"}}],[11,"clone","","",44,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",44,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",44,null],[11,"len","","",44,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",45,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",45,null],[11,"len","","",45,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",46,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",46,null],[11,"len","","",46,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"clone","","",47,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"next","","",47,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"size_hint","","",47,null],[11,"clone","","",48,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"next","","",48,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"size_hint","","",48,null],[11,"clone","","",49,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[11,"next","","",49,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"size_hint","","",49,null],[11,"clone","","",50,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"next","","",50,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"size_hint","","",50,null],[11,"hasher","std::collections::hash::state","",51,{"inputs":[{"name":"defaultstate"}],"output":{"name":"h"}}],[11,"clone","","",51,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"default","","",51,{"inputs":[],"output":{"name":"defaultstate"}}],[11,"clone","collections::binary_heap","",52,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"clone_from","","",52,null],[11,"default","","",52,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"fmt","","",52,{"inputs":[{"name":"binaryheap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",52,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",52,{"inputs":[{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",52,{"inputs":[{"name":"binaryheap"}],"output":{"name":"iter"}}],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",52,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",52,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",52,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",52,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",52,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",52,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"push","","Pushes an item onto the binary heap.",52,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",52,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"t"}}],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",52,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"option"}}],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",52,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",52,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of the binary heap.",52,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"is_empty","","Checks if the binary heap is empty.",52,{"inputs":[{"name":"binaryheap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",52,{"inputs":[{"name":"binaryheap"}],"output":{"name":"drain"}}],[11,"clear","","Drops all items from the binary heap.",52,null],[11,"drop","","",53,null],[11,"clone","","",54,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",54,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",54,null],[11,"next_back","","",54,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",55,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",55,null],[11,"next_back","","",55,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"next","","",56,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",56,null],[11,"next_back","","",56,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"from","","",52,{"inputs":[{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",57,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",52,{"inputs":[{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",52,{"inputs":[{"name":"binaryheap"}],"output":{"name":"intoiter"}}],[11,"extend","","",52,null],[11,"extend","","",52,null],[11,"clone","collections::linked_list","",58,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",59,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"from","","",60,{"inputs":[{"name":"option"}],"output":{"name":"rawlink"}}],[11,"clone","","",60,{"inputs":[{"name":"rawlink"}],"output":{"name":"rawlink"}}],[11,"default","","",61,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",61,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",61,null],[11,"iter","","Provides a forward iterator.",61,{"inputs":[{"name":"linkedlist"}],"output":{"name":"iter"}}],[11,"iter_mut","","Provides a forward iterator with mutable references.",61,{"inputs":[{"name":"linkedlist"}],"output":{"name":"itermut"}}],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",61,{"inputs":[{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"len","","Returns the length of the `LinkedList`.",61,{"inputs":[{"name":"linkedlist"}],"output":{"name":"usize"}}],[11,"clear","","Removes all elements from the `LinkedList`.",61,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",61,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",61,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",61,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",61,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_front","","Adds an element first in the list.",61,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",61,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_back","","Appends an element to the back of a list",61,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",61,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",61,{"inputs":[{"name":"linkedlist"},{"name":"usize"}],"output":{"name":"linkedlist"}}],[11,"front_place","","Returns a place for insertion at the front of the list.",61,{"inputs":[{"name":"linkedlist"}],"output":{"name":"frontplace"}}],[11,"back_place","","Returns a place for insertion at the back of the list.",61,{"inputs":[{"name":"linkedlist"}],"output":{"name":"backplace"}}],[11,"drop","","",61,null],[11,"next","","",58,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",58,null],[11,"next_back","","",58,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",62,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",62,null],[11,"next_back","","",62,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",62,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",62,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",59,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",59,null],[11,"next_back","","",59,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","",61,{"inputs":[{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",61,{"inputs":[{"name":"linkedlist"}],"output":{"name":"intoiter"}}],[11,"extend","","",61,null],[11,"extend","","",61,null],[11,"eq","","",61,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",61,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"cmp","","",61,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"ordering"}}],[11,"clone","","",61,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"fmt","","",61,{"inputs":[{"name":"linkedlist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",61,null],[11,"make_place","","",63,{"inputs":[{"name":"frontplace"}],"output":{"name":"frontplace"}}],[11,"pointer","","",63,null],[11,"finalize","","",63,null],[11,"make_place","","",64,{"inputs":[{"name":"backplace"}],"output":{"name":"backplace"}}],[11,"pointer","","",64,null],[11,"finalize","","",64,null],[11,"clone","collections::vec_deque","",65,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"drop","","",65,null],[11,"default","","",65,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",65,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",65,{"inputs":[{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",65,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",65,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap","","Swaps elements at indices `i` and `j`.",65,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",65,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",65,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",65,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",65,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",65,null],[11,"iter","","Returns a front-to-back iterator.",65,{"inputs":[{"name":"vecdeque"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",65,{"inputs":[{"name":"vecdeque"}],"output":{"name":"itermut"}}],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",65,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",65,null],[11,"len","","Returns the number of elements in the `VecDeque`.",65,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the buffer contains no elements",65,{"inputs":[{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items.",65,{"inputs":[{"name":"vecdeque"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the buffer, removing all values.",65,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",65,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",65,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",65,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",65,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",65,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"push_front","","Inserts an element first in the sequence.",65,null],[11,"push_back","","Appends an element to the back of a buffer",65,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",65,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",65,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",65,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",65,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",65,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"split_off","","Splits the collection into two at the given index.",65,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",65,null],[11,"retain","","Retains only the elements specified by the predicate.",65,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",65,null],[11,"clone","","",66,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",66,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",66,null],[11,"next_back","","",66,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",67,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",67,null],[11,"next_back","","",67,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",68,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",68,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",68,null],[11,"next_back","","",68,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",69,null],[11,"next","","",69,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",69,null],[11,"next_back","","",69,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"eq","","",65,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",65,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"cmp","","",65,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"ordering"}}],[11,"hash","","",65,null],[11,"index","","",65,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"index_mut","","",65,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"from_iter","","",65,{"inputs":[{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",65,{"inputs":[{"name":"vecdeque"}],"output":{"name":"intoiter"}}],[11,"extend","","",65,null],[11,"extend","","",65,null],[11,"fmt","","",65,{"inputs":[{"name":"vecdeque"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","std::dynamic_lib","",70,null],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",70,{"inputs":[{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process&#39;s search path for dynamic libraries",70,null],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",70,null],[11,"envvar","","Returns the environment variable for this process&#39;s dynamic library\nsearch path",70,{"inputs":[],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",70,{"inputs":[],"output":{"name":"vec"}}],[11,"symbol","","Accesses the value at the symbol of the dynamic library.",70,{"inputs":[{"name":"dynamiclibrary"},{"name":"str"}],"output":{"name":"result"}}],[11,"next","std::env","",71,{"inputs":[{"name":"vars"}],"output":{"name":"option"}}],[11,"size_hint","","",71,null],[11,"next","","",72,{"inputs":[{"name":"varsos"}],"output":{"name":"option"}}],[11,"size_hint","","",72,null],[11,"clone","","",73,{"inputs":[{"name":"varerror"}],"output":{"name":"varerror"}}],[11,"eq","","",73,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"fmt","","",73,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",73,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",73,{"inputs":[{"name":"varerror"}],"output":{"name":"str"}}],[11,"next","","",74,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",74,null],[11,"fmt","","",75,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",75,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",75,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",76,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",76,null],[11,"len","","",76,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",77,{"inputs":[{"name":"argsos"}],"output":{"name":"option"}}],[11,"size_hint","","",77,null],[11,"len","","",77,{"inputs":[{"name":"argsos"}],"output":{"name":"usize"}}],[11,"clone","std::ffi::c_str","",78,{"inputs":[{"name":"cstring"}],"output":{"name":"cstring"}}],[11,"hash","","",78,null],[11,"cmp","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"option"}}],[11,"lt","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"le","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"gt","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ge","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"eq","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ne","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"hash","","",79,null],[11,"fmt","","",80,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",80,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"ne","","",80,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"clone","","",80,{"inputs":[{"name":"nulerror"}],"output":{"name":"nulerror"}}],[11,"fmt","","",81,{"inputs":[{"name":"intostringerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",81,{"inputs":[{"name":"intostringerror"},{"name":"intostringerror"}],"output":{"name":"bool"}}],[11,"ne","","",81,{"inputs":[{"name":"intostringerror"},{"name":"intostringerror"}],"output":{"name":"bool"}}],[11,"clone","","",81,{"inputs":[{"name":"intostringerror"}],"output":{"name":"intostringerror"}}],[11,"new","","Creates a new C-compatible string from a container of bytes.",78,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",78,{"inputs":[{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_raw","","Retakes ownership of a `CString` that was transferred to C.",78,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",78,null],[11,"into_string","","Converts the `CString` into a `String` if it contains valid Unicode data.",78,{"inputs":[{"name":"cstring"}],"output":{"name":"result"}}],[11,"into_bytes","","Returns the underlying byte buffer.",78,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"into_bytes_with_nul","","Equivalent to the `into_bytes` function except that the returned vector\nincludes the trailing nul byte.",78,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",78,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",78,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",79,null],[11,"from_bytes_with_nul","","Creates a C string wrapper from a byte slice.",79,null],[11,"from_bytes_with_nul_unchecked","","Unsafely creates a C string wrapper from a byte slice.",79,null],[11,"as_ptr","","Returns the inner pointer to this C string.",79,null],[11,"to_bytes","","Converts this C string to a byte slice.",79,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",79,null],[11,"to_str","","Yields a `&amp;str` slice if the `CStr` contains valid UTF-8.",79,{"inputs":[{"name":"cstr"}],"output":{"name":"result"}}],[11,"to_string_lossy","","Converts a `CStr` into a `Cow&lt;str&gt;`.",79,{"inputs":[{"name":"cstr"}],"output":{"name":"cow"}}],[11,"deref","","",78,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"fmt","","",78,{"inputs":[{"name":"cstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","collections::vec","",57,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"fmt","std::ffi::c_str","",79,{"inputs":[{"name":"cstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",78,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",80,{"inputs":[{"name":"nulerror"}],"output":{"name":"usize"}}],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",80,{"inputs":[{"name":"nulerror"}],"output":{"name":"vec"}}],[11,"description","","",80,{"inputs":[{"name":"nulerror"}],"output":{"name":"str"}}],[11,"fmt","","",80,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","std::io::error","",82,{"inputs":[{"name":"nulerror"}],"output":{"name":"error"}}],[11,"into_cstring","std::ffi::c_str","Consumes this error, returning original `CString` which generated the\nerror.",81,{"inputs":[{"name":"intostringerror"}],"output":{"name":"cstring"}}],[11,"utf8_error","","Access the underlying UTF-8 error that was the cause of this error.",81,{"inputs":[{"name":"intostringerror"}],"output":{"name":"utf8error"}}],[11,"description","","",81,{"inputs":[{"name":"intostringerror"}],"output":{"name":"str"}}],[11,"cause","","",81,{"inputs":[{"name":"intostringerror"}],"output":{"name":"option"}}],[11,"fmt","","",81,{"inputs":[{"name":"intostringerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",79,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",79,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"option"}}],[11,"cmp","","",79,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"ordering"}}],[11,"to_owned","","",79,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"from","","",78,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"index","","",78,{"inputs":[{"name":"cstring"},{"name":"rangefull"}],"output":{"name":"cstr"}}],[11,"as_ref","","",79,{"inputs":[{"name":"cstr"}],"output":{"name":"cstr"}}],[11,"as_ref","","",78,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"clone","std::ffi::os_str","",83,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"new","","Constructs a new empty `OsString`.",83,{"inputs":[],"output":{"name":"osstring"}}],[11,"from_bytes","","Constructs an `OsString` from a byte sequence.",83,{"inputs":[{"name":"b"}],"output":{"name":"option"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",83,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",83,{"inputs":[{"name":"osstring"}],"output":{"name":"result"}}],[11,"push","","Extends the string with the given `&amp;OsStr` slice.",83,null],[11,"with_capacity","","Creates a new `OsString` with the given capacity. The string will be\nable to hold exactly `capacity` bytes without reallocating. If\n`capacity` is 0, the string will not allocate.",83,{"inputs":[{"name":"usize"}],"output":{"name":"osstring"}}],[11,"clear","","Truncates the `OsString` to zero length.",83,null],[11,"capacity","","Returns the number of bytes this `OsString` can hold without\nreallocating.",83,{"inputs":[{"name":"osstring"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `OsString`. The collection may reserve more space to avoid\nfrequent reallocations.",83,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more bytes to be\ninserted in the given `OsString`. Does nothing if the capacity is\nalready sufficient.",83,null],[11,"from","","",83,{"inputs":[{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",83,{"inputs":[{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",83,{"inputs":[{"name":"osstring"},{"name":"rangefull"}],"output":{"name":"osstr"}}],[11,"new","","Coerces into an `OsStr` slice.",84,{"inputs":[{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&amp;str` slice if the `OsStr` is valid unicode.",84,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow&lt;str&gt;`.",84,{"inputs":[{"name":"osstr"}],"output":{"name":"cow"}}],[11,"to_os_string","","Copies the slice into an owned `OsString`.",84,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"to_bytes","","Yields this `OsStr` as a byte slice.",84,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_cstring","","Creates a `CString` containing this `OsStr` data.",84,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether the `OsStr` is empty.",84,{"inputs":[{"name":"osstr"}],"output":{"name":"bool"}}],[11,"len","","Returns the number of bytes in this `OsStr`.",84,{"inputs":[{"name":"osstr"}],"output":{"name":"usize"}}],[11,"deref","","",83,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"fmt","","",83,{"inputs":[{"name":"osstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",83,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","","",83,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",83,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"lt","","",83,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"le","","",83,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"gt","","",83,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"ge","","",83,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",83,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",83,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"ordering"}}],[11,"hash","","",83,null],[11,"eq","","",84,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","","",84,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",84,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"lt","","",84,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"le","","",84,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"gt","","",84,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"ge","","",84,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",84,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",84,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"ordering"}}],[11,"eq","","",83,{"inputs":[{"name":"osstring"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","","",84,{"inputs":[{"name":"osstr"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",83,{"inputs":[{"name":"osstring"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"partial_cmp","","",84,{"inputs":[{"name":"osstr"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"eq","","",83,{"inputs":[{"name":"osstring"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",83,{"inputs":[{"name":"osstring"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",85,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",84,{"inputs":[{"name":"osstr"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",85,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",84,{"inputs":[{"name":"osstr"},{"name":"cow"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",85,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",85,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"eq","","",85,{"inputs":[{"name":"cow"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",83,{"inputs":[{"name":"osstring"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",85,{"inputs":[{"name":"cow"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",83,{"inputs":[{"name":"osstring"},{"name":"cow"}],"output":{"name":"option"}}],[11,"hash","","",84,null],[11,"fmt","","",84,{"inputs":[{"name":"osstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",83,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"to_owned","","",84,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"as_ref","","",84,{"inputs":[{"name":"osstr"}],"output":{"name":"osstr"}}],[11,"as_ref","","",83,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"as_ref","collections::string","",86,{"inputs":[{"name":"string"}],"output":{"name":"osstr"}}],[11,"clone","std::fs","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"metadata"}}],[11,"clone","","",88,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",89,{"inputs":[{"name":"permissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",89,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"clone","","",89,{"inputs":[{"name":"permissions"}],"output":{"name":"permissions"}}],[11,"hash","","",90,null],[11,"eq","","",90,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",90,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"open","","Attempts to open a file in read-only mode.",91,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",91,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",91,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",91,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",91,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"metadata","","Queries metadata about the underlying file.",91,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying file.",91,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fmt","","",91,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",91,null],[11,"read_to_end","","",91,{"inputs":[{"name":"file"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",91,null],[11,"flush","","",91,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",91,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"new","","Creates a blank new set of options ready for configuration.",88,{"inputs":[],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",88,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"write","","Sets the option for write access.",88,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"append","","Sets the option for the append mode.",88,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"truncate","","Sets the option for truncating a previous file.",88,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"create","","Sets the option for creating a new file.",88,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"create_new","","Sets the option to always create a new file.",88,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"open","","Opens a file at `path` with the options specified by `self`.",88,{"inputs":[{"name":"openoptions"},{"name":"p"}],"output":{"name":"result"}}],[11,"file_type","","Returns the file type for this metadata.",87,{"inputs":[{"name":"metadata"}],"output":{"name":"filetype"}}],[11,"is_dir","","Returns whether this metadata is for a directory.",87,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"is_file","","Returns whether this metadata is for a regular file.",87,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"permissions","","Returns the permissions of the file this metadata is for.",87,{"inputs":[{"name":"metadata"}],"output":{"name":"permissions"}}],[11,"modified","","Returns the last modification time listed in this metadata.",87,{"inputs":[{"name":"metadata"}],"output":{"name":"result"}}],[11,"accessed","","Returns the last access time of this metadata.",87,{"inputs":[{"name":"metadata"}],"output":{"name":"result"}}],[11,"created","","Returns the creation time listed in the this metadata.",87,{"inputs":[{"name":"metadata"}],"output":{"name":"result"}}],[11,"readonly","","Returns whether these permissions describe a readonly file.",89,{"inputs":[{"name":"permissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",89,null],[11,"is_dir","","Test whether this file type represents a directory.",90,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","Test whether this file type represents a regular file.",90,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","Test whether this file type represents a symbolic link.",90,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"next","","",92,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"path","","Returns the full path to the file that this entry represents.",93,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"metadata","","Return the metadata for the file that this entry points at.",93,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","Return the file type for the file that this entry points at.",93,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",93,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"next","","",94,{"inputs":[{"name":"walkdir"}],"output":{"name":"option"}}],[11,"new","","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",95,{"inputs":[],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",95,{"inputs":[{"name":"dirbuilder"},{"name":"bool"}],"output":{"name":"dirbuilder"}}],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",95,{"inputs":[{"name":"dirbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",96,{"inputs":[{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",96,{"inputs":[{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",96,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"get_mut","","Gets a mutable reference to the underlying reader.",96,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",96,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"read","","",96,null],[11,"fill_buf","","",96,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[11,"consume","","",96,null],[11,"fmt","","",96,{"inputs":[{"name":"bufreader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",96,{"inputs":[{"name":"bufreader"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fmt","","",97,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",98,{"inputs":[{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",98,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",98,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",98,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",98,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"write","","",98,null],[11,"flush","","",98,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"fmt","","",98,{"inputs":[{"name":"bufwriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",98,{"inputs":[{"name":"bufwriter"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"drop","","",98,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",97,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"into_inner","","Returns the buffered writer instance which generated the error.",97,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"w"}}],[11,"from","std::io::error","",82,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",97,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"str"}}],[11,"fmt","","",97,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `LineWriter`.",99,{"inputs":[{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",99,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",99,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",99,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",99,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"write","","",99,null],[11,"flush","","",99,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"fmt","","",99,{"inputs":[{"name":"linewriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","std::io::cursor","",100,{"inputs":[{"name":"cursor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",100,{"inputs":[{"name":"cursor"}],"output":{"name":"cursor"}}],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",100,{"inputs":[{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",100,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",100,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",100,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"position","","Returns the current position of this cursor.",100,{"inputs":[{"name":"cursor"}],"output":{"name":"u64"}}],[11,"set_position","","Sets the position of this cursor.",100,null],[11,"seek","","",100,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"read","","",100,null],[11,"fill_buf","","",100,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",100,null],[11,"write","","",100,null],[11,"flush","","",100,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",100,null],[11,"flush","","",100,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",100,null],[11,"flush","","",100,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"fmt","std::io::error","",82,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",101,{"inputs":[{"name":"custom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",102,{"inputs":[{"name":"errorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",102,{"inputs":[{"name":"errorkind"}],"output":{"name":"errorkind"}}],[11,"eq","","",102,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"ne","","",102,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",82,{"inputs":[{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",82,{"inputs":[],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",82,{"inputs":[{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",82,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",82,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",82,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",82,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",82,{"inputs":[{"name":"error"}],"output":{"name":"errorkind"}}],[11,"fmt","","",103,{"inputs":[{"name":"repr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",82,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",82,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",82,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"read","alloc::boxed","",0,null],[11,"read_to_end","","",0,{"inputs":[{"name":"box"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",0,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"read_exact","","",0,null],[11,"write","","",0,null],[11,"flush","","",0,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"write_all","","",0,null],[11,"write_fmt","","",0,{"inputs":[{"name":"box"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"seek","","",0,{"inputs":[{"name":"box"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fill_buf","","",0,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"consume","","",0,null],[11,"read_until","","",0,{"inputs":[{"name":"box"},{"name":"u8"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_line","","",0,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"write","collections::vec","",57,null],[11,"write_all","","",57,null],[11,"flush","","",57,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"new","std::io::lazy","",104,null],[11,"get","","",104,{"inputs":[{"name":"lazy"}],"output":{"name":"option"}}],[11,"read","std::io::util","",105,null],[11,"fill_buf","","",105,{"inputs":[{"name":"empty"}],"output":{"name":"result"}}],[11,"consume","","",105,null],[11,"read","","",106,null],[11,"write","","",107,null],[11,"flush","","",107,{"inputs":[{"name":"sink"}],"output":{"name":"result"}}],[11,"read","std::io::stdio","",108,null],[11,"write","","",109,null],[11,"flush","","",109,{"inputs":[{"name":"stdoutraw"}],"output":{"name":"result"}}],[11,"write","","",110,null],[11,"flush","","",110,{"inputs":[{"name":"stderrraw"}],"output":{"name":"result"}}],[11,"write","","",111,null],[11,"flush","","",111,{"inputs":[{"name":"maybe"}],"output":{"name":"result"}}],[11,"read","","",111,null],[11,"lock","","Locks this handle to the standard input stream, returning a readable\nguard.",112,{"inputs":[{"name":"stdin"}],"output":{"name":"stdinlock"}}],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",112,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read","","",112,null],[11,"read_to_end","","",112,{"inputs":[{"name":"stdin"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",112,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read_exact","","",112,null],[11,"read","","",113,null],[11,"read_to_end","","",113,{"inputs":[{"name":"stdinlock"},{"name":"vec"}],"output":{"name":"result"}}],[11,"fill_buf","","",113,{"inputs":[{"name":"stdinlock"}],"output":{"name":"result"}}],[11,"consume","","",113,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",114,{"inputs":[{"name":"stdout"}],"output":{"name":"stdoutlock"}}],[11,"write","","",114,null],[11,"flush","","",114,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write_all","","",114,null],[11,"write_fmt","","",114,{"inputs":[{"name":"stdout"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",115,null],[11,"flush","","",115,{"inputs":[{"name":"stdoutlock"}],"output":{"name":"result"}}],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",116,{"inputs":[{"name":"stderr"}],"output":{"name":"stderrlock"}}],[11,"write","","",116,null],[11,"flush","","",116,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write_all","","",116,null],[11,"write_fmt","","",116,{"inputs":[{"name":"stderr"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",117,null],[11,"flush","","",117,{"inputs":[{"name":"stderrlock"}],"output":{"name":"result"}}],[11,"fmt","std::io","",118,{"inputs":[{"name":"seekfrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",118,{"inputs":[{"name":"seekfrom"}],"output":{"name":"seekfrom"}}],[11,"eq","","",118,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"ne","","",118,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"write","","",119,null],[11,"flush","","",119,{"inputs":[{"name":"broadcast"}],"output":{"name":"result"}}],[11,"read","","",120,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",121,{"inputs":[{"name":"take"}],"output":{"name":"u64"}}],[11,"read","","",121,null],[11,"fill_buf","","",121,{"inputs":[{"name":"take"}],"output":{"name":"result"}}],[11,"consume","","",121,null],[11,"read","","",122,null],[11,"next","","",123,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"fmt","","",124,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",125,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"description","","",124,{"inputs":[{"name":"charserror"}],"output":{"name":"str"}}],[11,"cause","","",124,{"inputs":[{"name":"charserror"}],"output":{"name":"option"}}],[11,"fmt","","",124,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",126,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next","","",127,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"cmp","std::net::ip","",128,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",128,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"option"}}],[11,"lt","","",128,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"le","","",128,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"gt","","",128,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ge","","",128,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"hash","","",128,null],[11,"fmt","","",128,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",128,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ne","","",128,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"clone","","",128,{"inputs":[{"name":"ipaddr"}],"output":{"name":"ipaddr"}}],[11,"fmt","","",129,{"inputs":[{"name":"ipv6multicastscope"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",129,null],[11,"clone","","",129,{"inputs":[{"name":"ipv6multicastscope"}],"output":{"name":"ipv6multicastscope"}}],[11,"eq","","",129,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"ne","","",129,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",130,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",130,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address 0.0.0.0.",130,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",130,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_private","","Returns true if this is a private address.",130,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",130,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",130,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_multicast","","Returns true if this is a multicast address.",130,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_broadcast","","Returns true if this is a broadcast address.",130,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",130,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",130,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",130,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"fmt","","",128,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",130,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",130,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",130,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv4addr"}}],[11,"eq","","",130,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"hash","","",130,null],[11,"partial_cmp","","",130,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"option"}}],[11,"cmp","","",130,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"ordering"}}],[11,"from","","",130,{"inputs":[{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",131,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",131,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address ::.",131,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (::1).",131,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",131,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unique_local","","Returns true if this is a unique local address (IPv6).",131,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",131,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address (IPv6\nfec0::/10).",131,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",131,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"multicast_scope","","Returns the address&#39;s multicast scope if the address is multicast.",131,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"is_multicast","","Returns true if this is a multicast address.",131,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",131,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"fmt","","",131,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",131,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",131,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"ipv6addr"}}],[11,"eq","","",131,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"hash","","",131,null],[11,"partial_cmp","","",131,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"cmp","","",131,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"ordering"}}],[11,"fmt","std::net::addr","",132,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",132,null],[11,"eq","","",132,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"ne","","",132,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"clone","","",132,{"inputs":[{"name":"socketaddr"}],"output":{"name":"socketaddr"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",132,{"inputs":[{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",132,{"inputs":[{"name":"socketaddr"}],"output":{"name":"ipaddr"}}],[11,"set_ip","","Change the IP address associated with this socket address.",132,null],[11,"port","","Returns the port number associated with this socket address.",132,{"inputs":[{"name":"socketaddr"}],"output":{"name":"u16"}}],[11,"set_port","","Change the port number associated with this socket address.",132,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",133,{"inputs":[{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",133,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"ipv4addr"}}],[11,"set_ip","","Change the IP address associated with this socket address.",133,null],[11,"port","","Returns the port number associated with this socket address.",133,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"u16"}}],[11,"set_port","","Change the port number associated with this socket address.",133,null],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",134,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",134,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"ipv6addr"}}],[11,"set_ip","","Change the IP address associated with this socket address.",134,null],[11,"port","","Returns the port number associated with this socket address.",134,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u16"}}],[11,"set_port","","Change the port number associated with this socket address.",134,null],[11,"flowinfo","","Returns the flow information associated with this address,\ncorresponding to the `sin6_flowinfo` field in C.",134,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"set_flowinfo","","Change the flow information associated with this socket address.",134,null],[11,"scope_id","","Returns the scope ID associated with this address,\ncorresponding to the `sin6_scope_id` field in C.",134,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"set_scope_id","","Change the scope ID associated with this socket address.",134,null],[11,"fmt","","",132,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",133,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",133,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",134,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",134,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",133,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"socketaddrv4"}}],[11,"clone","","",134,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"socketaddrv6"}}],[11,"eq","","",133,{"inputs":[{"name":"socketaddrv4"},{"name":"socketaddrv4"}],"output":{"name":"bool"}}],[11,"eq","","",134,{"inputs":[{"name":"socketaddrv6"},{"name":"socketaddrv6"}],"output":{"name":"bool"}}],[11,"hash","","",133,null],[11,"hash","","",134,null],[11,"to_socket_addrs","","",132,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",133,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",134,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"result"}}],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",135,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",135,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",135,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",135,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",135,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",135,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",135,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",135,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",135,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",135,null],[11,"read_to_end","","",135,{"inputs":[{"name":"tcpstream"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",135,null],[11,"flush","","",135,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",135,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",136,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",136,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",136,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","Accept a new incoming connection from this listener.",136,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",136,{"inputs":[{"name":"tcplistener"}],"output":{"name":"incoming"}}],[11,"next","","",137,{"inputs":[{"name":"incoming"}],"output":{"name":"option"}}],[11,"fmt","","",136,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",138,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",138,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",138,null],[11,"local_addr","","Returns the socket address that this socket was created from.",138,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",138,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",138,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",138,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",138,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",138,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",138,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","std::net::ip","",128,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",130,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",131,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",133,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",134,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",132,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",139,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"ne","","",139,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"clone","","",139,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"addrparseerror"}}],[11,"fmt","","",139,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",139,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",139,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"str"}}],[11,"fmt","std::net","",140,{"inputs":[{"name":"shutdown"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",140,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"clone","","",140,{"inputs":[{"name":"shutdown"}],"output":{"name":"shutdown"}}],[11,"next","","",141,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"clone","std::os::linux::raw::arch","",142,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"as_raw_stat","std::fs","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"stat"}}],[11,"st_dev","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_ino","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_mode","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"st_nlink","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_uid","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"st_gid","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"st_rdev","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_size","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_atime","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_atime_nsec","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_mtime","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_mtime_nsec","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_ctime","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_ctime_nsec","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_blksize","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_blocks","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"as_raw_fd","","",91,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"from_raw_fd","","",91,{"inputs":[{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",91,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::tcp","",135,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",136,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::udp","",138,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_raw_fd","std::net::tcp","",135,{"inputs":[{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",136,{"inputs":[{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",138,{"inputs":[{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",135,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",136,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"into_raw_fd","std::net::udp","",138,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_vec","std::ffi::os_str","",83,{"inputs":[{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",83,{"inputs":[{"name":"osstring"}],"output":{"name":"vec"}}],[11,"from_bytes","","",84,null],[11,"as_bytes","","",84,null],[11,"mode","std::fs","",89,{"inputs":[{"name":"permissions"}],"output":{"name":"u32"}}],[11,"set_mode","","",89,null],[11,"from_mode","","",89,{"inputs":[{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",88,{"inputs":[{"name":"openoptions"},{"name":"u32"}],"output":{"name":"openoptions"}}],[11,"custom_flags","","",88,{"inputs":[{"name":"openoptions"},{"name":"i32"}],"output":{"name":"openoptions"}}],[11,"dev","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"ino","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"mode","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"nlink","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"uid","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"gid","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"rdev","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"size","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"atime","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime_nsec","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime_nsec","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime_nsec","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blksize","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"blocks","","",87,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"is_block_device","","",90,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_char_device","","",90,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_fifo","","",90,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_socket","","",90,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ino","","",93,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"mode","","",95,{"inputs":[{"name":"dirbuilder"},{"name":"u32"}],"output":{"name":"dirbuilder"}}],[11,"uid","std::process","",143,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"gid","","",143,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"session_leader","","",143,{"inputs":[{"name":"command"},{"name":"bool"}],"output":{"name":"command"}}],[11,"before_exec","","",143,{"inputs":[{"name":"command"},{"name":"f"}],"output":{"name":"command"}}],[11,"exec","","",143,{"inputs":[{"name":"command"}],"output":{"name":"error"}}],[11,"signal","","",144,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"from_raw_fd","","",145,{"inputs":[{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",146,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",147,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",148,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",146,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",147,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",148,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"as_pthread_t","std::thread","",16,{"inputs":[{"name":"joinhandle"}],"output":{"name":"u64"}}],[11,"into_pthread_t","","",16,{"inputs":[{"name":"joinhandle"}],"output":{"name":"u64"}}],[11,"new","std::panic","Creates a new `AssertRecoverSafe` wrapper around the provided type.",149,{"inputs":[{"name":"t"}],"output":{"name":"assertrecoversafe"}}],[11,"into_inner","","Consumes the `AssertRecoverSafe`, returning the wrapped value.",149,{"inputs":[{"name":"assertrecoversafe"}],"output":{"name":"t"}}],[11,"deref","","",149,{"inputs":[{"name":"assertrecoversafe"}],"output":{"name":"t"}}],[11,"deref_mut","","",149,{"inputs":[{"name":"assertrecoversafe"}],"output":{"name":"t"}}],[11,"eq","std::path","",150,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ne","","",150,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"cmp","","",150,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",150,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"option"}}],[11,"lt","","",150,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"le","","",150,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"gt","","",150,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ge","","",150,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"hash","","",150,null],[11,"fmt","","",150,{"inputs":[{"name":"prefix"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",150,{"inputs":[{"name":"prefix"}],"output":{"name":"prefix"}}],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",150,{"inputs":[{"name":"prefix"}],"output":{"name":"bool"}}],[11,"fmt","","",151,{"inputs":[{"name":"state"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",151,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"option"}}],[11,"lt","","",151,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"le","","",151,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"gt","","",151,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ge","","",151,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"eq","","",151,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ne","","",151,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"clone","","",151,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[11,"fmt","","",152,{"inputs":[{"name":"prefixcomponent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",152,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefixcomponent"}}],[11,"kind","","The parsed prefix data.",152,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefix"}}],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",152,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"osstr"}}],[11,"eq","","",152,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",152,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"option"}}],[11,"cmp","","",152,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"ordering"}}],[11,"hash","","",152,null],[11,"fmt","","",153,{"inputs":[{"name":"component"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",153,null],[11,"cmp","","",153,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",153,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"option"}}],[11,"lt","","",153,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"le","","",153,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"gt","","",153,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ge","","",153,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"eq","","",153,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ne","","",153,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"clone","","",153,{"inputs":[{"name":"component"}],"output":{"name":"component"}}],[11,"as_os_str","","Extracts the underlying `OsStr` slice",153,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"as_ref","","",153,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"clone","","",154,{"inputs":[{"name":"components"}],"output":{"name":"components"}}],[11,"clone","","",155,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",154,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"peek","","Examine the next component without consuming it.",154,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"as_ref","","",154,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"as_ref","","",154,{"inputs":[{"name":"components"}],"output":{"name":"osstr"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",155,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",155,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",155,{"inputs":[{"name":"iter"}],"output":{"name":"osstr"}}],[11,"next","","",155,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",155,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",154,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"next_back","","",154,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"eq","","",154,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",154,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"option"}}],[11,"cmp","","",154,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"ordering"}}],[11,"clone","","",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"new","","Allocates an empty `PathBuf`.",156,{"inputs":[],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"push","","Extends `self` with `path`.",156,null],[11,"pop","","Truncate `self` to `self.parent()`.",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",156,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",156,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"bool"}}],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"from","","",156,{"inputs":[{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",156,{"inputs":[{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",156,{"inputs":[{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",156,{"inputs":[{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",156,null],[11,"fmt","","",156,{"inputs":[{"name":"pathbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Directly wrap a string slice as a `Path` slice.",157,{"inputs":[{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",157,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&amp;str` slice if the `Path` is valid unicode.",157,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts a `Path` to a `Cow&lt;str&gt;`.",157,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",157,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",157,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_relative","","A path is *relative* if it is not absolute.",157,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"prefix","","Returns the *prefix* of a path, if any.",157,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",157,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"parent","","The path without its final component, if any.",157,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"file_name","","The final component of the path, if it is a normal file.",157,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"relative_from","","Returns a path that, when joined onto `base`, yields `self`.",157,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"option"}}],[11,"strip_prefix","","Returns a path that, when joined onto `base`, yields `self`.",157,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"result"}}],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",157,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",157,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",157,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",157,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",157,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"pathbuf"}}],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",157,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",157,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"components","","Produce an iterator over the components of the path.",157,{"inputs":[{"name":"path"}],"output":{"name":"components"}}],[11,"iter","","Produce an iterator over the path&#39;s components viewed as `OsStr` slices.",157,{"inputs":[{"name":"path"}],"output":{"name":"iter"}}],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",157,{"inputs":[{"name":"path"}],"output":{"name":"display"}}],[11,"metadata","","Query the file system to get information about a file, directory, etc.",157,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"symlink_metadata","","Query the metadata about a file without following symlinks.",157,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"canonicalize","","Returns the canonical form of the path with all intermediate components\nnormalized and symbolic links resolved.",157,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_link","","Reads a symbolic link, returning the file that the link points to.",157,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_dir","","Returns an iterator over the entries within a directory.",157,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"exists","","Returns whether the path points at an existing entity.",157,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_file","","Returns whether the path is pointing at a regular file.",157,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_dir","","Returns whether the path is pointing at a directory.",157,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"deref","","",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"borrow","","",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"into_cow","","",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"from","collections::borrow","",85,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"from","","",85,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","std::path","",157,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"eq","","",156,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"hash","","",156,null],[11,"partial_cmp","","",156,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"cmp","","",156,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"ordering"}}],[11,"as_ref","","",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstr"}}],[11,"into","","",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"eq","","",158,{"inputs":[{"name":"stripprefixerror"},{"name":"stripprefixerror"}],"output":{"name":"bool"}}],[11,"ne","","",158,{"inputs":[{"name":"stripprefixerror"},{"name":"stripprefixerror"}],"output":{"name":"bool"}}],[11,"clone","","",158,{"inputs":[{"name":"stripprefixerror"}],"output":{"name":"stripprefixerror"}}],[11,"fmt","","",158,{"inputs":[{"name":"stripprefixerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",157,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"fmt","","",157,{"inputs":[{"name":"path"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",159,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",159,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",157,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"hash","","",157,null],[11,"partial_cmp","","",157,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"option"}}],[11,"cmp","","",157,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"ordering"}}],[11,"as_ref","","",157,{"inputs":[{"name":"path"}],"output":{"name":"path"}}],[11,"as_ref","std::ffi::os_str","",84,{"inputs":[{"name":"osstr"}],"output":{"name":"path"}}],[11,"as_ref","collections::borrow","",85,{"inputs":[{"name":"cow"}],"output":{"name":"path"}}],[11,"as_ref","std::ffi::os_str","",83,{"inputs":[{"name":"osstring"}],"output":{"name":"path"}}],[11,"as_ref","collections::string","",86,{"inputs":[{"name":"string"}],"output":{"name":"path"}}],[11,"as_ref","std::path","",156,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"eq","","",156,{"inputs":[{"name":"pathbuf"},{"name":"path"}],"output":{"name":"bool"}}],[11,"eq","","",157,{"inputs":[{"name":"path"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",156,{"inputs":[{"name":"pathbuf"},{"name":"path"}],"output":{"name":"option"}}],[11,"partial_cmp","","",157,{"inputs":[{"name":"path"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"eq","","",156,{"inputs":[{"name":"pathbuf"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",156,{"inputs":[{"name":"pathbuf"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",85,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"bool"}}],[11,"eq","std::path","",157,{"inputs":[{"name":"path"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",85,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"option"}}],[11,"partial_cmp","std::path","",157,{"inputs":[{"name":"path"},{"name":"cow"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",85,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",85,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","","",85,{"inputs":[{"name":"cow"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"eq","std::path","",156,{"inputs":[{"name":"pathbuf"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",85,{"inputs":[{"name":"cow"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"partial_cmp","std::path","",156,{"inputs":[{"name":"pathbuf"},{"name":"cow"}],"output":{"name":"option"}}],[11,"eq","","",156,{"inputs":[{"name":"pathbuf"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",84,{"inputs":[{"name":"osstr"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",156,{"inputs":[{"name":"pathbuf"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",84,{"inputs":[{"name":"osstr"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"eq","std::path","",156,{"inputs":[{"name":"pathbuf"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",156,{"inputs":[{"name":"pathbuf"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"eq","","",156,{"inputs":[{"name":"pathbuf"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",85,{"inputs":[{"name":"cow"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",156,{"inputs":[{"name":"pathbuf"},{"name":"cow"}],"output":{"name":"option"}}],[11,"partial_cmp","collections::borrow","",85,{"inputs":[{"name":"cow"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"eq","std::path","",156,{"inputs":[{"name":"pathbuf"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",83,{"inputs":[{"name":"osstring"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",156,{"inputs":[{"name":"pathbuf"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",83,{"inputs":[{"name":"osstring"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"eq","std::path","",157,{"inputs":[{"name":"path"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",84,{"inputs":[{"name":"osstr"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",157,{"inputs":[{"name":"path"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",84,{"inputs":[{"name":"osstr"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","std::path","",157,{"inputs":[{"name":"path"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",157,{"inputs":[{"name":"path"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"eq","","",157,{"inputs":[{"name":"path"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",85,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",157,{"inputs":[{"name":"path"},{"name":"cow"}],"output":{"name":"option"}}],[11,"partial_cmp","collections::borrow","",85,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","std::path","",157,{"inputs":[{"name":"path"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",83,{"inputs":[{"name":"osstring"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",157,{"inputs":[{"name":"path"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",83,{"inputs":[{"name":"osstring"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","","",84,{"inputs":[{"name":"osstr"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",84,{"inputs":[{"name":"osstr"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",85,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",85,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","std::ffi::os_str","",83,{"inputs":[{"name":"osstring"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",83,{"inputs":[{"name":"osstring"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",85,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",84,{"inputs":[{"name":"osstr"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",85,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",84,{"inputs":[{"name":"osstr"},{"name":"cow"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",85,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",85,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"eq","","",85,{"inputs":[{"name":"cow"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",83,{"inputs":[{"name":"osstring"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",85,{"inputs":[{"name":"cow"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",83,{"inputs":[{"name":"osstring"},{"name":"cow"}],"output":{"name":"option"}}],[11,"fmt","std::path","",158,{"inputs":[{"name":"stripprefixerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",158,{"inputs":[{"name":"stripprefixerror"}],"output":{"name":"str"}}],[11,"write","std::process","",146,null],[11,"flush","","",146,{"inputs":[{"name":"childstdin"}],"output":{"name":"result"}}],[11,"read","","",147,null],[11,"read","","",148,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",143,{"inputs":[{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",143,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"args","","Add multiple arguments to pass to the program.",143,null],[11,"env","","Inserts or updates an environment variable mapping.",143,{"inputs":[{"name":"command"},{"name":"k"},{"name":"v"}],"output":{"name":"command"}}],[11,"env_remove","","Removes an environment variable mapping.",143,{"inputs":[{"name":"command"},{"name":"k"}],"output":{"name":"command"}}],[11,"env_clear","","Clears the entire environment map for the child process.",143,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"current_dir","","Sets the working directory for the child process.",143,{"inputs":[{"name":"command"},{"name":"p"}],"output":{"name":"command"}}],[11,"stdin","","Configuration for the child process&#39;s stdin handle (file descriptor 0).",143,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stdout","","Configuration for the child process&#39;s stdout handle (file descriptor 1).",143,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stderr","","Configuration for the child process&#39;s stderr handle (file descriptor 2).",143,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"spawn","","Executes the command as a child process, returning a handle to it.",143,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",143,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",143,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",143,{"inputs":[{"name":"command"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",160,{"inputs":[{"name":"output"}],"output":{"name":"output"}}],[11,"eq","","",160,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"ne","","",160,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"fmt","","",160,{"inputs":[{"name":"output"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",145,{"inputs":[],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",145,{"inputs":[],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",145,{"inputs":[],"output":{"name":"stdio"}}],[11,"fmt","","",144,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",144,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",144,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",144,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",144,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","Returns the exit code of the process, if any.",144,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",144,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",161,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"id","","Returns the OS-assigned process identifier associated with this child.",161,{"inputs":[{"name":"child"}],"output":{"name":"u32"}}],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",161,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning an `Output`\ninstance.",161,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"clone","std::sync::mpsc::blocking","",162,{"inputs":[{"name":"signaltoken"}],"output":{"name":"signaltoken"}}],[11,"signal","","",162,{"inputs":[{"name":"signaltoken"}],"output":{"name":"bool"}}],[11,"cast_to_usize","","Convert to an unsafe usize value. Useful for storing in a pipe&#39;s state\nflag.",162,{"inputs":[{"name":"signaltoken"}],"output":{"name":"usize"}}],[11,"cast_from_usize","","Convert from an unsafe usize value. Useful for retrieving a pipe&#39;s state\nflag.",162,{"inputs":[{"name":"usize"}],"output":{"name":"signaltoken"}}],[11,"wait","","",163,null],[11,"new","std::sync::mpsc::oneshot","",164,{"inputs":[],"output":{"name":"packet"}}],[11,"send","","",164,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"sent","","",164,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"recv","","",164,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",164,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"upgrade","","",164,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"drop_chan","","",164,null],[11,"drop_port","","",164,null],[11,"can_recv","","",164,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",164,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",164,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop","","",164,null],[11,"eq","std::sync::mpsc::select","",165,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"ne","","",165,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new selection structure. This set is initially empty.",166,{"inputs":[],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",166,{"inputs":[{"name":"select"},{"name":"receiver"}],"output":{"name":"handle"}}],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",166,{"inputs":[{"name":"select"}],"output":{"name":"usize"}}],[11,"id","","Retrieves the id of this handle.",167,{"inputs":[{"name":"handle"}],"output":{"name":"usize"}}],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",167,{"inputs":[{"name":"handle"}],"output":{"name":"result"}}],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",167,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",167,null],[11,"drop","","",166,null],[11,"drop","","",167,null],[11,"next","","",168,{"inputs":[{"name":"packets"}],"output":{"name":"option"}}],[11,"fmt","","",166,{"inputs":[{"name":"select"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",167,{"inputs":[{"name":"handle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sync::mpsc::shared","",169,{"inputs":[],"output":{"name":"packet"}}],[11,"postinit_lock","","",169,{"inputs":[{"name":"packet"}],"output":{"name":"mutexguard"}}],[11,"inherit_blocker","","",169,null],[11,"send","","",169,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",169,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",169,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",169,null],[11,"drop_chan","","",169,null],[11,"drop_port","","",169,null],[11,"can_recv","","",169,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",169,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",169,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"drop","","",169,null],[11,"new","std::sync::mpsc::stream","",170,{"inputs":[],"output":{"name":"packet"}}],[11,"send","","",170,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"upgrade","","",170,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"recv","","",170,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",170,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop_chan","","",170,null],[11,"drop_port","","",170,null],[11,"can_recv","","",170,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",170,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",170,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"result"}}],[11,"drop","","",170,null],[11,"fmt","std::sync::mpsc::sync","",171,{"inputs":[{"name":"failure"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",172,{"inputs":[{"name":"usize"}],"output":{"name":"packet"}}],[11,"send","","",172,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","",172,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",172,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",172,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",172,null],[11,"drop_chan","","",172,null],[11,"drop_port","","",172,null],[11,"can_recv","","",172,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",172,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",172,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"drop","","",172,null],[11,"new","std::sync::mpsc::mpsc_queue","Creates a new queue that is safe to share among multiple producers and\none consumer.",173,{"inputs":[],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue.",173,null],[11,"pop","","Pops some data from this queue.",173,{"inputs":[{"name":"queue"}],"output":{"name":"popresult"}}],[11,"drop","","",173,null],[11,"new","std::sync::mpsc::spsc_queue","Creates a new queue.",174,{"inputs":[{"name":"usize"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue. Note that to use this function\nsafely, it must be externally guaranteed that there is only one pusher.",174,null],[11,"pop","","Attempts to pop a value from this queue. Remember that to use this type\nsafely you must ensure that there is only one popper at a time.",174,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"peek","","Attempts to peek at the head of the queue, returning `None` if the queue\nhas no data currently",174,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"drop","","",174,null],[11,"clone","std::sync::mpsc","",175,{"inputs":[{"name":"senderror"}],"output":{"name":"senderror"}}],[11,"eq","","",175,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"ne","","",175,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"fmt","","",176,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",176,{"inputs":[{"name":"recverror"}],"output":{"name":"recverror"}}],[11,"eq","","",176,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"ne","","",176,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"fmt","","",177,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",177,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"tryrecverror"}}],[11,"eq","","",177,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"ne","","",177,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"clone","","",178,{"inputs":[{"name":"trysenderror"}],"output":{"name":"trysenderror"}}],[11,"eq","","",178,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"ne","","",178,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",179,{"inputs":[{"name":"sender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",179,{"inputs":[{"name":"sender"}],"output":{"name":"sender"}}],[11,"drop","","",179,null],[11,"fmt","","",179,{"inputs":[{"name":"sender"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"send","","Sends a value on this synchronous channel.",180,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","Attempts to send a value on this channel without blocking.",180,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",180,{"inputs":[{"name":"syncsender"}],"output":{"name":"syncsender"}}],[11,"drop","","",180,null],[11,"fmt","","",180,{"inputs":[{"name":"syncsender"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",181,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",181,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",181,{"inputs":[{"name":"receiver"}],"output":{"name":"iter"}}],[11,"next","","",182,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",183,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"into_iter","","",181,{"inputs":[{"name":"receiver"}],"output":{"name":"intoiter"}}],[11,"drop","","",181,null],[11,"fmt","","",181,{"inputs":[{"name":"receiver"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",175,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",175,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",175,{"inputs":[{"name":"senderror"}],"output":{"name":"str"}}],[11,"cause","","",175,{"inputs":[{"name":"senderror"}],"output":{"name":"option"}}],[11,"fmt","","",178,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",178,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",178,{"inputs":[{"name":"trysenderror"}],"output":{"name":"str"}}],[11,"cause","","",178,{"inputs":[{"name":"trysenderror"}],"output":{"name":"option"}}],[11,"fmt","","",176,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",176,{"inputs":[{"name":"recverror"}],"output":{"name":"str"}}],[11,"cause","","",176,{"inputs":[{"name":"recverror"}],"output":{"name":"option"}}],[11,"fmt","","",177,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",177,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"str"}}],[11,"cause","","",177,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"option"}}],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",184,{"inputs":[{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads has rendezvoused here.",184,{"inputs":[{"name":"barrier"}],"output":{"name":"barrierwaitresult"}}],[11,"is_leader","","Returns whether this thread from `wait` is the &quot;leader thread&quot;.",185,{"inputs":[{"name":"barrierwaitresult"}],"output":{"name":"bool"}}],[11,"clone","std::sync::condvar","",186,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"waittimeoutresult"}}],[11,"eq","","",186,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"ne","","",186,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"fmt","","",186,{"inputs":[{"name":"waittimeoutresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"timed_out","","Returns whether the wait was known to have timed out.",186,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",187,{"inputs":[],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",187,{"inputs":[{"name":"condvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",187,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",187,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",187,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",187,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",187,null],[11,"drop","","",187,null],[11,"new","","Creates a new condition variable",188,{"inputs":[],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",188,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",188,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",188,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",188,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",188,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",188,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",188,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",189,{"inputs":[{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",189,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",189,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",189,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"into_inner","","Consumes this mutex, returning the underlying data.",189,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",189,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"drop","","",189,null],[11,"fmt","","",189,{"inputs":[{"name":"mutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new mutex in an unlocked state ready for use.",190,{"inputs":[],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",190,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",190,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates resources associated with this static mutex.",190,null],[11,"deref","","",191,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",191,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"drop","","",191,null],[11,"new","std::sync::once","Creates a new `Once` value.",192,{"inputs":[],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",192,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock&lt;T&gt;` which is unlocked.",193,{"inputs":[{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",193,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",193,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",193,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",193,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",193,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",193,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",193,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"drop","","",193,null],[11,"fmt","","",193,{"inputs":[{"name":"rwlock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new rwlock.",194,{"inputs":[],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",194,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this lock with shared read access.",194,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",194,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",194,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates all resources associated with this static lock.",194,null],[11,"map","","Transform this guard to hold a sub-borrow of the original data.",195,{"inputs":[{"name":"rwlockreadguard"},{"name":"f"}],"output":{"name":"rwlockreadguard"}}],[11,"map","","Transform this guard to hold a sub-borrow of the original data.",196,{"inputs":[{"name":"rwlockwriteguard"},{"name":"f"}],"output":{"name":"rwlockwriteguard"}}],[11,"deref","","",195,{"inputs":[{"name":"rwlockreadguard"}],"output":{"name":"t"}}],[11,"deref","","",196,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",196,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"drop","","",195,null],[11,"drop","","",196,null],[11,"new","std::sync::semaphore","Creates a new semaphore with the initial count specified.",197,{"inputs":[{"name":"isize"}],"output":{"name":"semaphore"}}],[11,"acquire","","Acquires a resource of this semaphore, blocking the current thread until\nit can do so.",197,null],[11,"release","","Release a resource from this semaphore.",197,null],[11,"access","","Acquires a resource of this semaphore, returning an RAII guard to\nrelease the semaphore when dropped.",197,{"inputs":[{"name":"semaphore"}],"output":{"name":"semaphoreguard"}}],[11,"drop","","",198,null],[11,"default","core::sync::atomic","",199,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",200,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"default","","",201,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"default","","",202,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"clone","","",203,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",199,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",199,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",199,null],[11,"swap","","Stores a value into the bool, returning the old value.",199,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",199,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",199,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",199,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",199,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",199,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",199,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",199,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",200,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",200,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",200,null],[11,"swap","","Stores a value into the isize, returning the old value.",200,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",200,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_exchange","","Stores a value into the `isize` if the current value is the same as the `current` value.",200,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_exchange_weak","","Stores a value into the `isize if the current value is the same as the `current` value.",200,null],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",200,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",200,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",200,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",200,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",200,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",201,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",201,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",201,null],[11,"swap","","Stores a value into the usize, returning the old value.",201,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",201,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_exchange","","Stores a value into the `usize` if the current value is the same as the `current` value.",201,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_exchange_weak","","Stores a value into the `usize` if the current value is the same as the `current` value.",201,null],[11,"fetch_add","","Add to the current usize, returning the previous value.",201,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",201,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",201,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",201,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",201,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",202,null],[11,"load","","Loads a value from the pointer.",202,null],[11,"store","","Stores a value into the pointer.",202,null],[11,"swap","","Stores a value into the pointer, returning the old value.",202,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",202,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",202,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",202,null],[11,"fmt","","",201,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",200,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",199,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",202,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","std::time::duration","",204,null],[11,"fmt","","",204,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",204,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",204,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",204,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",204,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",204,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",204,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"eq","","",204,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",204,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"clone","","",204,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"new","","Creates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",204,{"inputs":[{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",204,{"inputs":[{"name":"f"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",204,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",204,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",204,{"inputs":[{"name":"duration"}],"output":{"name":"u64"}}],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",204,{"inputs":[{"name":"duration"}],"output":{"name":"u32"}}],[11,"add","","",204,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"sub","","",204,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"mul","","",204,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"div","","",204,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"cmp","std::time","",205,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",205,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"option"}}],[11,"lt","","",205,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"le","","",205,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"gt","","",205,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"ge","","",205,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"eq","","",205,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"ne","","",205,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"clone","","",205,{"inputs":[{"name":"instant"}],"output":{"name":"instant"}}],[11,"cmp","","",206,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",206,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"option"}}],[11,"lt","","",206,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"le","","",206,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"gt","","",206,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"ge","","",206,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"eq","","",206,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"ne","","",206,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"clone","","",206,{"inputs":[{"name":"systemtime"}],"output":{"name":"systemtime"}}],[11,"fmt","","",207,{"inputs":[{"name":"systemtimeerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",207,{"inputs":[{"name":"systemtimeerror"}],"output":{"name":"systemtimeerror"}}],[11,"now","","Returns an instant corresponding to &quot;now&quot;.",205,{"inputs":[],"output":{"name":"instant"}}],[11,"duration_since","","Returns the amount of time elapsed from another instant to this one.",205,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"duration"}}],[11,"duration_from_earlier","","Deprecated, renamed to `duration_since`",205,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"duration"}}],[11,"elapsed","","Returns the amount of time elapsed since this instant was created.",205,{"inputs":[{"name":"instant"}],"output":{"name":"duration"}}],[11,"add","","",205,{"inputs":[{"name":"instant"},{"name":"duration"}],"output":{"name":"instant"}}],[11,"sub","","",205,{"inputs":[{"name":"instant"},{"name":"duration"}],"output":{"name":"instant"}}],[11,"sub","","",205,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"duration"}}],[11,"fmt","","",205,{"inputs":[{"name":"instant"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"now","","Returns the system time corresponding to &quot;now&quot;.",206,{"inputs":[],"output":{"name":"systemtime"}}],[11,"duration_since","","Returns the amount of time elapsed from an earlier point in time.",206,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"result"}}],[11,"duration_from_earlier","","Deprecated, renamed to `duration_since`",206,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"result"}}],[11,"elapsed","","Returns the amount of time elapsed since this system time was created.",206,{"inputs":[{"name":"systemtime"}],"output":{"name":"result"}}],[11,"add","","",206,{"inputs":[{"name":"systemtime"},{"name":"duration"}],"output":{"name":"systemtime"}}],[11,"sub","","",206,{"inputs":[{"name":"systemtime"},{"name":"duration"}],"output":{"name":"systemtime"}}],[11,"fmt","","",206,{"inputs":[{"name":"systemtime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"duration","","Returns the positive duration which represents how far forward the\nsecond system time was from the first.",207,{"inputs":[{"name":"systemtimeerror"}],"output":{"name":"duration"}}],[11,"description","","",207,{"inputs":[{"name":"systemtimeerror"}],"output":{"name":"str"}}],[11,"fmt","","",207,{"inputs":[{"name":"systemtimeerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys_common::condvar","Creates a new condition variable for use.",208,{"inputs":[],"output":{"name":"condvar"}}],[11,"notify_one","","Signals one waiter on this condition variable to wake up.",208,null],[11,"notify_all","","Awakens all current waiters on this condition variable.",208,null],[11,"wait","","Waits for a signal on the specified mutex.",208,null],[11,"wait_timeout","","Waits for a signal on the specified mutex with a timeout duration\nspecified by `dur` (a relative time into the future).",208,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","Deallocates all resources associated with this condition variable.",208,null],[11,"clone","std::sys_common::dwarf::eh","",209,{"inputs":[{"name":"ehcontext"}],"output":{"name":"ehcontext"}}],[11,"new","std::sys_common::dwarf","",210,null],[11,"read","","",210,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"t"}}],[11,"read_uleb128","","",210,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"u64"}}],[11,"read_sleb128","","",210,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"i64"}}],[11,"clone","std::sys_common::libunwind","",211,{"inputs":[{"name":"_unwind_action"}],"output":{"name":"_unwind_action"}}],[11,"clone","","",212,{"inputs":[{"name":"_unwind_reason_code"}],"output":{"name":"_unwind_reason_code"}}],[11,"new","std::sys_common::mutex","Creates a new mutex for use.",213,{"inputs":[],"output":{"name":"mutex"}}],[11,"lock","","Locks the mutex blocking the current thread until it is available.",213,null],[11,"try_lock","","Attempts to lock the mutex without blocking, returning whether it was\nsuccessfully acquired or not.",213,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"unlock","","Unlocks the mutex.",213,null],[11,"destroy","","Deallocates all resources associated with this mutex.",213,null],[11,"next","std::sys_common::net","",214,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"drop","","",214,null],[11,"connect","","",215,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",215,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"into_socket","","",215,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"set_read_timeout","","",215,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",215,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",215,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","",215,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",215,null],[11,"write","","",215,null],[11,"peer_addr","","",215,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"socket_addr","","",215,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","",215,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"duplicate","","",215,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",215,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",216,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",216,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"into_socket","","",216,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"socket_addr","","",216,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","",216,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"duplicate","","",216,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"fmt","","",216,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",217,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",217,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"into_socket","","",217,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"socket_addr","","",217,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"recv_from","","",217,null],[11,"send_to","","",217,null],[11,"duplicate","","",217,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","",217,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",217,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",217,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","",217,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",217,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys_common::poison","",218,{"inputs":[],"output":{"name":"flag"}}],[11,"borrow","","",218,{"inputs":[{"name":"flag"}],"output":{"name":"result"}}],[11,"done","","",218,null],[11,"get","","",218,{"inputs":[{"name":"flag"}],"output":{"name":"bool"}}],[11,"fmt","","",219,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",219,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",219,{"inputs":[{"name":"poisonerror"}],"output":{"name":"str"}}],[11,"new","","Creates a `PoisonError`.",219,{"inputs":[{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",219,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",219,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",219,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"from","","",220,{"inputs":[{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",220,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",220,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",220,{"inputs":[{"name":"trylockerror"}],"output":{"name":"str"}}],[11,"cause","","",220,{"inputs":[{"name":"trylockerror"}],"output":{"name":"option"}}],[11,"new","std::sys_common::remutex","Creates a new reentrant mutex in an unlocked state.",221,{"inputs":[{"name":"t"}],"output":{"name":"reentrantmutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",221,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",221,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"drop","","",221,null],[11,"fmt","","",221,{"inputs":[{"name":"reentrantmutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",222,{"inputs":[{"name":"reentrantmutexguard"}],"output":{"name":"t"}}],[11,"drop","","",222,null],[11,"new","std::sys_common::rwlock","Creates a new reader-writer lock for use.",223,{"inputs":[],"output":{"name":"rwlock"}}],[11,"read","","Acquires shared access to the underlying lock, blocking the current\nthread to do so.",223,null],[11,"try_read","","Attempts to acquire shared access to this lock, returning whether it\nsucceeded or not.",223,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","Acquires write access to the underlying lock, blocking the current thread\nto do so.",223,null],[11,"try_write","","Attempts to acquire exclusive access to this lock, returning whether it\nsucceeded or not.",223,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","Unlocks previously acquired shared access to this lock.",223,null],[11,"write_unlock","","Unlocks previously acquired exclusive access to this lock.",223,null],[11,"destroy","","Destroys OS-related resources with this RWLock.",223,null],[11,"new","std::sys_common::thread_local","",224,{"inputs":[{"name":"option"}],"output":{"name":"statickey"}}],[11,"get","","Gets the value associated with this TLS key",224,null],[11,"set","","Sets this TLS key to a new value.",224,null],[11,"destroy","","Deallocates this OS TLS key.",224,null],[11,"new","","Creates a new managed OS TLS key.",225,{"inputs":[{"name":"option"}],"output":{"name":"key"}}],[11,"get","","See StaticKey::get",225,null],[11,"set","","See StaticKey::set",225,null],[11,"drop","","",225,null],[11,"clone","std::sys_common::wtf8","",226,{"inputs":[{"name":"codepoint"}],"output":{"name":"codepoint"}}],[11,"partial_cmp","","",226,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"option"}}],[11,"lt","","",226,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"le","","",226,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"gt","","",226,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ge","","",226,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"cmp","","",226,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"ordering"}}],[11,"eq","","",226,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ne","","",226,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"fmt","","",226,{"inputs":[{"name":"codepoint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_u32_unchecked","","Unsafely creates a new `CodePoint` without checking the value.",226,{"inputs":[{"name":"u32"}],"output":{"name":"codepoint"}}],[11,"from_u32","","Creates a new `CodePoint` if the value is a valid code point.",226,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_char","","Creates a new `CodePoint` from a `char`.",226,{"inputs":[{"name":"char"}],"output":{"name":"codepoint"}}],[11,"to_u32","","Returns the numeric value of the code point.",226,{"inputs":[{"name":"codepoint"}],"output":{"name":"u32"}}],[11,"to_char","","Optionally returns a Unicode scalar value for the code point.",226,{"inputs":[{"name":"codepoint"}],"output":{"name":"option"}}],[11,"to_char_lossy","","Returns a Unicode scalar value for the code point.",226,{"inputs":[{"name":"codepoint"}],"output":{"name":"char"}}],[11,"clone","","",227,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"partial_cmp","","",227,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"option"}}],[11,"lt","","",227,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"le","","",227,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"gt","","",227,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ge","","",227,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"cmp","","",227,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"ordering"}}],[11,"eq","","",227,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ne","","",227,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"from_str","","Creates a WTF-8 slice from a UTF-8 `&amp;str` slice.",228,{"inputs":[{"name":"str"}],"output":{"name":"wtf8"}}],[11,"len","","Returns the length, in WTF-8 bytes.",228,{"inputs":[{"name":"wtf8"}],"output":{"name":"usize"}}],[11,"is_empty","","",228,{"inputs":[{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ascii_byte_at","","Returns the code point at `position` if it is in the ASCII range,\nor `b&#39;\\xFF&#39; otherwise.",228,{"inputs":[{"name":"wtf8"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"code_points","","Returns an iterator for the string’s code points.",228,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8codepoints"}}],[11,"as_str","","Tries to convert the string to UTF-8 and return a `&amp;str` slice.",228,{"inputs":[{"name":"wtf8"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Lossily converts the string to UTF-8.\nReturns a UTF-8 `&amp;str` slice if the contents are well-formed in UTF-8.",228,{"inputs":[{"name":"wtf8"}],"output":{"name":"cow"}}],[11,"encode_wide","","Converts the WTF-8 string to potentially ill-formed UTF-16\nand return an iterator of 16-bit code units.",228,{"inputs":[{"name":"wtf8"}],"output":{"name":"encodewide"}}],[11,"deref","","",227,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"fmt","","",227,{"inputs":[{"name":"wtf8buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new, empty WTF-8 string.",227,{"inputs":[],"output":{"name":"wtf8buf"}}],[11,"with_capacity","","Creates a new, empty WTF-8 string with pre-allocated capacity for `n` bytes.",227,{"inputs":[{"name":"usize"}],"output":{"name":"wtf8buf"}}],[11,"from_string","","Creates a WTF-8 string from a UTF-8 `String`.",227,{"inputs":[{"name":"string"}],"output":{"name":"wtf8buf"}}],[11,"from_str","","Creates a WTF-8 string from a UTF-8 `&amp;str` slice.",227,{"inputs":[{"name":"str"}],"output":{"name":"wtf8buf"}}],[11,"clear","","",227,null],[11,"from_wide","","Creates a WTF-8 string from a potentially ill-formed UTF-16 slice of 16-bit code units.",227,null],[11,"as_slice","","",227,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `Wtf8Buf`.\nThe collection may reserve more space to avoid frequent reallocations.",227,null],[11,"reserve_exact","","",227,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without reallocating.",227,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"usize"}}],[11,"push_str","","Append a UTF-8 slice at the end of the string.",227,null],[11,"push_wtf8","","Append a WTF-8 slice at the end of the string.",227,null],[11,"push_char","","Append a Unicode scalar value at the end of the string.",227,null],[11,"push","","Append a code point at the end of the string.",227,null],[11,"truncate","","Shortens a string to the specified length.",227,null],[11,"into_string","","Consumes the WTF-8 string and tries to convert it to UTF-8.",227,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"result"}}],[11,"into_string_lossy","","Consumes the WTF-8 string and converts it lossily to UTF-8.",227,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"string"}}],[11,"from_iter","","",227,{"inputs":[{"name":"t"}],"output":{"name":"wtf8buf"}}],[11,"extend","","",227,null],[11,"partial_cmp","","",228,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"option"}}],[11,"lt","","",228,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"le","","",228,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"gt","","",228,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ge","","",228,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"eq","","",228,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ne","","",228,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"cmp","","",228,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"ordering"}}],[11,"fmt","","",228,{"inputs":[{"name":"wtf8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"index","","",228,{"inputs":[{"name":"wtf8"},{"name":"range"}],"output":{"name":"wtf8"}}],[11,"index","","",228,{"inputs":[{"name":"wtf8"},{"name":"rangefrom"}],"output":{"name":"wtf8"}}],[11,"index","","",228,{"inputs":[{"name":"wtf8"},{"name":"rangeto"}],"output":{"name":"wtf8"}}],[11,"index","","",228,{"inputs":[{"name":"wtf8"},{"name":"rangefull"}],"output":{"name":"wtf8"}}],[11,"clone","","",229,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"wtf8codepoints"}}],[11,"next","","",229,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"option"}}],[11,"size_hint","","",229,null],[11,"clone","","",230,{"inputs":[{"name":"encodewide"}],"output":{"name":"encodewide"}}],[11,"next","","",230,{"inputs":[{"name":"encodewide"}],"output":{"name":"option"}}],[11,"size_hint","","",230,null],[11,"hash","","",226,null],[11,"hash","","",227,null],[11,"hash","","",228,null],[11,"is_ascii","","",228,{"inputs":[{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"to_ascii_uppercase","","",228,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"to_ascii_lowercase","","",228,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"eq_ignore_ascii_case","","",228,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"make_ascii_uppercase","","",228,null],[11,"make_ascii_lowercase","","",228,null],[11,"new","std::sys::weak","",231,{"inputs":[{"name":"str"}],"output":{"name":"weak"}}],[11,"get","","",231,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"new","std::sys::condvar","",232,{"inputs":[],"output":{"name":"condvar"}}],[11,"notify_one","","",232,null],[11,"notify_all","","",232,null],[11,"wait","","",232,null],[11,"wait_timeout","","",232,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","",232,null],[11,"new","std::sys::fd","",233,{"inputs":[{"name":"i32"}],"output":{"name":"filedesc"}}],[11,"raw","","",233,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"into_raw","","Extracts the actual filedescriptor without closing it.",233,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"read","","",233,null],[11,"write","","",233,null],[11,"set_cloexec","","",233,null],[11,"duplicate","","",233,{"inputs":[{"name":"filedesc"}],"output":{"name":"result"}}],[11,"drop","","",233,null],[11,"clone","std::sys::fs","",234,{"inputs":[{"name":"fileattr"}],"output":{"name":"fileattr"}}],[11,"clone","","",235,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",236,{"inputs":[{"name":"filepermissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",236,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"ne","","",236,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"clone","","",236,{"inputs":[{"name":"filepermissions"}],"output":{"name":"filepermissions"}}],[11,"hash","","",237,null],[11,"eq","","",237,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",237,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",237,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"size","","",234,{"inputs":[{"name":"fileattr"}],"output":{"name":"u64"}}],[11,"perm","","",234,{"inputs":[{"name":"fileattr"}],"output":{"name":"filepermissions"}}],[11,"file_type","","",234,{"inputs":[{"name":"fileattr"}],"output":{"name":"filetype"}}],[11,"modified","","",234,{"inputs":[{"name":"fileattr"}],"output":{"name":"result"}}],[11,"accessed","","",234,{"inputs":[{"name":"fileattr"}],"output":{"name":"result"}}],[11,"created","","",234,{"inputs":[{"name":"fileattr"}],"output":{"name":"result"}}],[11,"readonly","","",236,{"inputs":[{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","",236,null],[11,"mode","","",236,{"inputs":[{"name":"filepermissions"}],"output":{"name":"u32"}}],[11,"is_dir","","",237,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","",237,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","",237,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is","","",237,{"inputs":[{"name":"filetype"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"next","","",238,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"drop","","",239,null],[11,"path","","",240,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"file_name","","",240,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"metadata","","",240,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","",240,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"ino","","",240,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"new","","",235,{"inputs":[],"output":{"name":"openoptions"}}],[11,"read","","",235,null],[11,"write","","",235,null],[11,"append","","",235,null],[11,"truncate","","",235,null],[11,"create","","",235,null],[11,"create_new","","",235,null],[11,"custom_flags","","",235,null],[11,"mode","","",235,null],[11,"open","","",241,{"inputs":[{"name":"path"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"open_c","","",241,{"inputs":[{"name":"cstr"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"file_attr","","",241,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fsync","","",241,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"datasync","","",241,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"truncate","","",241,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read","","",241,null],[11,"write","","",241,null],[11,"flush","","",241,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",241,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"duplicate","","",241,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fd","","",241,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",241,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"new","","",242,{"inputs":[],"output":{"name":"dirbuilder"}}],[11,"mkdir","","",242,{"inputs":[{"name":"dirbuilder"},{"name":"path"}],"output":{"name":"result"}}],[11,"set_mode","","",242,null],[11,"fmt","","",241,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys::mutex","",243,{"inputs":[],"output":{"name":"mutex"}}],[11,"lock","","",243,null],[11,"unlock","","",243,null],[11,"try_lock","","",243,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"destroy","","",243,null],[11,"uninitialized","","",244,{"inputs":[],"output":{"name":"reentrantmutex"}}],[11,"init","","",244,null],[11,"lock","","",244,null],[11,"try_lock","","",244,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"bool"}}],[11,"unlock","","",244,null],[11,"destroy","","",244,null],[11,"new","std::sys::net","",245,{"inputs":[{"name":"socketaddr"},{"name":"i32"}],"output":{"name":"result"}}],[11,"accept","","",245,null],[11,"duplicate","","",245,{"inputs":[{"name":"socket"}],"output":{"name":"result"}}],[11,"read","","",245,null],[11,"set_timeout","","",245,{"inputs":[{"name":"socket"},{"name":"option"},{"name":"i32"}],"output":{"name":"result"}}],[11,"timeout","","",245,{"inputs":[{"name":"socket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"shutdown","","",245,{"inputs":[{"name":"socket"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"clone","libc::unix","",246,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",247,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",248,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",249,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[11,"clone","","",250,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[11,"clone","","",251,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",252,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",253,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",254,{"inputs":[{"name":"ipv6_mreq"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",255,{"inputs":[{"name":"hostent"}],"output":{"name":"hostent"}}],[11,"clone","","",256,{"inputs":[{"name":"iovec"}],"output":{"name":"iovec"}}],[11,"clone","","",257,{"inputs":[{"name":"pollfd"}],"output":{"name":"pollfd"}}],[11,"clone","libc::unix::notbsd","",258,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",259,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",260,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",261,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",262,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",263,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",264,{"inputs":[{"name":"sockaddr_ll"}],"output":{"name":"sockaddr_ll"}}],[11,"clone","","",265,{"inputs":[{"name":"fd_set"}],"output":{"name":"fd_set"}}],[11,"clone","","",266,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"clone","","",267,{"inputs":[{"name":"sched_param"}],"output":{"name":"sched_param"}}],[11,"clone","","",268,{"inputs":[{"name":"dl_info"}],"output":{"name":"dl_info"}}],[11,"clone","","",269,{"inputs":[{"name":"epoll_event"}],"output":{"name":"epoll_event"}}],[11,"clone","","",270,{"inputs":[{"name":"utsname"}],"output":{"name":"utsname"}}],[11,"clone","libc::unix::notbsd::linux","",271,{"inputs":[{"name":"dirent"}],"output":{"name":"dirent"}}],[11,"clone","","",272,{"inputs":[{"name":"dirent64"}],"output":{"name":"dirent64"}}],[11,"clone","","",273,{"inputs":[{"name":"rlimit64"}],"output":{"name":"rlimit64"}}],[11,"clone","","",274,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",275,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[11,"clone","","",276,{"inputs":[{"name":"pthread_mutex_t"}],"output":{"name":"pthread_mutex_t"}}],[11,"clone","","",277,{"inputs":[{"name":"pthread_rwlock_t"}],"output":{"name":"pthread_rwlock_t"}}],[11,"clone","","",278,{"inputs":[{"name":"pthread_mutexattr_t"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"clone","","",279,{"inputs":[{"name":"pthread_cond_t"}],"output":{"name":"pthread_cond_t"}}],[11,"clone","","",280,{"inputs":[{"name":"passwd"}],"output":{"name":"passwd"}}],[11,"clone","","",281,{"inputs":[{"name":"statvfs"}],"output":{"name":"statvfs"}}],[11,"clone","","",282,{"inputs":[{"name":"sockaddr_nl"}],"output":{"name":"sockaddr_nl"}}],[11,"clone","","",283,{"inputs":[{"name":"dqblk"}],"output":{"name":"dqblk"}}],[11,"clone","","",284,{"inputs":[{"name":"signalfd_siginfo"}],"output":{"name":"signalfd_siginfo"}}],[11,"clone","","",285,{"inputs":[{"name":"fsid_t"}],"output":{"name":"fsid_t"}}],[11,"clone","","",286,{"inputs":[{"name":"mq_attr"}],"output":{"name":"mq_attr"}}],[11,"clone","","",287,{"inputs":[{"name":"cpu_set_t"}],"output":{"name":"cpu_set_t"}}],[11,"clone","libc::unix::notbsd::linux::other","",288,{"inputs":[{"name":"sigaction"}],"output":{"name":"sigaction"}}],[11,"clone","","",289,{"inputs":[{"name":"stack_t"}],"output":{"name":"stack_t"}}],[11,"clone","","",290,{"inputs":[{"name":"siginfo_t"}],"output":{"name":"siginfo_t"}}],[11,"clone","","",291,{"inputs":[{"name":"glob64_t"}],"output":{"name":"glob64_t"}}],[11,"clone","","",292,{"inputs":[{"name":"ucred"}],"output":{"name":"ucred"}}],[11,"clone","","",293,{"inputs":[{"name":"statfs"}],"output":{"name":"statfs"}}],[11,"clone","","",294,{"inputs":[{"name":"msghdr"}],"output":{"name":"msghdr"}}],[11,"clone","","",295,{"inputs":[{"name":"termios"}],"output":{"name":"termios"}}],[11,"clone","","",296,{"inputs":[{"name":"flock"}],"output":{"name":"flock"}}],[11,"clone","libc::unix::notbsd::linux::other::b64","",297,{"inputs":[{"name":"sigset_t"}],"output":{"name":"sigset_t"}}],[11,"clone","libc::unix::notbsd::linux::other::b64::x86_64","",298,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",299,{"inputs":[{"name":"stat64"}],"output":{"name":"stat64"}}],[11,"clone","","",300,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","libc::unix::notbsd::linux::other","",301,{"inputs":[{"name":"ipc_perm"}],"output":{"name":"ipc_perm"}}],[11,"clone","","",302,{"inputs":[{"name":"shmid_ds"}],"output":{"name":"shmid_ds"}}],[11,"next","std::sys::os","",303,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",303,null],[11,"fmt","","",304,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",304,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",304,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",305,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",305,null],[11,"len","","",305,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",306,{"inputs":[{"name":"env"}],"output":{"name":"option"}}],[11,"size_hint","","",306,null],[11,"hash","std::sys::os_str","",307,null],[11,"clone","","",307,{"inputs":[{"name":"buf"}],"output":{"name":"buf"}}],[11,"fmt","","",308,{"inputs":[{"name":"slice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",307,{"inputs":[{"name":"buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_string","","",307,{"inputs":[{"name":"string"}],"output":{"name":"buf"}}],[11,"with_capacity","","",307,{"inputs":[{"name":"usize"}],"output":{"name":"buf"}}],[11,"clear","","",307,null],[11,"capacity","","",307,{"inputs":[{"name":"buf"}],"output":{"name":"usize"}}],[11,"reserve","","",307,null],[11,"reserve_exact","","",307,null],[11,"as_slice","","",307,{"inputs":[{"name":"buf"}],"output":{"name":"slice"}}],[11,"into_string","","",307,{"inputs":[{"name":"buf"}],"output":{"name":"result"}}],[11,"push_slice","","",307,null],[11,"from_str","","",308,{"inputs":[{"name":"str"}],"output":{"name":"slice"}}],[11,"to_str","","",308,{"inputs":[{"name":"slice"}],"output":{"name":"option"}}],[11,"to_string_lossy","","",308,{"inputs":[{"name":"slice"}],"output":{"name":"cow"}}],[11,"to_owned","","",308,{"inputs":[{"name":"slice"}],"output":{"name":"buf"}}],[11,"from_fd","std::sys::pipe","",309,{"inputs":[{"name":"i32"}],"output":{"name":"anonpipe"}}],[11,"read","","",309,null],[11,"write","","",309,null],[11,"fd","","",309,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",309,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"new","std::sys::process","",310,{"inputs":[{"name":"osstr"}],"output":{"name":"command"}}],[11,"arg","","",310,null],[11,"env","","",310,null],[11,"env_remove","","",310,null],[11,"env_clear","","",310,null],[11,"cwd","","",310,null],[11,"uid","","",310,null],[11,"gid","","",310,null],[11,"session_leader","","",310,null],[11,"before_exec","","",310,null],[11,"stdin","","",310,null],[11,"stdout","","",310,null],[11,"stderr","","",310,null],[11,"spawn","","",310,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"result"}}],[11,"exec","","",310,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"error"}}],[11,"fmt","","",310,{"inputs":[{"name":"command"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",311,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",311,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",311,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",311,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","",311,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","",311,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"signal","","",311,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",311,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"id","","",312,{"inputs":[{"name":"process"}],"output":{"name":"u32"}}],[11,"kill","","",312,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"wait","","",312,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"new","std::sys::rand::imp","Create a new `OsRng`.",313,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",313,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",313,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",313,null],[11,"new","std::sys::rwlock","",314,{"inputs":[],"output":{"name":"rwlock"}}],[11,"read","","",314,null],[11,"try_read","","",314,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","",314,null],[11,"try_write","","",314,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","",314,null],[11,"write_unlock","","",314,null],[11,"destroy","","",314,null],[11,"new","std::sys::stack_overflow","",315,{"inputs":[],"output":{"name":"handler"}}],[11,"drop","","",315,null],[11,"new","std::sys::thread","",316,{"inputs":[{"name":"usize"},{"name":"box"}],"output":{"name":"result"}}],[11,"yield_now","","",316,null],[11,"set_name","","",316,null],[11,"sleep","","",316,null],[11,"join","","",316,null],[11,"id","","",316,{"inputs":[{"name":"thread"}],"output":{"name":"u64"}}],[11,"into_id","","",316,{"inputs":[{"name":"thread"}],"output":{"name":"u64"}}],[11,"drop","","",316,null],[11,"clone","std::sys::time::inner","",317,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"cmp","","",318,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",318,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"option"}}],[11,"lt","","",318,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"le","","",318,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"gt","","",318,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"ge","","",318,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"eq","","",318,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"ne","","",318,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"clone","","",318,{"inputs":[{"name":"instant"}],"output":{"name":"instant"}}],[11,"cmp","","",319,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",319,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"option"}}],[11,"lt","","",319,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"le","","",319,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"gt","","",319,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"ge","","",319,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"eq","","",319,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"ne","","",319,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"clone","","",319,{"inputs":[{"name":"systemtime"}],"output":{"name":"systemtime"}}],[11,"now","","",318,{"inputs":[],"output":{"name":"instant"}}],[11,"sub_instant","","",318,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"duration"}}],[11,"add_duration","","",318,{"inputs":[{"name":"instant"},{"name":"duration"}],"output":{"name":"instant"}}],[11,"sub_duration","","",318,{"inputs":[{"name":"instant"},{"name":"duration"}],"output":{"name":"instant"}}],[11,"fmt","","",318,{"inputs":[{"name":"instant"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"now","","",319,{"inputs":[],"output":{"name":"systemtime"}}],[11,"sub_time","","",319,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"result"}}],[11,"add_duration","","",319,{"inputs":[{"name":"systemtime"},{"name":"duration"}],"output":{"name":"systemtime"}}],[11,"sub_duration","","",319,{"inputs":[{"name":"systemtime"},{"name":"duration"}],"output":{"name":"systemtime"}}],[11,"from","","",319,{"inputs":[{"name":"timespec"}],"output":{"name":"systemtime"}}],[11,"fmt","","",319,{"inputs":[{"name":"systemtime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"now","","",317,{"inputs":[{"name":"i32"}],"output":{"name":"timespec"}}],[11,"eq","","",317,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",317,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"option"}}],[11,"cmp","","",317,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"ordering"}}],[11,"new","std::sys::stdio","",320,{"inputs":[],"output":{"name":"result"}}],[11,"read","","",320,null],[11,"new","","",321,{"inputs":[],"output":{"name":"result"}}],[11,"write","","",321,null],[11,"new","","",322,{"inputs":[],"output":{"name":"result"}}],[11,"write","","",322,null],[11,"write","","",322,null],[11,"flush","","",322,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"clone","std::panicking","",323,{"inputs":[{"name":"handler"}],"output":{"name":"handler"}}],[11,"payload","","Returns the payload associated with the panic.",324,{"inputs":[{"name":"panicinfo"}],"output":{"name":"any"}}],[11,"location","","Returns information about the location from which the panic originated,\nif available.",324,{"inputs":[{"name":"panicinfo"}],"output":{"name":"option"}}],[11,"file","","Returns the name of the source file from which the panic originated.",325,{"inputs":[{"name":"location"}],"output":{"name":"str"}}],[11,"line","","Returns the line number from which the panic originated.",325,{"inputs":[{"name":"location"}],"output":{"name":"u32"}}],[11,"new","std::rand::reader","Create a new `ReaderRng` from a `Read`.",326,{"inputs":[{"name":"r"}],"output":{"name":"readerrng"}}],[11,"next_u32","","",326,{"inputs":[{"name":"readerrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",326,{"inputs":[{"name":"readerrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",326,null],[11,"clone","std::rand","",327,{"inputs":[{"name":"stdrng"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",327,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",327,{"inputs":[{"name":"stdrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",327,{"inputs":[{"name":"stdrng"}],"output":{"name":"u64"}}],[11,"reseed","","",327,null],[11,"from_seed","","",327,null],[11,"reseed","","",328,null],[11,"clone","","",329,{"inputs":[{"name":"threadrng"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",329,{"inputs":[{"name":"threadrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",329,{"inputs":[{"name":"threadrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",329,null],[11,"new","","Create a new `OsRng`.",330,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",330,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",330,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",330,null],[11,"fmt","","",331,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",331,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",331,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",331,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",331,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",331,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",331,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",331,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",332,null],[11,"fmt","","",332,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",332,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",332,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",332,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",332,{"inputs":[],"output":{"name":"typeid"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",333,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",333,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",333,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",333,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",333,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",333,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",333,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",334,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",334,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",334,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",334,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",335,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",335,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",335,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",335,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",335,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",335,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",335,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",335,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",335,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",336,null],[11,"clone","","",336,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",337,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",337,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",337,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",337,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",338,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",338,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",339,null],[11,"deref","","",338,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",338,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",340,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",340,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",340,null],[11,"fmt","core::cmp","",341,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",341,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",341,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",341,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",341,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",341,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",341,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",342,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",342,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",342,null],[11,"finish","","",342,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",342,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",342,{"inputs":[],"output":{"name":"siphasher"}}],[11,"build_hasher","core::hash","",343,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"h"}}],[11,"clone","","",343,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"buildhasherdefault"}}],[11,"default","","",343,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"clone","core::iter","",344,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",344,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",344,null],[11,"next_back","","",344,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",345,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",345,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",345,null],[11,"next_back","","",345,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",346,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",346,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",346,null],[11,"clone","","",347,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"clone","","",348,{"inputs":[{"name":"chainstate"}],"output":{"name":"chainstate"}}],[11,"next","","",347,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",347,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",347,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",347,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",347,null],[11,"next_back","","",347,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",349,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",349,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",349,null],[11,"next_back","","",349,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",350,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",350,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",350,null],[11,"next_back","","",350,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",351,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",351,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",351,null],[11,"next_back","","",351,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",352,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",352,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",352,null],[11,"next_back","","",352,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",353,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",353,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",353,null],[11,"nth","","",353,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",353,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",353,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",354,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",354,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",354,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",354,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",354,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",354,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",354,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks if the iterator has finished iterating.",354,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",355,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",355,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",355,null],[11,"clone","","",356,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",356,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",356,null],[11,"clone","","",357,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",357,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",357,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",357,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",357,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",357,null],[11,"clone","","",358,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",358,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",358,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",358,null],[11,"clone","","",359,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",359,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",359,null],[11,"clone","","",360,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",360,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",360,null],[11,"next_back","","",360,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",361,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",361,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",361,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",361,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",361,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",361,null],[11,"next_back","","",361,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",362,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",362,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",362,null],[11,"next_back","","",362,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",363,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",364,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",365,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",363,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",363,null],[11,"clone","","",366,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",366,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",366,null],[11,"next_back","","",366,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",363,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",363,null],[11,"next","core::ops","",365,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",365,null],[11,"next_back","","",365,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",364,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",367,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",367,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",367,null],[11,"next_back","","",367,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",368,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",368,null],[11,"next_back","","",368,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",368,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",368,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",368,{"inputs":[],"output":{"name":"empty"}}],[11,"clone","","",369,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",369,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",369,null],[11,"next_back","","",369,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",369,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"hash","core::marker","",370,null],[11,"eq","","",370,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",370,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",370,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",370,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"default","","",370,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",371,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",371,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",371,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",371,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",365,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",365,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",365,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",365,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",364,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",364,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",364,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",364,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",372,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",372,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",372,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",372,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","core::ptr","Creates a new `Unique`.",373,null],[11,"get","","Dereferences the content.",373,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",373,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",373,null],[11,"fmt","","",373,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Shared`.",374,null],[11,"clone","","",374,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",374,null],[11,"fmt","","",374,{"inputs":[{"name":"shared"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","core::raw","",375,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",376,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",377,null],[11,"fmt","","",377,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",377,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",377,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",377,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",377,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",377,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",377,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",377,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",377,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",377,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",377,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",377,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",377,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",377,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",377,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",377,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",377,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",377,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",377,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",377,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",377,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",377,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",377,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",377,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",377,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",377,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",377,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",377,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",377,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",377,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",378,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",378,null],[11,"next_back","","",378,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",378,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",379,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",379,null],[11,"next_back","","",379,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",380,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",380,null],[11,"next_back","","",380,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",377,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"hash","core::option","",381,null],[11,"fmt","","",381,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",381,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",381,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",381,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",381,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",381,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",381,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",381,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",381,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",381,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"is_some","","Returns `true` if the option is a `Some` value",381,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",381,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",381,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",381,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",381,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",381,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",381,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",381,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",381,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",381,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",381,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",381,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",381,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",381,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",381,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",381,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",381,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",381,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",381,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",381,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",381,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",381,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","","",381,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",381,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",382,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",382,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",382,null],[11,"next_back","","",382,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",383,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",383,null],[11,"next_back","","",383,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",383,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",384,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",384,null],[11,"next_back","","",384,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",385,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",385,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",385,null],[11,"next_back","","",385,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",381,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"clone","alloc::boxed","",386,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"exchangeheapsingleton"}}],[11,"pointer","","",387,null],[11,"make_place","","",387,{"inputs":[],"output":{"name":"intermediatebox"}}],[11,"finalize","","",387,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"finalize","","",0,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",386,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"intermediatebox"}}],[11,"drop","","",387,null],[11,"new","","Allocates memory on the heap and then places `x` into it.",0,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from a raw pointer.",0,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"box"}}],[11,"default","","",0,{"inputs":[],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box&#39;s contents.",0,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone_from","","Copies `source`&#39;s contents into `self` without creating a new allocation.",0,null],[11,"clone","","",0,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"eq","","",0,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"ordering"}}],[11,"hash","","",0,null],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",0,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",0,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",0,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref_mut","","",0,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"next","","",0,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"size_hint","","",0,null],[11,"next_back","","",0,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"call_once","","",0,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"call_once","","",0,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"clone","","",0,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"borrow","","",0,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"borrow_mut","","",0,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"as_ref","","",0,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"as_mut","","",0,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"new","alloc::rc","Constructs a new `Rc&lt;T&gt;`.",388,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc&lt;T&gt;` has only one strong reference.\nThis will succeed even if there are outstanding weak references.",388,{"inputs":[{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",388,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Downgrades the `Rc&lt;T&gt;` to a `Weak&lt;T&gt;` reference.",388,{"inputs":[{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",388,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",388,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak&lt;T&gt;` values that share\nthe same inner value.",388,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc&lt;T&gt;` has\none strong reference and no weak references.",388,{"inputs":[{"name":"rc"}],"output":{"name":"option"}}],[11,"make_mut","","Make a mutable reference into the given `Rc&lt;T&gt;` by cloning the inner\ndata if the `Rc&lt;T&gt;` doesn&#39;t have one strong reference and no weak\nreferences.",388,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",388,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"drop","","Drops the `Rc&lt;T&gt;`.",388,null],[11,"clone","","Makes a clone of the `Rc&lt;T&gt;`.",388,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"default","","Creates a new `Rc&lt;T&gt;`, with the `Default` value for `T`.",388,{"inputs":[],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc&lt;T&gt;`s.",388,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Rc&lt;T&gt;`s.",388,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Rc&lt;T&gt;`s.",388,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Rc&lt;T&gt;`s.",388,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"le","","&#39;Less-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",388,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Rc&lt;T&gt;`s.",388,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ge","","&#39;Greater-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",388,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"cmp","","Comparison for two `Rc&lt;T&gt;`s.",388,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"ordering"}}],[11,"hash","","",388,null],[11,"fmt","","",388,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",388,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",388,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",388,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",389,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"drop","","Drops the `Weak&lt;T&gt;`.",389,null],[11,"clone","","Makes a clone of the `Weak&lt;T&gt;`.",389,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"fmt","","",389,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Constructs a new `Weak&lt;T&gt;` without an accompanying instance of T.",389,{"inputs":[],"output":{"name":"weak"}}],[11,"borrow","","",388,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"as_ref","","",388,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"borrow","collections::borrow","",85,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"clone","","",85,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",85,null],[11,"into_owned","","Extracts the owned data.",85,null],[11,"deref","","",85,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"cmp","","",85,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"ordering"}}],[11,"eq","","",85,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",85,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"option"}}],[11,"fmt","","",85,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",85,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",85,null],[11,"into_cow","","",85,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"as_ref","","",85,{"inputs":[{"name":"cow"}],"output":{"name":"t"}}],[11,"borrow","collections::vec","",57,null],[11,"borrow_mut","","",57,null],[11,"clone","collections::str","",390,{"inputs":[{"name":"encodeutf16"}],"output":{"name":"encodeutf16"}}],[11,"next","","",390,{"inputs":[{"name":"encodeutf16"}],"output":{"name":"option"}}],[11,"size_hint","","",390,null],[11,"borrow","collections::string","",86,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"fmt","core::str::pattern","",391,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",391,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",391,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",391,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",392,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",393,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",392,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",392,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",392,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",394,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",394,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",394,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",394,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",394,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",394,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",394,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",394,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",395,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",395,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",395,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",395,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",395,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",395,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",395,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",395,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",396,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",396,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",396,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",396,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",396,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",396,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",396,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",396,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",397,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",397,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",398,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",398,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",399,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",399,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",397,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",397,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",397,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",397,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",397,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",400,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",400,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",401,{"inputs":[],"output":{"name":"bool"}}],[11,"rejecting","","",401,null],[11,"matching","","",401,null],[11,"use_early_reject","","",402,{"inputs":[],"output":{"name":"bool"}}],[11,"rejecting","","",402,null],[11,"matching","","",402,null],[11,"cmp","collections::string","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"option"}}],[11,"lt","","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"le","","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"gt","","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ge","","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new empty `String`.",86,{"inputs":[],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",86,{"inputs":[{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",86,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid characters.",86,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `Err`\nif `v` contains any invalid data.",86,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",86,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",86,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",86,{"inputs":[{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Converts a `String` into a byte vector.",86,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"as_str","","Extracts a string slice containing the entire string.",86,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_mut_str","","Extracts a string slice containing the entire string.",86,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"push_str","","Appends a given string slice onto the end of this `String`.",86,null],[11,"capacity","","Returns this `String`&#39;s capacity, in bytes.",86,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"reserve","","Ensures that this `String`&#39;s capacity is at least `additional` bytes\nlarger than its length.",86,null],[11,"reserve_exact","","Ensures that this `String`&#39;s capacity is `additional` bytes\nlarger than its length.",86,null],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",86,null],[11,"push","","Appends the given `char` to the end of this `String`.",86,null],[11,"as_bytes","","Returns a byte slice of this `String`&#39;s contents.",86,null],[11,"truncate","","Shortens this `String` to the specified length.",86,null],[11,"pop","","Removes the last character from the string buffer and returns it.",86,{"inputs":[{"name":"string"}],"output":{"name":"option"}}],[11,"remove","","Removes a `char` from this `String` at a byte position and returns it.",86,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"char"}}],[11,"insert","","Inserts a character into this `String` at a byte position.",86,null],[11,"as_mut_vec","","Returns a mutable reference to the contents of this `String`.",86,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of this `String`, in bytes.",86,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if this `String` has a length of zero.",86,{"inputs":[{"name":"string"}],"output":{"name":"bool"}}],[11,"clear","","Truncates this `String`, removing all contents.",86,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars.",86,{"inputs":[{"name":"string"},{"name":"r"}],"output":{"name":"drain"}}],[11,"into_boxed_str","","Converts this `String` into a `Box&lt;str&gt;`.",86,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"into_bytes","","Returns the bytes that were attempted to convert to a `String`.",5,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"vec"}}],[11,"utf8_error","","Fetch a `Utf8Error` to get more details about the conversion failure.",5,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"utf8error"}}],[11,"fmt","","",5,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",86,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"clone_from","","",86,null],[11,"from_iter","","",86,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",86,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",86,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",86,null],[11,"extend","","",86,null],[11,"extend","","",86,null],[11,"extend","","",86,null],[11,"eq","","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",85,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",85,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",85,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","collections::string","",86,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"default","","",86,{"inputs":[],"output":{"name":"string"}}],[11,"fmt","","",86,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",86,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",86,null],[11,"add","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"index","","",86,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index","","",86,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index","","",86,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index","","",86,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"index_mut","","",86,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index_mut","","",86,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index_mut","","",86,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index_mut","","",86,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"deref","","",86,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"deref_mut","","",86,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"from_str","","",86,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"fmt","","",7,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"as_ref","","",86,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_ref","","",86,null],[11,"from","","",86,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",85,{"inputs":[{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",85,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",86,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"into_cow","","",86,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"write_str","","",86,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",86,{"inputs":[{"name":"string"},{"name":"char"}],"output":{"name":"result"}}],[11,"drop","","",403,null],[11,"next","","",403,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",403,null],[11,"next_back","","",403,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"new","collections::vec","Constructs a new, empty `Vec&lt;T&gt;`.",57,{"inputs":[],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec&lt;T&gt;` with the specified capacity.",57,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec&lt;T&gt;` directly from the raw components of another vector.",57,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",57,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec&lt;T&gt;`. The collection may reserve more space to avoid\nfrequent reallocations.",57,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec&lt;T&gt;`. Does nothing if the capacity is already\nsufficient.",57,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",57,null],[11,"into_boxed_slice","","Converts the vector into Box&lt;[T]&gt;.",57,{"inputs":[{"name":"vec"}],"output":{"name":"box"}}],[11,"truncate","","Shorten a vector to be `len` elements long, dropping excess elements.",57,null],[11,"as_slice","","Extracts a slice containing the entire vector.",57,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",57,null],[11,"set_len","","Sets the length of a vector.",57,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",57,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after it to the right.",57,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after it to the left.",57,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"retain","","Retains only the elements specified by the predicate.",57,null],[11,"push","","Appends an element to the back of a collection.",57,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",57,{"inputs":[{"name":"vec"}],"output":{"name":"option"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",57,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items.",57,{"inputs":[{"name":"vec"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the vector, removing all values.",57,null],[11,"len","","Returns the number of elements in the vector.",57,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the vector contains no elements.",57,{"inputs":[{"name":"vec"}],"output":{"name":"bool"}}],[11,"split_off","","Splits the collection into two at the given index.",57,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",57,null],[11,"push_all","","",57,null],[11,"extend_from_slice","","Appends all elements in a slice to the `Vec`.",57,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",57,null],[11,"clone","","",57,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"clone_from","","",57,null],[11,"hash","","",57,null],[11,"index","","",57,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",57,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index","","",57,null],[11,"index","","",57,null],[11,"index","","",57,null],[11,"index","","",57,null],[11,"index_mut","","",57,null],[11,"index_mut","","",57,null],[11,"index_mut","","",57,null],[11,"index_mut","","",57,null],[11,"deref","","",57,null],[11,"deref_mut","","",57,null],[11,"from_iter","","",57,{"inputs":[{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",57,{"inputs":[{"name":"vec"}],"output":{"name":"intoiter"}}],[11,"extend","","",57,null],[11,"extend","","",57,null],[11,"eq","","",57,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","collections::borrow","",85,null],[11,"ne","","",85,null],[11,"eq","","",85,null],[11,"ne","","",85,null],[11,"eq","","",85,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","collections::vec","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"partial_cmp","","",57,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"option"}}],[11,"cmp","","",57,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"ordering"}}],[11,"drop","","",57,null],[11,"default","","",57,{"inputs":[],"output":{"name":"vec"}}],[11,"fmt","","",57,{"inputs":[{"name":"vec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",57,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_mut","","",57,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_ref","","",57,null],[11,"as_mut","","",57,null],[11,"from","","",57,null],[11,"from","","",57,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"from","collections::borrow","",85,null],[11,"from","","",85,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"from_iter","","",85,{"inputs":[{"name":"i"}],"output":{"name":"cow"}}],[11,"into_cow","collections::vec","",57,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"next","","",404,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",404,null],[11,"count","","",404,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next_back","","",404,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"clone","","",404,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"drop","","",404,null],[11,"next","","",405,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",405,null],[11,"next_back","","",405,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"drop","","",405,null],[11,"next","rustc_unicode::char","",406,{"inputs":[{"name":"tolowercase"}],"output":{"name":"option"}}],[11,"next","","",407,{"inputs":[{"name":"touppercase"}],"output":{"name":"option"}}],[11,"next","","",408,{"inputs":[{"name":"casemappingiter"}],"output":{"name":"option"}}],[11,"clone","","",409,{"inputs":[{"name":"decodeutf16"}],"output":{"name":"decodeutf16"}}],[11,"next","","",409,{"inputs":[{"name":"decodeutf16"}],"output":{"name":"option"}}],[11,"size_hint","","",409,null],[6,"Result","systemd","",null,null],[3,"Error","","The error type for I/O operations of the `Read`, `Write`, `Seek`, and\nassociated traits.",null,null],[5,"ffi_result","","Convert a systemd ffi return value into a Result",null,{"inputs":[{"name":"c_int"}],"output":{"name":"result"}}],[0,"journal","","High-level interface to the systemd journal.",null,null],[3,"JournalLog","systemd::journal","",null,null],[3,"Journal","","A cursor into the systemd journal.",null,null],[4,"JournalFiles","","Represents the set of journal files to read.",null,null],[13,"System","","The system-wide journal.",410,null],[13,"CurrentUser","","The current user&#39;s journal.",410,null],[13,"All","","Both the system-wide journal and the current user&#39;s journal.",410,null],[5,"send","","Send preformatted fields to systemd.",null,null],[5,"print","","Send a simple message to systemd.",null,{"inputs":[{"name":"u32"},{"name":"str"}],"output":{"name":"c_int"}}],[5,"log_record","","Send a `log::LogRecord` to systemd.",null,{"inputs":[{"name":"logrecord"}],"output":null}],[5,"log","","",null,{"inputs":[{"name":"usize"},{"name":"loglocation"},{"name":"arguments"}],"output":null}],[6,"JournalRecord","","",null,null],[11,"enabled","","",411,{"inputs":[{"name":"journallog"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[11,"log","","",411,{"inputs":[{"name":"journallog"},{"name":"logrecord"}],"output":null}],[11,"init","","",411,{"inputs":[],"output":{"name":"result"}}],[11,"open","","Open the systemd journal for reading.",412,{"inputs":[{"name":"journalfiles"},{"name":"bool"},{"name":"bool"}],"output":{"name":"result"}}],[11,"next_record","","Read the next record from the journal. Returns `io::EndOfFile` if there\nare no more records to read.",412,{"inputs":[{"name":"journal"}],"output":{"name":"result"}}],[11,"drop","","",412,{"inputs":[{"name":"journal"}],"output":null}],[0,"daemon","systemd","High-level interface to the systemd daemon module.",null,null],[4,"SocketType","systemd::daemon","",null,null],[13,"Stream","","",413,null],[13,"Datagram","","",413,null],[13,"Raw","","",413,null],[4,"Listening","","Options for checking whether a socket is in listening mode",null,null],[13,"IsListening","","Verify that socket is in listening mode",414,null],[13,"IsNotListening","","Verify that socket is not in listening mode",414,null],[13,"NoListeningCheck","","Don&#39;t check whether socket is listening",414,null],[5,"listen_fds","","Returns how many file descriptors have been passed. Removes the\n`$LISTEN_FDS` and `$LISTEN_PID` file descriptors from the environment if\n`unset_environment` is `true`",null,{"inputs":[{"name":"bool"}],"output":{"name":"result"}}],[5,"is_fifo","","Identifies whether the passed file descriptor is a FIFO.  If a path is\nsupplied, the file descriptor must also match the path.",null,{"inputs":[{"name":"fd"},{"name":"option"}],"output":{"name":"result"}}],[5,"is_special","","Identifies whether the passed file descriptor is a special character device.\nIf a path is supplied, the file descriptor must also match the path.",null,{"inputs":[{"name":"fd"},{"name":"option"}],"output":{"name":"result"}}],[5,"is_socket","","Identifies whether the passed file descriptor is a socket. If family and\ntype are supplied, they must match as well. See `Listening` for listening\ncheck parameters.",null,{"inputs":[{"name":"fd"},{"name":"option"},{"name":"option"},{"name":"listening"}],"output":{"name":"result"}}],[5,"is_socket_inet","","Identifies whether the passed file descriptor is an Internet socket. If\nfamily, type, and/or port are supplied, they must match as well. See\n`Listening` for listening check parameters.",null,{"inputs":[{"name":"fd"},{"name":"option"},{"name":"option"},{"name":"listening"},{"name":"option"}],"output":{"name":"result"}}],[5,"tcp_listener","","",null,{"inputs":[{"name":"fd"}],"output":{"name":"result"}}],[5,"is_socket_unix","","Identifies whether the passed file descriptor is an AF_UNIX socket. If type\nare supplied, it must match as well. For normal sockets, leave the path set\nto None; otherwise, pass in the full socket path.  See `Listening` for\nlistening check parameters.",null,{"inputs":[{"name":"fd"},{"name":"option"},{"name":"listening"},{"name":"option"}],"output":{"name":"result"}}],[5,"is_mq","","Identifies whether the passed file descriptor is a POSIX message queue. If a\npath is supplied, it will also verify the name.",null,{"inputs":[{"name":"fd"},{"name":"option"}],"output":{"name":"result"}}],[5,"notify","","Notifies systemd that daemon state has changed.  state is made up of a set\nof key-value pairs.  See `sd-daemon.h` for details. Some of the most common\nkeys are defined as `STATE_*` constants in this module. Returns `true` if\nsystemd was contacted successfully.",null,{"inputs":[{"name":"bool"},{"name":"hashmap"}],"output":{"name":"result"}}],[5,"pid_notify","","Similar to `notify()`, but this sends the message on behalf of the supplied\nPID, if possible.",null,{"inputs":[{"name":"pid_t"},{"name":"bool"},{"name":"hashmap"}],"output":{"name":"result"}}],[5,"booted","","Returns true if the system was booted with systemd.",null,{"inputs":[],"output":{"name":"result"}}],[5,"watchdog_enabled","","Returns a timeout in microseconds before which the watchdog expects a\nresponse from the process. If 0, the watchdog is disabled.",null,{"inputs":[{"name":"bool"}],"output":{"name":"result"}}],[17,"LISTEN_FDS_START","","Number of the first passed file descriptor",null,null],[17,"STATE_READY","","Tells systemd whether daemon startup is finished",null,null],[17,"STATE_STATUS","","Single-line status string describing daemon state",null,null],[17,"STATE_ERRNO","","Errno-style error code in case of failure",null,null],[17,"STATE_BUSERROR","","D-Bus-style error code in case of failure",null,null],[17,"STATE_MAINPID","","Main PID of the daemon, in case systemd didn&#39;t fork it itself",null,null],[17,"STATE_WATCHDOG","","Update the watchdog timestamp (set to 1). Daemon should do this regularly,\nif using this feature.",null,null],[0,"id128","systemd","API for working with 128-bit ID values, which are a generalizastion of OSF UUIDs (see `man 3\nsd-id128` for details",null,null],[3,"Id128","systemd::id128","",null,null],[11,"fmt","","",415,{"inputs":[{"name":"id128"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_cstr","","",415,{"inputs":[{"name":"cstr"}],"output":{"name":"result"}}],[11,"from_random","","",415,{"inputs":[],"output":{"name":"result"}}],[11,"from_machine","","",415,{"inputs":[],"output":{"name":"result"}}],[11,"from_boot","","",415,{"inputs":[],"output":{"name":"result"}}],[11,"as_bytes","","",415,null],[0,"bus","systemd","An interface to work with the dbus message bus.",null,null],[3,"ObjectPath","systemd::bus","A wrapper which promises it always holds a valid dbus object path",null,null],[3,"InterfaceName","","A wrapper which promises it always holds a validated dbus interface name",null,null],[3,"BusName","","",null,null],[3,"MemberName","","",null,null],[3,"Error","","",null,null],[3,"Bus","","",null,null],[3,"BusRef","","",null,null],[3,"Message","","A message to be sent or that was recieved over dbus",null,null],[3,"MessageRef","","A reference to a `Message`",null,null],[3,"MessageIter","","An iterator over the elements of a `Message`, use this to read data out of a message.",null,null],[0,"types","","Define a mechanism for converting types to messages and messages to types",null,null],[3,"UnixFd","systemd::bus::types","A basic wrapper that simply ensures we send a Fd via the dbus file descriptor mechanisms rather\nthan as a integer",null,null],[8,"SdBusMessageDirect","","When impled for a Type, promises that a reference to the type cast to a pointer can be encoded\nusing the given `dbus_type()` using `sd_bus_message_append_basic` and decoded similarly using\n`sd_bus_message_read_basic`",null,null],[10,"dbus_type","","",416,{"inputs":[],"output":{"name":"u8"}}],[8,"ToSdBusMessage","","Allows types to provide a convertion to a dbus message",null,null],[10,"to_message","","",417,{"inputs":[{"name":"tosdbusmessage"},{"name":"messageref"}],"output":{"name":"result"}}],[8,"FromSdBusMessage","","Allows types to provide a convertion from a dbus message",null,null],[10,"from_message","","",418,{"inputs":[{"name":"messageiter"}],"output":{"name":"result"}}],[11,"to_message","","",419,{"inputs":[{"name":"unixfd"},{"name":"messageref"}],"output":{"name":"result"}}],[11,"from_message","","",419,{"inputs":[{"name":"messageiter"}],"output":{"name":"result"}}],[6,"Result","systemd::bus","Result type for dbus calls that contains errors returned by remote services (and local errors as\nwell).",null,null],[11,"fmt","","",420,{"inputs":[{"name":"objectpath"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_bytes","","Create a path reference from a u8 slice. Performs all checking needed to ensure requirements\nare met.",420,null],[11,"from_bytes_unchecked","","",420,null],[11,"from_ptr_unchecked","","",420,null],[11,"deref","","",420,{"inputs":[{"name":"objectpath"}],"output":{"name":"target"}}],[11,"fmt","","",421,{"inputs":[{"name":"interfacename"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_bytes","","Create a interface name reference from a u8 slice.",421,null],[11,"from_bytes_unchecked","","Unsafety:",421,null],[11,"from_ptr_unchecked","","Unsafety:",421,null],[11,"deref","","",421,{"inputs":[{"name":"interfacename"}],"output":{"name":"target"}}],[11,"fmt","","",422,{"inputs":[{"name":"busname"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_bytes","","Create a bus name reference from a u8 slice.",422,null],[11,"from_bytes_unchecked","","",422,null],[11,"from_ptr_unchecked","","",422,null],[11,"deref","","",422,{"inputs":[{"name":"busname"}],"output":{"name":"target"}}],[11,"fmt","","",423,{"inputs":[{"name":"membername"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_bytes","","Create a member name reference from a u8 slice.",423,null],[11,"from_bytes_unchecked","","",423,null],[11,"from_ptr_unchecked","","",423,null],[11,"deref","","",423,{"inputs":[{"name":"membername"}],"output":{"name":"target"}}],[11,"new","","",424,{"inputs":[{"name":"utf8cstr"},{"name":"option"}],"output":{"name":"error"}}],[11,"name","","",424,{"inputs":[{"name":"error"}],"output":{"name":"utf8cstr"}}],[11,"message","","",424,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"description","","",424,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"fmt","","",424,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",424,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",425,{"inputs":[],"output":{"name":"result"}}],[11,"default_user","","",425,{"inputs":[],"output":{"name":"result"}}],[11,"default_system","","",425,{"inputs":[],"output":{"name":"result"}}],[11,"borrow","","",425,{"inputs":[{"name":"bus"}],"output":{"name":"busref"}}],[11,"borrow_mut","","",425,{"inputs":[{"name":"bus"}],"output":{"name":"busref"}}],[11,"deref","","",425,{"inputs":[{"name":"bus"}],"output":{"name":"target"}}],[11,"deref_mut","","",425,{"inputs":[{"name":"bus"}],"output":{"name":"target"}}],[11,"drop","","",425,{"inputs":[{"name":"bus"}],"output":null}],[11,"clone","","",425,{"inputs":[{"name":"bus"}],"output":{"name":"bus"}}],[11,"fmt","","",426,{"inputs":[{"name":"busref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_owned","","",426,{"inputs":[{"name":"busref"}],"output":{"name":"owned"}}],[11,"to_owned","","",426,{"inputs":[{"name":"busref"}],"output":{"name":"bus"}}],[11,"events","","",426,{"inputs":[{"name":"busref"}],"output":{"name":"result"}}],[11,"timeout","","",426,{"inputs":[{"name":"busref"}],"output":{"name":"result"}}],[11,"fd","","",426,{"inputs":[{"name":"busref"}],"output":{"name":"result"}}],[11,"unique_name","","",426,{"inputs":[{"name":"busref"}],"output":{"name":"result"}}],[11,"new_signal","","",426,{"inputs":[{"name":"busref"},{"name":"objectpath"},{"name":"interfacename"},{"name":"membername"}],"output":{"name":"result"}}],[11,"new_method_call","","",426,{"inputs":[{"name":"busref"},{"name":"busname"},{"name":"objectpath"},{"name":"interfacename"},{"name":"membername"}],"output":{"name":"result"}}],[11,"request_name","","This blocks. To get async behavior, use &#39;call_async&#39; directly.",426,{"inputs":[{"name":"busref"},{"name":"busname"},{"name":"u64"}],"output":{"name":"result"}}],[11,"release_name","","This blocks. To get async behavior, use &#39;call_async&#39; directly.",426,{"inputs":[{"name":"busref"},{"name":"busname"}],"output":{"name":"result"}}],[11,"add_object","","",426,{"inputs":[{"name":"busref"},{"name":"objectpath"},{"name":"f"}],"output":{"name":"result"}}],[11,"add_object_manager","","",426,{"inputs":[{"name":"busref"},{"name":"objectpath"}],"output":{"name":"result"}}],[11,"as_raw_fd","","",426,{"inputs":[{"name":"busref"}],"output":{"name":"c_int"}}],[11,"drop","","",427,{"inputs":[{"name":"message"}],"output":null}],[11,"clone","","",427,{"inputs":[{"name":"message"}],"output":{"name":"message"}}],[11,"deref","","",427,{"inputs":[{"name":"message"}],"output":{"name":"target"}}],[11,"deref_mut","","",427,{"inputs":[{"name":"message"}],"output":{"name":"target"}}],[11,"borrow","","",427,{"inputs":[{"name":"message"}],"output":{"name":"messageref"}}],[11,"borrow_mut","","",427,{"inputs":[{"name":"message"}],"output":{"name":"messageref"}}],[11,"to_owned","","",428,{"inputs":[{"name":"messageref"}],"output":{"name":"owned"}}],[11,"bus","","",428,{"inputs":[{"name":"messageref"}],"output":{"name":"busref"}}],[11,"set_destination","","Set the message destination, the name of the bus client we want to send this message to.",428,{"inputs":[{"name":"messageref"},{"name":"busname"}],"output":{"name":"result"}}],[11,"set_auto_start","","Set to true to allow the bus to launch an owner for the destination name.",428,{"inputs":[{"name":"messageref"},{"name":"bool"}],"output":{"name":"result"}}],[11,"send","","Send expecting a reply. Returns the reply cookie.",428,{"inputs":[{"name":"messageref"}],"output":{"name":"result"}}],[11,"send_no_reply","","Send without expecting any reply\nSeals `self`.",428,{"inputs":[{"name":"messageref"}],"output":{"name":"result"}}],[11,"send_to","","Send this message to a destination.",428,{"inputs":[{"name":"messageref"},{"name":"busname"}],"output":{"name":"result"}}],[11,"send_to_no_reply","","Same as `self.send_to()`, but don&#39;t expect a reply.\nSeals `self`.",428,{"inputs":[{"name":"messageref"},{"name":"busname"}],"output":{"name":"result"}}],[11,"call","","Use this message to call a dbus method. Blocks until a reply is recieved or `usec`\nmicroseconds elapse (ie: this times out)",428,{"inputs":[{"name":"messageref"},{"name":"u64"}],"output":{"name":"result"}}],[11,"call_async","","Use this message to call a dbus method. Returns immediately and will call the callback when\na reply is recieved.",428,{"inputs":[{"name":"messageref"},{"name":"f"},{"name":"u64"}],"output":{"name":"result"}}],[11,"new_method_error","","",428,{"inputs":[{"name":"messageref"},{"name":"error"}],"output":{"name":"result"}}],[11,"new_method_return","","",428,{"inputs":[{"name":"messageref"}],"output":{"name":"result"}}],[11,"append_basic_raw","","Raw access to append data to this message\nWill fail if the message is sealed",428,null],[11,"append","","Append a value to the message",428,{"inputs":[{"name":"messageref"},{"name":"v"}],"output":{"name":"result"}}],[11,"iter","","Get an iterator over the message. This iterator really exists with in the `Message` itself,\nso we can only hand out one at a time.",428,{"inputs":[{"name":"messageref"}],"output":{"name":"result"}}],[11,"read_basic_raw","","Read an element from the message and advance the internal cursor\nReferences returned by this function are valid until the iterator itself is dropped (just\nto garuntee they don&#39;t change).",429,{"inputs":[{"name":"messageiter"},{"name":"u8"},{"name":"f"}],"output":{"name":"result"}}],[11,"peek_type","","This needs to be `&amp;mut` as the `&amp;str` will be invalid after either of:\n - self is dropped\n - sd_bus_message_peek_type is called a second time",429,{"inputs":[{"name":"messageiter"}],"output":{"name":"result"}}],[11,"next","","",429,{"inputs":[{"name":"messageiter"}],"output":{"name":"result"}}],[14,"sd_try!","systemd","An analogue of `try!()` for systemd FFI calls.",null,null],[14,"char_or_null!","","Given an Option&lt;&amp;str&gt;, either returns a pointer to a const char*, or a NULL\npointer if None.",null,null],[14,"log_with!","","Similar to `log!()`, except it accepts a func argument rather than hard\ncoding `::log::log()`, and it doesn&#39;t filter on `log_enabled!()`.",null,null],[14,"sd_journal_log!","","",null,null]],"paths":[[3,"Box"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"ParseIntError"],[3,"ParseFloatError"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[4,"ParseError"],[8,"Error"],[3,"EscapeDefault"],[3,"Wrapping"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"ScopedKey"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"RawBucket"],[3,"Bucket"],[3,"SafeHash"],[3,"FullBucket"],[3,"EmptyBucket"],[4,"BucketState"],[3,"GapThenFull"],[3,"RawTable"],[3,"RawBuckets"],[3,"RevMoveBuckets"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"DefaultResizePolicy"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"DefaultState"],[3,"BinaryHeap"],[3,"Hole"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Vec"],[3,"Iter"],[3,"IntoIter"],[3,"Rawlink"],[3,"LinkedList"],[3,"IterMut"],[3,"FrontPlace"],[3,"BackPlace"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"DynamicLibrary"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"IntoStringError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[4,"Cow"],[3,"String"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"ReadDir"],[3,"DirEntry"],[3,"WalkDir"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"Cursor"],[3,"Custom"],[4,"ErrorKind"],[4,"Repr"],[3,"Lazy"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"StdinRaw"],[3,"StdoutRaw"],[3,"StderrRaw"],[4,"Maybe"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Broadcast"],[3,"Chain"],[3,"Take"],[3,"Tee"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"stat"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[3,"AssertRecoverSafe"],[4,"Prefix"],[4,"State"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Path"],[3,"StripPrefixError"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"SignalToken"],[3,"WaitToken"],[3,"Packet"],[4,"StartResult"],[3,"Select"],[3,"Handle"],[3,"Packets"],[3,"Packet"],[3,"Packet"],[4,"Failure"],[3,"Packet"],[3,"Queue"],[3,"Queue"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"Mutex"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"Semaphore"],[3,"SemaphoreGuard"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Duration"],[3,"Instant"],[3,"SystemTime"],[3,"SystemTimeError"],[3,"Condvar"],[3,"EHContext"],[3,"DwarfReader"],[4,"_Unwind_Action"],[4,"_Unwind_Reason_Code"],[3,"Mutex"],[3,"LookupHost"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[3,"Flag"],[3,"PoisonError"],[4,"TryLockError"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"RWLock"],[3,"StaticKey"],[3,"Key"],[3,"CodePoint"],[3,"Wtf8Buf"],[3,"Wtf8"],[3,"Wtf8CodePoints"],[3,"EncodeWide"],[3,"Weak"],[3,"Condvar"],[3,"FileDesc"],[3,"FileAttr"],[3,"OpenOptions"],[3,"FilePermissions"],[3,"FileType"],[3,"ReadDir"],[3,"Dir"],[3,"DirEntry"],[3,"File"],[3,"DirBuilder"],[3,"Mutex"],[3,"ReentrantMutex"],[3,"Socket"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"fd_set"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"passwd"],[3,"statvfs"],[3,"sockaddr_nl"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"fsid_t"],[3,"mq_attr"],[3,"cpu_set_t"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"sigset_t"],[3,"stat"],[3,"stat64"],[3,"pthread_attr_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"Env"],[3,"Buf"],[3,"Slice"],[3,"AnonPipe"],[3,"Command"],[3,"ExitStatus"],[3,"Process"],[3,"OsRng"],[3,"RWLock"],[3,"Handler"],[3,"Thread"],[3,"Timespec"],[3,"Instant"],[3,"SystemTime"],[3,"Stdin"],[3,"Stdout"],[3,"Stderr"],[4,"Handler"],[3,"PanicInfo"],[3,"Location"],[3,"ReaderRng"],[3,"StdRng"],[3,"ThreadRngReseeder"],[3,"ThreadRng"],[3,"OsRng"],[8,"Any"],[3,"TypeId"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[4,"Ordering"],[3,"SipHasher"],[3,"BuildHasherDefault"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[4,"ChainState"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeFrom"],[3,"Range"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"PhantomData"],[3,"RangeFull"],[3,"RangeTo"],[3,"Unique"],[3,"Shared"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[4,"Option"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"Rc"],[3,"Weak"],[3,"EncodeUtf16"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"Drain"],[3,"IntoIter"],[3,"Drain"],[3,"ToLowercase"],[3,"ToUppercase"],[4,"CaseMappingIter"],[3,"DecodeUtf16"],[4,"JournalFiles"],[3,"JournalLog"],[3,"Journal"],[4,"SocketType"],[4,"Listening"],[3,"Id128"],[8,"SdBusMessageDirect"],[8,"ToSdBusMessage"],[8,"FromSdBusMessage"],[3,"UnixFd"],[3,"ObjectPath"],[3,"InterfaceName"],[3,"BusName"],[3,"MemberName"],[3,"Error"],[3,"Bus"],[3,"BusRef"],[3,"Message"],[3,"MessageRef"],[3,"MessageIter"]]};
searchIndex["libsystemd_sys"] = {"doc":"Contains definitions for low-level bindings.","items":[[11,"clone","libc::unix","",0,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",1,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",2,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",3,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[11,"clone","","",4,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[11,"clone","","",5,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",6,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",7,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",8,{"inputs":[{"name":"ipv6_mreq"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",9,{"inputs":[{"name":"hostent"}],"output":{"name":"hostent"}}],[11,"clone","","",10,{"inputs":[{"name":"iovec"}],"output":{"name":"iovec"}}],[11,"clone","","",11,{"inputs":[{"name":"pollfd"}],"output":{"name":"pollfd"}}],[11,"clone","","",12,{"inputs":[{"name":"winsize"}],"output":{"name":"winsize"}}],[11,"clone","libc::unix::notbsd","",13,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",14,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",15,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",16,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",17,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",18,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",19,{"inputs":[{"name":"sockaddr_nl"}],"output":{"name":"sockaddr_nl"}}],[11,"clone","","",20,{"inputs":[{"name":"sockaddr_ll"}],"output":{"name":"sockaddr_ll"}}],[11,"clone","","",21,{"inputs":[{"name":"fd_set"}],"output":{"name":"fd_set"}}],[11,"clone","","",22,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"clone","","",23,{"inputs":[{"name":"sched_param"}],"output":{"name":"sched_param"}}],[11,"clone","","",24,{"inputs":[{"name":"dl_info"}],"output":{"name":"dl_info"}}],[11,"clone","","",25,{"inputs":[{"name":"epoll_event"}],"output":{"name":"epoll_event"}}],[11,"clone","","",26,{"inputs":[{"name":"utsname"}],"output":{"name":"utsname"}}],[11,"clone","","",27,{"inputs":[{"name":"lconv"}],"output":{"name":"lconv"}}],[11,"clone","libc::unix::notbsd::linux","",28,{"inputs":[{"name":"dirent"}],"output":{"name":"dirent"}}],[11,"clone","","",29,{"inputs":[{"name":"dirent64"}],"output":{"name":"dirent64"}}],[11,"clone","","",30,{"inputs":[{"name":"rlimit64"}],"output":{"name":"rlimit64"}}],[11,"clone","","",31,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",32,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[11,"clone","","",33,{"inputs":[{"name":"pthread_mutex_t"}],"output":{"name":"pthread_mutex_t"}}],[11,"clone","","",34,{"inputs":[{"name":"pthread_rwlock_t"}],"output":{"name":"pthread_rwlock_t"}}],[11,"clone","","",35,{"inputs":[{"name":"pthread_mutexattr_t"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"clone","","",36,{"inputs":[{"name":"pthread_cond_t"}],"output":{"name":"pthread_cond_t"}}],[11,"clone","","",37,{"inputs":[{"name":"passwd"}],"output":{"name":"passwd"}}],[11,"clone","","",38,{"inputs":[{"name":"statvfs"}],"output":{"name":"statvfs"}}],[11,"clone","","",39,{"inputs":[{"name":"dqblk"}],"output":{"name":"dqblk"}}],[11,"clone","","",40,{"inputs":[{"name":"signalfd_siginfo"}],"output":{"name":"signalfd_siginfo"}}],[11,"clone","","",41,{"inputs":[{"name":"fsid_t"}],"output":{"name":"fsid_t"}}],[11,"clone","","",42,{"inputs":[{"name":"mq_attr"}],"output":{"name":"mq_attr"}}],[11,"clone","","",43,{"inputs":[{"name":"cpu_set_t"}],"output":{"name":"cpu_set_t"}}],[11,"clone","libc::unix::notbsd::linux::other","",44,{"inputs":[{"name":"sigaction"}],"output":{"name":"sigaction"}}],[11,"clone","","",45,{"inputs":[{"name":"stack_t"}],"output":{"name":"stack_t"}}],[11,"clone","","",46,{"inputs":[{"name":"siginfo_t"}],"output":{"name":"siginfo_t"}}],[11,"clone","","",47,{"inputs":[{"name":"glob64_t"}],"output":{"name":"glob64_t"}}],[11,"clone","","",48,{"inputs":[{"name":"ucred"}],"output":{"name":"ucred"}}],[11,"clone","","",49,{"inputs":[{"name":"statfs"}],"output":{"name":"statfs"}}],[11,"clone","","",50,{"inputs":[{"name":"msghdr"}],"output":{"name":"msghdr"}}],[11,"clone","","",51,{"inputs":[{"name":"termios"}],"output":{"name":"termios"}}],[11,"clone","","",52,{"inputs":[{"name":"flock"}],"output":{"name":"flock"}}],[11,"clone","","",53,{"inputs":[{"name":"ipc_perm"}],"output":{"name":"ipc_perm"}}],[11,"clone","","",54,{"inputs":[{"name":"shmid_ds"}],"output":{"name":"shmid_ds"}}],[11,"clone","libc::unix::notbsd::linux::other::b64","",55,{"inputs":[{"name":"sigset_t"}],"output":{"name":"sigset_t"}}],[11,"clone","libc::unix::notbsd::linux::other::b64::x86_64","",56,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",57,{"inputs":[{"name":"stat64"}],"output":{"name":"stat64"}}],[11,"clone","","",58,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","","",59,{"inputs":[{"name":"mcontext_t"}],"output":{"name":"mcontext_t"}}],[11,"clone","","",60,{"inputs":[{"name":"ucontext_t"}],"output":{"name":"ucontext_t"}}],[6,"size_t","libsystemd_sys","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",40,null],[12,"ssi_errno","","",40,null],[12,"ssi_code","","",40,null],[12,"ssi_pid","","",40,null],[12,"ssi_uid","","",40,null],[12,"ssi_fd","","",40,null],[12,"ssi_tid","","",40,null],[12,"ssi_band","","",40,null],[12,"ssi_overrun","","",40,null],[12,"ssi_trapno","","",40,null],[12,"ssi_status","","",40,null],[12,"ssi_int","","",40,null],[12,"ssi_ptr","","",40,null],[12,"ssi_utime","","",40,null],[12,"ssi_stime","","",40,null],[12,"ssi_addr","","",40,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",46,null],[12,"si_errno","","",46,null],[12,"si_code","","",46,null],[12,"_pad","","",46,null],[6,"clockid_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[11,"from","alloc::boxed","",61,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",61,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",61,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",61,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",61,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"from","","",61,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",62,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"str"}}],[11,"description","","",63,{"inputs":[{"name":"utf8error"}],"output":{"name":"str"}}],[11,"description","core::num","",64,{"inputs":[{"name":"parseinterror"}],"output":{"name":"str"}}],[11,"description","core::num::dec2flt","",65,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"str"}}],[11,"description","collections::string","",66,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"str"}}],[11,"description","","",67,{"inputs":[{"name":"fromutf16error"}],"output":{"name":"str"}}],[11,"description","","",68,{"inputs":[{"name":"parseerror"}],"output":{"name":"str"}}],[11,"description","alloc::boxed","",61,{"inputs":[{"name":"box"}],"output":{"name":"str"}}],[11,"cause","","",61,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"is","","Returns true if the boxed type is the same as `T`",69,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",69,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",69,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",69,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",69,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",69,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",69,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",69,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",69,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",69,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",69,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",69,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"next","std::ascii","",70,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",70,null],[11,"next_back","","",70,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"shl","core::num","",71,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",71,null],[11,"shr","","",71,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",71,null],[11,"shl","","",71,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",71,null],[11,"shr","","",71,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",71,null],[11,"shl","","",71,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",71,null],[11,"shr","","",71,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",71,null],[11,"shl","","",71,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",71,null],[11,"shr","","",71,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",71,null],[11,"shl","","",71,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",71,null],[11,"shr","","",71,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",71,null],[11,"shl","","",71,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",71,null],[11,"shr","","",71,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",71,null],[11,"shl","","",71,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",71,null],[11,"shr","","",71,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",71,null],[11,"shl","","",71,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",71,null],[11,"shr","","",71,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",71,null],[11,"shl","","",71,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",71,null],[11,"shr","","",71,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",71,null],[11,"shl","","",71,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",71,null],[11,"shr","","",71,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",71,null],[11,"add","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",71,null],[11,"sub","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",71,null],[11,"mul","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",71,null],[11,"div","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",71,null],[11,"rem","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",71,null],[11,"not","","",71,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",71,null],[11,"bitor","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",71,null],[11,"bitand","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",71,null],[11,"add","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",71,null],[11,"sub","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",71,null],[11,"mul","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",71,null],[11,"div","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",71,null],[11,"rem","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",71,null],[11,"not","","",71,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",71,null],[11,"bitor","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",71,null],[11,"bitand","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",71,null],[11,"add","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",71,null],[11,"sub","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",71,null],[11,"mul","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",71,null],[11,"div","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",71,null],[11,"rem","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",71,null],[11,"not","","",71,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",71,null],[11,"bitor","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",71,null],[11,"bitand","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",71,null],[11,"add","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",71,null],[11,"sub","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",71,null],[11,"mul","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",71,null],[11,"div","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",71,null],[11,"rem","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",71,null],[11,"not","","",71,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",71,null],[11,"bitor","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",71,null],[11,"bitand","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",71,null],[11,"add","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",71,null],[11,"sub","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",71,null],[11,"mul","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",71,null],[11,"div","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",71,null],[11,"rem","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",71,null],[11,"not","","",71,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",71,null],[11,"bitor","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",71,null],[11,"bitand","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",71,null],[11,"add","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",71,null],[11,"sub","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",71,null],[11,"mul","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",71,null],[11,"div","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",71,null],[11,"rem","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",71,null],[11,"not","","",71,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",71,null],[11,"bitor","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",71,null],[11,"bitand","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",71,null],[11,"add","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",71,null],[11,"sub","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",71,null],[11,"mul","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",71,null],[11,"div","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",71,null],[11,"rem","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",71,null],[11,"not","","",71,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",71,null],[11,"bitor","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",71,null],[11,"bitand","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",71,null],[11,"add","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",71,null],[11,"sub","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",71,null],[11,"mul","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",71,null],[11,"div","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",71,null],[11,"rem","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",71,null],[11,"not","","",71,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",71,null],[11,"bitor","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",71,null],[11,"bitand","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",71,null],[11,"add","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",71,null],[11,"sub","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",71,null],[11,"mul","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",71,null],[11,"div","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",71,null],[11,"rem","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",71,null],[11,"not","","",71,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",71,null],[11,"bitor","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",71,null],[11,"bitand","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",71,null],[11,"add","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",71,null],[11,"sub","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",71,null],[11,"mul","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",71,null],[11,"div","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",71,null],[11,"rem","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",71,null],[11,"not","","",71,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",71,null],[11,"bitor","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",71,null],[11,"bitand","","",71,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",71,null],[11,"clone","std::thread::local","",72,{"inputs":[{"name":"localkeystate"}],"output":{"name":"localkeystate"}}],[11,"eq","","",72,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"with","","Acquires a reference to the value in this TLS key.",73,{"inputs":[{"name":"localkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"state","","Query the current state of this key.",73,{"inputs":[{"name":"localkey"}],"output":{"name":"localkeystate"}}],[11,"set","std::thread::scoped_tls","Inserts a value into this scoped thread local storage slot for a\nduration of a closure.",74,{"inputs":[{"name":"scopedkey"},{"name":"t"},{"name":"f"}],"output":{"name":"r"}}],[11,"with","","Gets a value out of this scoped variable.",74,{"inputs":[{"name":"scopedkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"is_set","","Test whether this TLS key has been `set` for the current thread.",74,{"inputs":[{"name":"scopedkey"}],"output":{"name":"bool"}}],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",75,{"inputs":[],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",75,{"inputs":[{"name":"builder"},{"name":"string"}],"output":{"name":"builder"}}],[11,"stack_size","","Sets the size of the stack for the new thread.",75,{"inputs":[{"name":"builder"},{"name":"usize"}],"output":{"name":"builder"}}],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",75,{"inputs":[{"name":"builder"},{"name":"f"}],"output":{"name":"result"}}],[11,"clone","","",76,{"inputs":[{"name":"thread"}],"output":{"name":"thread"}}],[11,"unpark","","Atomically makes the handle&#39;s token available if it is not already.",76,null],[11,"name","","Gets the thread&#39;s name.",76,{"inputs":[{"name":"thread"}],"output":{"name":"option"}}],[11,"fmt","","",76,{"inputs":[{"name":"thread"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",76,{"inputs":[{"name":"option"}],"output":{"name":"thread"}}],[11,"thread","","Extracts a handle to the underlying thread",77,{"inputs":[{"name":"joinhandle"}],"output":{"name":"thread"}}],[11,"join","","Waits for the associated thread to finish.",77,{"inputs":[{"name":"joinhandle"}],"output":{"name":"result"}}],[11,"clone","std::collections::hash::table","",78,{"inputs":[{"name":"rawbucket"}],"output":{"name":"rawbucket"}}],[11,"clone","","",79,{"inputs":[{"name":"bucket"}],"output":{"name":"bucket"}}],[11,"clone","","",80,{"inputs":[{"name":"safehash"}],"output":{"name":"safehash"}}],[11,"eq","","",80,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"ne","","",80,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"inspect","","Peek at the hash value, which is guaranteed to be non-zero.",80,{"inputs":[{"name":"safehash"}],"output":{"name":"u64"}}],[11,"table","","Borrow a reference to the table.",81,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",81,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",81,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"table","","Borrow a reference to the table.",82,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",82,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",79,{"inputs":[{"name":"bucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",79,{"inputs":[{"name":"bucket"}],"output":{"name":"usize"}}],[11,"new","","",79,{"inputs":[{"name":"m"},{"name":"safehash"}],"output":{"name":"bucket"}}],[11,"at_index","","",79,{"inputs":[{"name":"m"},{"name":"usize"}],"output":{"name":"bucket"}}],[11,"first","","",79,{"inputs":[{"name":"m"}],"output":{"name":"bucket"}}],[11,"peek","","Reads a bucket at a given index, returning an enum indicating whether\nit&#39;s initialized or not. You need to match on this enum to get\nthe appropriate types to call most of the other functions in\nthis module.",79,{"inputs":[{"name":"bucket"}],"output":{"name":"bucketstate"}}],[11,"next","","Modifies the bucket pointer in place to make it point to the next slot.",79,null],[11,"next","","",82,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",82,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"gap_peek","","",82,{"inputs":[{"name":"emptybucket"}],"output":{"name":"option"}}],[11,"put","","Puts given key and value pair, along with the key&#39;s hash,\ninto this bucket in the hashtable. Note how `self` is &#39;moved&#39; into\nthis function, because this slot will no longer be empty when\nwe return! A `FullBucket` is returned for later use, pointing to\nthe newly-filled slot in the hashtable.",82,{"inputs":[{"name":"emptybucket"},{"name":"safehash"},{"name":"k"},{"name":"v"}],"output":{"name":"fullbucket"}}],[11,"next","","",81,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",81,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"distance","","Get the distance between this bucket and the &#39;ideal&#39; location\nas determined by the key&#39;s hash stored in it.",81,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"hash","","",81,{"inputs":[{"name":"fullbucket"}],"output":{"name":"safehash"}}],[11,"read","","Gets references to the key and value at a given index.",81,null],[11,"take","","Removes this bucket&#39;s key and value from the hashtable.",81,null],[11,"replace","","",81,null],[11,"read_mut","","Gets mutable references to the key and value at a given index.",81,null],[11,"into_refs","","Exchange a bucket state for immutable references into the table.\nBecause the underlying reference to the table is also consumed,\nno further changes to the structure of the table are possible;\nin exchange for this, the returned references have a longer lifetime\nthan the references returned by `read()`.",81,null],[11,"into_mut_refs","","This works similarly to `into_refs`, exchanging a bucket state\nfor mutable references into the table.",81,null],[11,"expect_full","","",83,{"inputs":[{"name":"bucketstate"}],"output":{"name":"fullbucket"}}],[11,"full","","",84,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"fullbucket"}}],[11,"shift","","",84,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"option"}}],[11,"new","","Creates a new raw table from a given capacity. All buckets are\ninitially empty.",85,{"inputs":[{"name":"usize"}],"output":{"name":"rawtable"}}],[11,"capacity","","The hashtable&#39;s capacity, similar to a vector&#39;s.",85,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"size","","The number of elements ever `put` in the hashtable, minus the number\nof elements ever `take`n.",85,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"iter","","",85,{"inputs":[{"name":"rawtable"}],"output":{"name":"iter"}}],[11,"iter_mut","","",85,{"inputs":[{"name":"rawtable"}],"output":{"name":"itermut"}}],[11,"into_iter","","",85,{"inputs":[{"name":"rawtable"}],"output":{"name":"intoiter"}}],[11,"drain","","",85,{"inputs":[{"name":"rawtable"}],"output":{"name":"drain"}}],[11,"clone","","",86,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"rawbuckets"}}],[11,"next","","",86,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"option"}}],[11,"next","","",87,{"inputs":[{"name":"revmovebuckets"}],"output":{"name":"option"}}],[11,"clone","","",88,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",88,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",88,null],[11,"len","","",88,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",89,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",89,null],[11,"len","","",89,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",90,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",90,null],[11,"len","","",90,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",91,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",91,null],[11,"len","","",91,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"drop","","",91,null],[11,"clone","","",85,{"inputs":[{"name":"rawtable"}],"output":{"name":"rawtable"}}],[11,"drop","","",85,null],[11,"clone","std::collections::hash::map","",92,{"inputs":[{"name":"defaultresizepolicy"}],"output":{"name":"defaultresizepolicy"}}],[11,"clone","","",93,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"new","","Creates an empty HashMap.",93,{"inputs":[],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",93,{"inputs":[{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hasher","","Creates an empty hashmap which will use the given hash builder to hash\nkeys.",93,{"inputs":[{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_hash_state","","Deprecated, renamed to `with_hasher`",93,{"inputs":[{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hasher","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",93,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hash_state","","Deprecated, renamed to `with_capacity_and_hasher`",93,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"hasher","","Returns a reference to the map&#39;s hasher.",93,{"inputs":[{"name":"hashmap"}],"output":{"name":"s"}}],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",93,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",93,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",93,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&amp;&#39;a K`.",93,{"inputs":[{"name":"hashmap"}],"output":{"name":"keys"}}],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&amp;&#39;a V`.",93,{"inputs":[{"name":"hashmap"}],"output":{"name":"values"}}],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a V)`.",93,{"inputs":[{"name":"hashmap"}],"output":{"name":"iter"}}],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a mut V)`.",93,{"inputs":[{"name":"hashmap"}],"output":{"name":"itermut"}}],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",93,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"entry"}}],[11,"len","","Returns the number of elements in the map.",93,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",93,{"inputs":[{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",93,{"inputs":[{"name":"hashmap"}],"output":{"name":"drain"}}],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",93,null],[11,"get","","Returns a reference to the value corresponding to the key.",93,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",93,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",93,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map.",93,{"inputs":[{"name":"hashmap"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",93,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",93,{"inputs":[{"name":"hashmap"},{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"fmt","","",93,{"inputs":[{"name":"hashmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",93,{"inputs":[],"output":{"name":"hashmap"}}],[11,"index","","",93,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"v"}}],[11,"clone","","",94,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",95,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"clone","","",96,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",93,{"inputs":[{"name":"hashmap"}],"output":{"name":"intoiter"}}],[11,"next","","",94,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",94,null],[11,"len","","",94,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",97,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",97,null],[11,"len","","",97,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",98,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",98,null],[11,"len","","",98,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",95,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",95,null],[11,"len","","",95,{"inputs":[{"name":"keys"}],"output":{"name":"usize"}}],[11,"next","","",96,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",96,null],[11,"len","","",96,{"inputs":[{"name":"values"}],"output":{"name":"usize"}}],[11,"next","","",99,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",99,null],[11,"len","","",99,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",100,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",100,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",101,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",101,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",101,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry, and returns the entry&#39;s old value",101,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value out of the entry, and returns it",101,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it",102,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"from_iter","","",93,{"inputs":[{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",93,null],[11,"extend","","",93,null],[11,"clone","","",103,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",103,{"inputs":[],"output":{"name":"randomstate"}}],[11,"build_hasher","","",103,{"inputs":[{"name":"randomstate"}],"output":{"name":"siphasher"}}],[11,"default","","",103,{"inputs":[],"output":{"name":"randomstate"}}],[11,"get","","",93,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"take","","",93,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"replace","","",93,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"option"}}],[11,"clone","std::collections::hash::set","",104,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"new","","Creates an empty HashSet.",104,{"inputs":[],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",104,{"inputs":[{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hasher","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",104,{"inputs":[{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hasher","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",104,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"hasher","","Returns a reference to the set&#39;s hasher.",104,{"inputs":[{"name":"hashset"}],"output":{"name":"s"}}],[11,"with_hash_state","","Deprecated, renamed to `with_hasher`",104,{"inputs":[{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hash_state","","Deprecated, renamed to `with_capacity_and_hasher`",104,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",104,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",104,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",104,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &amp;&#39;a T.",104,{"inputs":[{"name":"hashset"}],"output":{"name":"iter"}}],[11,"difference","","Visit the values representing the difference.",104,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",104,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"symmetricdifference"}}],[11,"intersection","","Visit the values representing the intersection.",104,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"intersection"}}],[11,"union","","Visit the values representing the union.",104,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"union"}}],[11,"len","","Returns the number of elements in the set.",104,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the set contains no elements.",104,{"inputs":[{"name":"hashset"}],"output":{"name":"bool"}}],[11,"drain","","Clears the set, returning all elements in an iterator.",104,{"inputs":[{"name":"hashset"}],"output":{"name":"drain"}}],[11,"clear","","Clears the set, removing all values.",104,null],[11,"contains","","Returns `true` if the set contains a value.",104,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",104,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"option"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",104,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",104,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",104,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set.",104,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"bool"}}],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",104,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"option"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",104,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",104,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",104,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"fmt","","",104,{"inputs":[{"name":"hashset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",104,{"inputs":[{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",104,null],[11,"extend","","",104,null],[11,"default","","",104,{"inputs":[],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",104,{"inputs":[{"name":"hashset"}],"output":{"name":"intoiter"}}],[11,"clone","","",105,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",105,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",105,null],[11,"len","","",105,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",106,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",106,null],[11,"len","","",106,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",107,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",107,null],[11,"len","","",107,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"clone","","",108,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"next","","",108,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"size_hint","","",108,null],[11,"clone","","",109,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"next","","",109,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"size_hint","","",109,null],[11,"clone","","",110,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[11,"next","","",110,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"size_hint","","",110,null],[11,"clone","","",111,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"next","","",111,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"size_hint","","",111,null],[11,"hasher","std::collections::hash::state","",112,{"inputs":[{"name":"defaultstate"}],"output":{"name":"h"}}],[11,"clone","","",112,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"default","","",112,{"inputs":[],"output":{"name":"defaultstate"}}],[11,"clone","collections::binary_heap","",113,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"clone_from","","",113,null],[11,"default","","",113,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"fmt","","",113,{"inputs":[{"name":"binaryheap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",113,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",113,{"inputs":[{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",113,{"inputs":[{"name":"binaryheap"}],"output":{"name":"iter"}}],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",113,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",113,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",113,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",113,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",113,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",113,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"push","","Pushes an item onto the binary heap.",113,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",113,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"t"}}],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",113,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"option"}}],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",113,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",113,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of the binary heap.",113,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"is_empty","","Checks if the binary heap is empty.",113,{"inputs":[{"name":"binaryheap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",113,{"inputs":[{"name":"binaryheap"}],"output":{"name":"drain"}}],[11,"clear","","Drops all items from the binary heap.",113,null],[11,"drop","","",114,null],[11,"clone","","",115,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",115,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",115,null],[11,"next_back","","",115,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",116,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",116,null],[11,"next_back","","",116,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"next","","",117,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",117,null],[11,"next_back","","",117,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"from","","",113,{"inputs":[{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",118,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",113,{"inputs":[{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",113,{"inputs":[{"name":"binaryheap"}],"output":{"name":"intoiter"}}],[11,"extend","","",113,null],[11,"extend","","",113,null],[11,"clone","collections::linked_list","",119,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",120,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"from","","",121,{"inputs":[{"name":"option"}],"output":{"name":"rawlink"}}],[11,"clone","","",121,{"inputs":[{"name":"rawlink"}],"output":{"name":"rawlink"}}],[11,"default","","",122,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",122,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",122,null],[11,"iter","","Provides a forward iterator.",122,{"inputs":[{"name":"linkedlist"}],"output":{"name":"iter"}}],[11,"iter_mut","","Provides a forward iterator with mutable references.",122,{"inputs":[{"name":"linkedlist"}],"output":{"name":"itermut"}}],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",122,{"inputs":[{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"len","","Returns the length of the `LinkedList`.",122,{"inputs":[{"name":"linkedlist"}],"output":{"name":"usize"}}],[11,"clear","","Removes all elements from the `LinkedList`.",122,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",122,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",122,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",122,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",122,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_front","","Adds an element first in the list.",122,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",122,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_back","","Appends an element to the back of a list",122,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",122,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",122,{"inputs":[{"name":"linkedlist"},{"name":"usize"}],"output":{"name":"linkedlist"}}],[11,"front_place","","Returns a place for insertion at the front of the list.",122,{"inputs":[{"name":"linkedlist"}],"output":{"name":"frontplace"}}],[11,"back_place","","Returns a place for insertion at the back of the list.",122,{"inputs":[{"name":"linkedlist"}],"output":{"name":"backplace"}}],[11,"drop","","",122,null],[11,"next","","",119,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",119,null],[11,"next_back","","",119,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",123,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",123,null],[11,"next_back","","",123,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",123,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",123,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",120,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",120,null],[11,"next_back","","",120,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","",122,{"inputs":[{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",122,{"inputs":[{"name":"linkedlist"}],"output":{"name":"intoiter"}}],[11,"extend","","",122,null],[11,"extend","","",122,null],[11,"eq","","",122,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"ne","","",122,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",122,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"cmp","","",122,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"ordering"}}],[11,"clone","","",122,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"fmt","","",122,{"inputs":[{"name":"linkedlist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",122,null],[11,"make_place","","",124,{"inputs":[{"name":"frontplace"}],"output":{"name":"frontplace"}}],[11,"pointer","","",124,null],[11,"finalize","","",124,null],[11,"make_place","","",125,{"inputs":[{"name":"backplace"}],"output":{"name":"backplace"}}],[11,"pointer","","",125,null],[11,"finalize","","",125,null],[11,"clone","collections::vec_deque","",126,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"drop","","",126,null],[11,"default","","",126,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",126,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",126,{"inputs":[{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",126,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",126,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap","","Swaps elements at indices `i` and `j`.",126,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",126,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",126,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",126,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",126,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",126,null],[11,"iter","","Returns a front-to-back iterator.",126,{"inputs":[{"name":"vecdeque"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",126,{"inputs":[{"name":"vecdeque"}],"output":{"name":"itermut"}}],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",126,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",126,null],[11,"len","","Returns the number of elements in the `VecDeque`.",126,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the buffer contains no elements",126,{"inputs":[{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items.",126,{"inputs":[{"name":"vecdeque"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the buffer, removing all values.",126,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",126,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",126,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",126,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",126,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",126,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"push_front","","Inserts an element first in the sequence.",126,null],[11,"push_back","","Appends an element to the back of a buffer",126,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",126,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",126,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",126,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",126,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",126,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"split_off","","Splits the collection into two at the given index.",126,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",126,null],[11,"retain","","Retains only the elements specified by the predicate.",126,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",126,null],[11,"clone","","",127,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",127,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",127,null],[11,"next_back","","",127,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",128,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",128,null],[11,"next_back","","",128,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",129,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",129,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",129,null],[11,"next_back","","",129,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",130,null],[11,"next","","",130,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",130,null],[11,"next_back","","",130,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"eq","","",126,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",126,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"cmp","","",126,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"ordering"}}],[11,"hash","","",126,null],[11,"index","","",126,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"index_mut","","",126,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"from_iter","","",126,{"inputs":[{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",126,{"inputs":[{"name":"vecdeque"}],"output":{"name":"intoiter"}}],[11,"extend","","",126,null],[11,"extend","","",126,null],[11,"fmt","","",126,{"inputs":[{"name":"vecdeque"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","std::dynamic_lib","",131,null],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",131,{"inputs":[{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process&#39;s search path for dynamic libraries",131,null],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",131,null],[11,"envvar","","Returns the environment variable for this process&#39;s dynamic library\nsearch path",131,{"inputs":[],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",131,{"inputs":[],"output":{"name":"vec"}}],[11,"symbol","","Accesses the value at the symbol of the dynamic library.",131,{"inputs":[{"name":"dynamiclibrary"},{"name":"str"}],"output":{"name":"result"}}],[11,"next","std::env","",132,{"inputs":[{"name":"vars"}],"output":{"name":"option"}}],[11,"size_hint","","",132,null],[11,"next","","",133,{"inputs":[{"name":"varsos"}],"output":{"name":"option"}}],[11,"size_hint","","",133,null],[11,"clone","","",134,{"inputs":[{"name":"varerror"}],"output":{"name":"varerror"}}],[11,"eq","","",134,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"ne","","",134,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"fmt","","",134,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",134,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",134,{"inputs":[{"name":"varerror"}],"output":{"name":"str"}}],[11,"next","","",135,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",135,null],[11,"fmt","","",136,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",136,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",136,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",137,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",137,null],[11,"len","","",137,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",138,{"inputs":[{"name":"argsos"}],"output":{"name":"option"}}],[11,"size_hint","","",138,null],[11,"len","","",138,{"inputs":[{"name":"argsos"}],"output":{"name":"usize"}}],[11,"clone","std::ffi::c_str","",139,{"inputs":[{"name":"cstring"}],"output":{"name":"cstring"}}],[11,"hash","","",139,null],[11,"cmp","","",139,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",139,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"option"}}],[11,"lt","","",139,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"le","","",139,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"gt","","",139,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ge","","",139,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"eq","","",139,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ne","","",139,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"hash","","",140,null],[11,"fmt","","",141,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",141,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"ne","","",141,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"clone","","",141,{"inputs":[{"name":"nulerror"}],"output":{"name":"nulerror"}}],[11,"fmt","","",142,{"inputs":[{"name":"intostringerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",142,{"inputs":[{"name":"intostringerror"},{"name":"intostringerror"}],"output":{"name":"bool"}}],[11,"ne","","",142,{"inputs":[{"name":"intostringerror"},{"name":"intostringerror"}],"output":{"name":"bool"}}],[11,"clone","","",142,{"inputs":[{"name":"intostringerror"}],"output":{"name":"intostringerror"}}],[11,"new","","Creates a new C-compatible string from a container of bytes.",139,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",139,{"inputs":[{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_raw","","Retakes ownership of a `CString` that was transferred to C.",139,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",139,null],[11,"into_string","","Converts the `CString` into a `String` if it contains valid Unicode data.",139,{"inputs":[{"name":"cstring"}],"output":{"name":"result"}}],[11,"into_bytes","","Returns the underlying byte buffer.",139,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"into_bytes_with_nul","","Equivalent to the `into_bytes` function except that the returned vector\nincludes the trailing nul byte.",139,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",139,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",139,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",140,null],[11,"from_bytes_with_nul","","Creates a C string wrapper from a byte slice.",140,null],[11,"from_bytes_with_nul_unchecked","","Unsafely creates a C string wrapper from a byte slice.",140,null],[11,"as_ptr","","Returns the inner pointer to this C string.",140,null],[11,"to_bytes","","Converts this C string to a byte slice.",140,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",140,null],[11,"to_str","","Yields a `&amp;str` slice if the `CStr` contains valid UTF-8.",140,{"inputs":[{"name":"cstr"}],"output":{"name":"result"}}],[11,"to_string_lossy","","Converts a `CStr` into a `Cow&lt;str&gt;`.",140,{"inputs":[{"name":"cstr"}],"output":{"name":"cow"}}],[11,"deref","","",139,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"fmt","","",139,{"inputs":[{"name":"cstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","collections::vec","",118,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"fmt","std::ffi::c_str","",140,{"inputs":[{"name":"cstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",139,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",141,{"inputs":[{"name":"nulerror"}],"output":{"name":"usize"}}],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",141,{"inputs":[{"name":"nulerror"}],"output":{"name":"vec"}}],[11,"description","","",141,{"inputs":[{"name":"nulerror"}],"output":{"name":"str"}}],[11,"fmt","","",141,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","std::io::error","",143,{"inputs":[{"name":"nulerror"}],"output":{"name":"error"}}],[11,"into_cstring","std::ffi::c_str","Consumes this error, returning original `CString` which generated the\nerror.",142,{"inputs":[{"name":"intostringerror"}],"output":{"name":"cstring"}}],[11,"utf8_error","","Access the underlying UTF-8 error that was the cause of this error.",142,{"inputs":[{"name":"intostringerror"}],"output":{"name":"utf8error"}}],[11,"description","","",142,{"inputs":[{"name":"intostringerror"}],"output":{"name":"str"}}],[11,"cause","","",142,{"inputs":[{"name":"intostringerror"}],"output":{"name":"option"}}],[11,"fmt","","",142,{"inputs":[{"name":"intostringerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",140,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",140,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"option"}}],[11,"cmp","","",140,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"ordering"}}],[11,"to_owned","","",140,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"from","","",139,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"index","","",139,{"inputs":[{"name":"cstring"},{"name":"rangefull"}],"output":{"name":"cstr"}}],[11,"as_ref","","",140,{"inputs":[{"name":"cstr"}],"output":{"name":"cstr"}}],[11,"as_ref","","",139,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"clone","std::ffi::os_str","",144,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"new","","Constructs a new empty `OsString`.",144,{"inputs":[],"output":{"name":"osstring"}}],[11,"from_bytes","","Constructs an `OsString` from a byte sequence.",144,{"inputs":[{"name":"b"}],"output":{"name":"option"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",144,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",144,{"inputs":[{"name":"osstring"}],"output":{"name":"result"}}],[11,"push","","Extends the string with the given `&amp;OsStr` slice.",144,null],[11,"with_capacity","","Creates a new `OsString` with the given capacity. The string will be\nable to hold exactly `capacity` bytes without reallocating. If\n`capacity` is 0, the string will not allocate.",144,{"inputs":[{"name":"usize"}],"output":{"name":"osstring"}}],[11,"clear","","Truncates the `OsString` to zero length.",144,null],[11,"capacity","","Returns the number of bytes this `OsString` can hold without\nreallocating.",144,{"inputs":[{"name":"osstring"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `OsString`. The collection may reserve more space to avoid\nfrequent reallocations.",144,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more bytes to be\ninserted in the given `OsString`. Does nothing if the capacity is\nalready sufficient.",144,null],[11,"from","","",144,{"inputs":[{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",144,{"inputs":[{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",144,{"inputs":[{"name":"osstring"},{"name":"rangefull"}],"output":{"name":"osstr"}}],[11,"new","","Coerces into an `OsStr` slice.",145,{"inputs":[{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&amp;str` slice if the `OsStr` is valid unicode.",145,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow&lt;str&gt;`.",145,{"inputs":[{"name":"osstr"}],"output":{"name":"cow"}}],[11,"to_os_string","","Copies the slice into an owned `OsString`.",145,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"to_bytes","","Yields this `OsStr` as a byte slice.",145,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_cstring","","Creates a `CString` containing this `OsStr` data.",145,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether the `OsStr` is empty.",145,{"inputs":[{"name":"osstr"}],"output":{"name":"bool"}}],[11,"len","","Returns the number of bytes in this `OsStr`.",145,{"inputs":[{"name":"osstr"}],"output":{"name":"usize"}}],[11,"deref","","",144,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"fmt","","",144,{"inputs":[{"name":"osstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",144,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","","",144,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",144,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"lt","","",144,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"le","","",144,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"gt","","",144,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"ge","","",144,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",144,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",144,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"ordering"}}],[11,"hash","","",144,null],[11,"eq","","",145,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","","",145,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",145,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"lt","","",145,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"le","","",145,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"gt","","",145,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"ge","","",145,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",145,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",145,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"ordering"}}],[11,"eq","","",144,{"inputs":[{"name":"osstring"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","","",145,{"inputs":[{"name":"osstr"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",144,{"inputs":[{"name":"osstring"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"partial_cmp","","",145,{"inputs":[{"name":"osstr"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"eq","","",144,{"inputs":[{"name":"osstring"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",144,{"inputs":[{"name":"osstring"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",146,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",145,{"inputs":[{"name":"osstr"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",146,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",145,{"inputs":[{"name":"osstr"},{"name":"cow"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",146,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",146,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"eq","","",146,{"inputs":[{"name":"cow"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",144,{"inputs":[{"name":"osstring"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",146,{"inputs":[{"name":"cow"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",144,{"inputs":[{"name":"osstring"},{"name":"cow"}],"output":{"name":"option"}}],[11,"hash","","",145,null],[11,"fmt","","",145,{"inputs":[{"name":"osstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",144,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"to_owned","","",145,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"as_ref","","",145,{"inputs":[{"name":"osstr"}],"output":{"name":"osstr"}}],[11,"as_ref","","",144,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"as_ref","collections::string","",147,{"inputs":[{"name":"string"}],"output":{"name":"osstr"}}],[11,"clone","std::fs","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"metadata"}}],[11,"clone","","",149,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",150,{"inputs":[{"name":"permissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",150,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"ne","","",150,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"clone","","",150,{"inputs":[{"name":"permissions"}],"output":{"name":"permissions"}}],[11,"hash","","",151,null],[11,"eq","","",151,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",151,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",151,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"open","","Attempts to open a file in read-only mode.",152,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",152,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",152,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",152,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",152,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"metadata","","Queries metadata about the underlying file.",152,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying file.",152,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fmt","","",152,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",152,null],[11,"read_to_end","","",152,{"inputs":[{"name":"file"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",152,null],[11,"flush","","",152,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",152,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"new","","Creates a blank new set of options ready for configuration.",149,{"inputs":[],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",149,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"write","","Sets the option for write access.",149,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"append","","Sets the option for the append mode.",149,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"truncate","","Sets the option for truncating a previous file.",149,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"create","","Sets the option for creating a new file.",149,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"create_new","","Sets the option to always create a new file.",149,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"open","","Opens a file at `path` with the options specified by `self`.",149,{"inputs":[{"name":"openoptions"},{"name":"p"}],"output":{"name":"result"}}],[11,"file_type","","Returns the file type for this metadata.",148,{"inputs":[{"name":"metadata"}],"output":{"name":"filetype"}}],[11,"is_dir","","Returns whether this metadata is for a directory.",148,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"is_file","","Returns whether this metadata is for a regular file.",148,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",148,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"permissions","","Returns the permissions of the file this metadata is for.",148,{"inputs":[{"name":"metadata"}],"output":{"name":"permissions"}}],[11,"modified","","Returns the last modification time listed in this metadata.",148,{"inputs":[{"name":"metadata"}],"output":{"name":"result"}}],[11,"accessed","","Returns the last access time of this metadata.",148,{"inputs":[{"name":"metadata"}],"output":{"name":"result"}}],[11,"created","","Returns the creation time listed in the this metadata.",148,{"inputs":[{"name":"metadata"}],"output":{"name":"result"}}],[11,"readonly","","Returns whether these permissions describe a readonly file.",150,{"inputs":[{"name":"permissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",150,null],[11,"is_dir","","Test whether this file type represents a directory.",151,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","Test whether this file type represents a regular file.",151,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","Test whether this file type represents a symbolic link.",151,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"next","","",153,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"path","","Returns the full path to the file that this entry represents.",154,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"metadata","","Return the metadata for the file that this entry points at.",154,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","Return the file type for the file that this entry points at.",154,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",154,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"next","","",155,{"inputs":[{"name":"walkdir"}],"output":{"name":"option"}}],[11,"new","","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",156,{"inputs":[],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",156,{"inputs":[{"name":"dirbuilder"},{"name":"bool"}],"output":{"name":"dirbuilder"}}],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",156,{"inputs":[{"name":"dirbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",157,{"inputs":[{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",157,{"inputs":[{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",157,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"get_mut","","Gets a mutable reference to the underlying reader.",157,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",157,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"read","","",157,null],[11,"fill_buf","","",157,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[11,"consume","","",157,null],[11,"fmt","","",157,{"inputs":[{"name":"bufreader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",157,{"inputs":[{"name":"bufreader"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fmt","","",158,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",159,{"inputs":[{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",159,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",159,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",159,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",159,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"write","","",159,null],[11,"flush","","",159,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"fmt","","",159,{"inputs":[{"name":"bufwriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",159,{"inputs":[{"name":"bufwriter"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"drop","","",159,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",158,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"into_inner","","Returns the buffered writer instance which generated the error.",158,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"w"}}],[11,"from","std::io::error","",143,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",158,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"str"}}],[11,"fmt","","",158,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `LineWriter`.",160,{"inputs":[{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",160,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",160,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",160,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",160,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"write","","",160,null],[11,"flush","","",160,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"fmt","","",160,{"inputs":[{"name":"linewriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","std::io::cursor","",161,{"inputs":[{"name":"cursor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",161,{"inputs":[{"name":"cursor"}],"output":{"name":"cursor"}}],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",161,{"inputs":[{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",161,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",161,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",161,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"position","","Returns the current position of this cursor.",161,{"inputs":[{"name":"cursor"}],"output":{"name":"u64"}}],[11,"set_position","","Sets the position of this cursor.",161,null],[11,"seek","","",161,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"read","","",161,null],[11,"fill_buf","","",161,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",161,null],[11,"write","","",161,null],[11,"flush","","",161,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",161,null],[11,"flush","","",161,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",161,null],[11,"flush","","",161,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"fmt","std::io::error","",143,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",162,{"inputs":[{"name":"custom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",163,{"inputs":[{"name":"errorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",163,{"inputs":[{"name":"errorkind"}],"output":{"name":"errorkind"}}],[11,"eq","","",163,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"ne","","",163,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",143,{"inputs":[{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",143,{"inputs":[],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",143,{"inputs":[{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",143,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",143,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",143,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",143,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",143,{"inputs":[{"name":"error"}],"output":{"name":"errorkind"}}],[11,"fmt","","",164,{"inputs":[{"name":"repr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",143,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",143,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"read","alloc::boxed","",61,null],[11,"read_to_end","","",61,{"inputs":[{"name":"box"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",61,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"read_exact","","",61,null],[11,"write","","",61,null],[11,"flush","","",61,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"write_all","","",61,null],[11,"write_fmt","","",61,{"inputs":[{"name":"box"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"seek","","",61,{"inputs":[{"name":"box"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fill_buf","","",61,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"consume","","",61,null],[11,"read_until","","",61,{"inputs":[{"name":"box"},{"name":"u8"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_line","","",61,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"write","collections::vec","",118,null],[11,"write_all","","",118,null],[11,"flush","","",118,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"new","std::io::lazy","",165,null],[11,"get","","",165,{"inputs":[{"name":"lazy"}],"output":{"name":"option"}}],[11,"read","std::io::util","",166,null],[11,"fill_buf","","",166,{"inputs":[{"name":"empty"}],"output":{"name":"result"}}],[11,"consume","","",166,null],[11,"read","","",167,null],[11,"write","","",168,null],[11,"flush","","",168,{"inputs":[{"name":"sink"}],"output":{"name":"result"}}],[11,"read","std::io::stdio","",169,null],[11,"write","","",170,null],[11,"flush","","",170,{"inputs":[{"name":"stdoutraw"}],"output":{"name":"result"}}],[11,"write","","",171,null],[11,"flush","","",171,{"inputs":[{"name":"stderrraw"}],"output":{"name":"result"}}],[11,"write","","",172,null],[11,"flush","","",172,{"inputs":[{"name":"maybe"}],"output":{"name":"result"}}],[11,"read","","",172,null],[11,"lock","","Locks this handle to the standard input stream, returning a readable\nguard.",173,{"inputs":[{"name":"stdin"}],"output":{"name":"stdinlock"}}],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",173,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read","","",173,null],[11,"read_to_end","","",173,{"inputs":[{"name":"stdin"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",173,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read_exact","","",173,null],[11,"read","","",174,null],[11,"read_to_end","","",174,{"inputs":[{"name":"stdinlock"},{"name":"vec"}],"output":{"name":"result"}}],[11,"fill_buf","","",174,{"inputs":[{"name":"stdinlock"}],"output":{"name":"result"}}],[11,"consume","","",174,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",175,{"inputs":[{"name":"stdout"}],"output":{"name":"stdoutlock"}}],[11,"write","","",175,null],[11,"flush","","",175,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write_all","","",175,null],[11,"write_fmt","","",175,{"inputs":[{"name":"stdout"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",176,null],[11,"flush","","",176,{"inputs":[{"name":"stdoutlock"}],"output":{"name":"result"}}],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",177,{"inputs":[{"name":"stderr"}],"output":{"name":"stderrlock"}}],[11,"write","","",177,null],[11,"flush","","",177,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write_all","","",177,null],[11,"write_fmt","","",177,{"inputs":[{"name":"stderr"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",178,null],[11,"flush","","",178,{"inputs":[{"name":"stderrlock"}],"output":{"name":"result"}}],[11,"fmt","std::io","",179,{"inputs":[{"name":"seekfrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",179,{"inputs":[{"name":"seekfrom"}],"output":{"name":"seekfrom"}}],[11,"eq","","",179,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"ne","","",179,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"write","","",180,null],[11,"flush","","",180,{"inputs":[{"name":"broadcast"}],"output":{"name":"result"}}],[11,"read","","",181,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",182,{"inputs":[{"name":"take"}],"output":{"name":"u64"}}],[11,"read","","",182,null],[11,"fill_buf","","",182,{"inputs":[{"name":"take"}],"output":{"name":"result"}}],[11,"consume","","",182,null],[11,"read","","",183,null],[11,"next","","",184,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"fmt","","",185,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",186,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"description","","",185,{"inputs":[{"name":"charserror"}],"output":{"name":"str"}}],[11,"cause","","",185,{"inputs":[{"name":"charserror"}],"output":{"name":"option"}}],[11,"fmt","","",185,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",187,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next","","",188,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"cmp","std::net::ip","",189,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",189,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"option"}}],[11,"lt","","",189,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"le","","",189,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"gt","","",189,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ge","","",189,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"hash","","",189,null],[11,"fmt","","",189,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",189,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ne","","",189,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"clone","","",189,{"inputs":[{"name":"ipaddr"}],"output":{"name":"ipaddr"}}],[11,"fmt","","",190,{"inputs":[{"name":"ipv6multicastscope"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",190,null],[11,"clone","","",190,{"inputs":[{"name":"ipv6multicastscope"}],"output":{"name":"ipv6multicastscope"}}],[11,"eq","","",190,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"ne","","",190,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",191,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",191,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address 0.0.0.0.",191,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",191,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_private","","Returns true if this is a private address.",191,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",191,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",191,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_multicast","","Returns true if this is a multicast address.",191,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_broadcast","","Returns true if this is a broadcast address.",191,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",191,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",191,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",191,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"fmt","","",189,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",191,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",191,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",191,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv4addr"}}],[11,"eq","","",191,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"hash","","",191,null],[11,"partial_cmp","","",191,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"option"}}],[11,"cmp","","",191,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"ordering"}}],[11,"from","","",191,{"inputs":[{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",192,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",192,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address ::.",192,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (::1).",192,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",192,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unique_local","","Returns true if this is a unique local address (IPv6).",192,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",192,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address (IPv6\nfec0::/10).",192,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",192,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"multicast_scope","","Returns the address&#39;s multicast scope if the address is multicast.",192,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"is_multicast","","Returns true if this is a multicast address.",192,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",192,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"fmt","","",192,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",192,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",192,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"ipv6addr"}}],[11,"eq","","",192,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"hash","","",192,null],[11,"partial_cmp","","",192,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"cmp","","",192,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"ordering"}}],[11,"fmt","std::net::addr","",193,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",193,null],[11,"eq","","",193,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"ne","","",193,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"clone","","",193,{"inputs":[{"name":"socketaddr"}],"output":{"name":"socketaddr"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",193,{"inputs":[{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",193,{"inputs":[{"name":"socketaddr"}],"output":{"name":"ipaddr"}}],[11,"set_ip","","Change the IP address associated with this socket address.",193,null],[11,"port","","Returns the port number associated with this socket address.",193,{"inputs":[{"name":"socketaddr"}],"output":{"name":"u16"}}],[11,"set_port","","Change the port number associated with this socket address.",193,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",194,{"inputs":[{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",194,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"ipv4addr"}}],[11,"set_ip","","Change the IP address associated with this socket address.",194,null],[11,"port","","Returns the port number associated with this socket address.",194,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"u16"}}],[11,"set_port","","Change the port number associated with this socket address.",194,null],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",195,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",195,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"ipv6addr"}}],[11,"set_ip","","Change the IP address associated with this socket address.",195,null],[11,"port","","Returns the port number associated with this socket address.",195,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u16"}}],[11,"set_port","","Change the port number associated with this socket address.",195,null],[11,"flowinfo","","Returns the flow information associated with this address,\ncorresponding to the `sin6_flowinfo` field in C.",195,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"set_flowinfo","","Change the flow information associated with this socket address.",195,null],[11,"scope_id","","Returns the scope ID associated with this address,\ncorresponding to the `sin6_scope_id` field in C.",195,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"set_scope_id","","Change the scope ID associated with this socket address.",195,null],[11,"fmt","","",193,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",194,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",194,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",195,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",195,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",194,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"socketaddrv4"}}],[11,"clone","","",195,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"socketaddrv6"}}],[11,"eq","","",194,{"inputs":[{"name":"socketaddrv4"},{"name":"socketaddrv4"}],"output":{"name":"bool"}}],[11,"eq","","",195,{"inputs":[{"name":"socketaddrv6"},{"name":"socketaddrv6"}],"output":{"name":"bool"}}],[11,"hash","","",194,null],[11,"hash","","",195,null],[11,"to_socket_addrs","","",193,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",194,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",195,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"result"}}],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",196,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",196,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",196,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",196,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",196,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",196,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",196,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",196,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",196,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",196,null],[11,"read_to_end","","",196,{"inputs":[{"name":"tcpstream"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",196,null],[11,"flush","","",196,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",196,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",197,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",197,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",197,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","Accept a new incoming connection from this listener.",197,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",197,{"inputs":[{"name":"tcplistener"}],"output":{"name":"incoming"}}],[11,"next","","",198,{"inputs":[{"name":"incoming"}],"output":{"name":"option"}}],[11,"fmt","","",197,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",199,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",199,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",199,null],[11,"local_addr","","Returns the socket address that this socket was created from.",199,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",199,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",199,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",199,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",199,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",199,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",199,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","std::net::ip","",189,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",191,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",192,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",194,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",195,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",193,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",200,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"ne","","",200,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"clone","","",200,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"addrparseerror"}}],[11,"fmt","","",200,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",200,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",200,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"str"}}],[11,"fmt","std::net","",201,{"inputs":[{"name":"shutdown"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",201,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"ne","","",201,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"clone","","",201,{"inputs":[{"name":"shutdown"}],"output":{"name":"shutdown"}}],[11,"next","","",202,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"clone","std::os::linux::raw::arch","",203,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"as_raw_stat","std::fs","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"stat"}}],[11,"st_dev","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_ino","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_mode","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"st_nlink","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_uid","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"st_gid","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"st_rdev","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_size","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_atime","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_atime_nsec","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_mtime","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_mtime_nsec","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_ctime","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_ctime_nsec","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_blksize","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_blocks","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"as_raw_fd","","",152,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"from_raw_fd","","",152,{"inputs":[{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",152,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::tcp","",196,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",197,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::udp","",199,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_raw_fd","std::net::tcp","",196,{"inputs":[{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",197,{"inputs":[{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",199,{"inputs":[{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",196,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",197,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"into_raw_fd","std::net::udp","",199,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_vec","std::ffi::os_str","",144,{"inputs":[{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",144,{"inputs":[{"name":"osstring"}],"output":{"name":"vec"}}],[11,"from_bytes","","",145,null],[11,"as_bytes","","",145,null],[11,"mode","std::fs","",150,{"inputs":[{"name":"permissions"}],"output":{"name":"u32"}}],[11,"set_mode","","",150,null],[11,"from_mode","","",150,{"inputs":[{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",149,{"inputs":[{"name":"openoptions"},{"name":"u32"}],"output":{"name":"openoptions"}}],[11,"custom_flags","","",149,{"inputs":[{"name":"openoptions"},{"name":"i32"}],"output":{"name":"openoptions"}}],[11,"dev","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"ino","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"mode","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"nlink","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"uid","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"gid","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"rdev","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"size","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"atime","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime_nsec","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime_nsec","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime_nsec","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blksize","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"blocks","","",148,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"is_block_device","","",151,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_char_device","","",151,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_fifo","","",151,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_socket","","",151,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ino","","",154,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"mode","","",156,{"inputs":[{"name":"dirbuilder"},{"name":"u32"}],"output":{"name":"dirbuilder"}}],[11,"uid","std::process","",204,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"gid","","",204,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"session_leader","","",204,{"inputs":[{"name":"command"},{"name":"bool"}],"output":{"name":"command"}}],[11,"before_exec","","",204,{"inputs":[{"name":"command"},{"name":"f"}],"output":{"name":"command"}}],[11,"exec","","",204,{"inputs":[{"name":"command"}],"output":{"name":"error"}}],[11,"signal","","",205,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"from_raw_fd","","",206,{"inputs":[{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",207,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",208,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",209,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",207,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",208,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",209,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"as_pthread_t","std::thread","",77,{"inputs":[{"name":"joinhandle"}],"output":{"name":"u64"}}],[11,"into_pthread_t","","",77,{"inputs":[{"name":"joinhandle"}],"output":{"name":"u64"}}],[11,"new","std::panic","Creates a new `AssertRecoverSafe` wrapper around the provided type.",210,{"inputs":[{"name":"t"}],"output":{"name":"assertrecoversafe"}}],[11,"into_inner","","Consumes the `AssertRecoverSafe`, returning the wrapped value.",210,{"inputs":[{"name":"assertrecoversafe"}],"output":{"name":"t"}}],[11,"deref","","",210,{"inputs":[{"name":"assertrecoversafe"}],"output":{"name":"t"}}],[11,"deref_mut","","",210,{"inputs":[{"name":"assertrecoversafe"}],"output":{"name":"t"}}],[11,"eq","std::path","",211,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ne","","",211,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"cmp","","",211,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",211,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"option"}}],[11,"lt","","",211,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"le","","",211,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"gt","","",211,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ge","","",211,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"hash","","",211,null],[11,"fmt","","",211,{"inputs":[{"name":"prefix"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",211,{"inputs":[{"name":"prefix"}],"output":{"name":"prefix"}}],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",211,{"inputs":[{"name":"prefix"}],"output":{"name":"bool"}}],[11,"fmt","","",212,{"inputs":[{"name":"state"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",212,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"option"}}],[11,"lt","","",212,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"le","","",212,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"gt","","",212,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ge","","",212,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"eq","","",212,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ne","","",212,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"clone","","",212,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[11,"fmt","","",213,{"inputs":[{"name":"prefixcomponent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",213,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefixcomponent"}}],[11,"kind","","The parsed prefix data.",213,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefix"}}],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",213,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"osstr"}}],[11,"eq","","",213,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",213,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"option"}}],[11,"cmp","","",213,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"ordering"}}],[11,"hash","","",213,null],[11,"fmt","","",214,{"inputs":[{"name":"component"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",214,null],[11,"cmp","","",214,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",214,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"option"}}],[11,"lt","","",214,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"le","","",214,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"gt","","",214,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ge","","",214,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"eq","","",214,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ne","","",214,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"clone","","",214,{"inputs":[{"name":"component"}],"output":{"name":"component"}}],[11,"as_os_str","","Extracts the underlying `OsStr` slice",214,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"as_ref","","",214,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"clone","","",215,{"inputs":[{"name":"components"}],"output":{"name":"components"}}],[11,"clone","","",216,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",215,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"peek","","Examine the next component without consuming it.",215,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"as_ref","","",215,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"as_ref","","",215,{"inputs":[{"name":"components"}],"output":{"name":"osstr"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",216,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",216,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",216,{"inputs":[{"name":"iter"}],"output":{"name":"osstr"}}],[11,"next","","",216,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",216,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",215,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"next_back","","",215,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"eq","","",215,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",215,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"option"}}],[11,"cmp","","",215,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"ordering"}}],[11,"clone","","",217,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"new","","Allocates an empty `PathBuf`.",217,{"inputs":[],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",217,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"push","","Extends `self` with `path`.",217,null],[11,"pop","","Truncate `self` to `self.parent()`.",217,{"inputs":[{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",217,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",217,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"bool"}}],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",217,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"from","","",217,{"inputs":[{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",217,{"inputs":[{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",217,{"inputs":[{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",217,{"inputs":[{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",217,null],[11,"fmt","","",217,{"inputs":[{"name":"pathbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Directly wrap a string slice as a `Path` slice.",218,{"inputs":[{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",218,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&amp;str` slice if the `Path` is valid unicode.",218,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts a `Path` to a `Cow&lt;str&gt;`.",218,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",218,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",218,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_relative","","A path is *relative* if it is not absolute.",218,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"prefix","","Returns the *prefix* of a path, if any.",218,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",218,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"parent","","The path without its final component, if any.",218,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"file_name","","The final component of the path, if it is a normal file.",218,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"relative_from","","Returns a path that, when joined onto `base`, yields `self`.",218,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"option"}}],[11,"strip_prefix","","Returns a path that, when joined onto `base`, yields `self`.",218,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"result"}}],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",218,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",218,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",218,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",218,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",218,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"pathbuf"}}],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",218,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",218,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"components","","Produce an iterator over the components of the path.",218,{"inputs":[{"name":"path"}],"output":{"name":"components"}}],[11,"iter","","Produce an iterator over the path&#39;s components viewed as `OsStr` slices.",218,{"inputs":[{"name":"path"}],"output":{"name":"iter"}}],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",218,{"inputs":[{"name":"path"}],"output":{"name":"display"}}],[11,"metadata","","Query the file system to get information about a file, directory, etc.",218,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"symlink_metadata","","Query the metadata about a file without following symlinks.",218,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"canonicalize","","Returns the canonical form of the path with all intermediate components\nnormalized and symbolic links resolved.",218,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_link","","Reads a symbolic link, returning the file that the link points to.",218,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_dir","","Returns an iterator over the entries within a directory.",218,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"exists","","Returns whether the path points at an existing entity.",218,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_file","","Returns whether the path is pointing at a regular file.",218,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_dir","","Returns whether the path is pointing at a directory.",218,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"deref","","",217,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"borrow","","",217,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"into_cow","","",217,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"from","collections::borrow","",146,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"from","","",146,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","std::path","",218,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"eq","","",217,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"hash","","",217,null],[11,"partial_cmp","","",217,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"cmp","","",217,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"ordering"}}],[11,"as_ref","","",217,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstr"}}],[11,"into","","",217,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"eq","","",219,{"inputs":[{"name":"stripprefixerror"},{"name":"stripprefixerror"}],"output":{"name":"bool"}}],[11,"ne","","",219,{"inputs":[{"name":"stripprefixerror"},{"name":"stripprefixerror"}],"output":{"name":"bool"}}],[11,"clone","","",219,{"inputs":[{"name":"stripprefixerror"}],"output":{"name":"stripprefixerror"}}],[11,"fmt","","",219,{"inputs":[{"name":"stripprefixerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",218,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"fmt","","",218,{"inputs":[{"name":"path"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",220,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",220,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",218,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"hash","","",218,null],[11,"partial_cmp","","",218,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"option"}}],[11,"cmp","","",218,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"ordering"}}],[11,"as_ref","","",218,{"inputs":[{"name":"path"}],"output":{"name":"path"}}],[11,"as_ref","std::ffi::os_str","",145,{"inputs":[{"name":"osstr"}],"output":{"name":"path"}}],[11,"as_ref","collections::borrow","",146,{"inputs":[{"name":"cow"}],"output":{"name":"path"}}],[11,"as_ref","std::ffi::os_str","",144,{"inputs":[{"name":"osstring"}],"output":{"name":"path"}}],[11,"as_ref","collections::string","",147,{"inputs":[{"name":"string"}],"output":{"name":"path"}}],[11,"as_ref","std::path","",217,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"eq","","",217,{"inputs":[{"name":"pathbuf"},{"name":"path"}],"output":{"name":"bool"}}],[11,"eq","","",218,{"inputs":[{"name":"path"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",217,{"inputs":[{"name":"pathbuf"},{"name":"path"}],"output":{"name":"option"}}],[11,"partial_cmp","","",218,{"inputs":[{"name":"path"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"eq","","",217,{"inputs":[{"name":"pathbuf"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",217,{"inputs":[{"name":"pathbuf"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",146,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"bool"}}],[11,"eq","std::path","",218,{"inputs":[{"name":"path"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",146,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"option"}}],[11,"partial_cmp","std::path","",218,{"inputs":[{"name":"path"},{"name":"cow"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",146,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",146,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","","",146,{"inputs":[{"name":"cow"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"eq","std::path","",217,{"inputs":[{"name":"pathbuf"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",146,{"inputs":[{"name":"cow"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"partial_cmp","std::path","",217,{"inputs":[{"name":"pathbuf"},{"name":"cow"}],"output":{"name":"option"}}],[11,"eq","","",217,{"inputs":[{"name":"pathbuf"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",145,{"inputs":[{"name":"osstr"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",217,{"inputs":[{"name":"pathbuf"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",145,{"inputs":[{"name":"osstr"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"eq","std::path","",217,{"inputs":[{"name":"pathbuf"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",217,{"inputs":[{"name":"pathbuf"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"eq","","",217,{"inputs":[{"name":"pathbuf"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",146,{"inputs":[{"name":"cow"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",217,{"inputs":[{"name":"pathbuf"},{"name":"cow"}],"output":{"name":"option"}}],[11,"partial_cmp","collections::borrow","",146,{"inputs":[{"name":"cow"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"eq","std::path","",217,{"inputs":[{"name":"pathbuf"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",144,{"inputs":[{"name":"osstring"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",217,{"inputs":[{"name":"pathbuf"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",144,{"inputs":[{"name":"osstring"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"eq","std::path","",218,{"inputs":[{"name":"path"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",145,{"inputs":[{"name":"osstr"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",218,{"inputs":[{"name":"path"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",145,{"inputs":[{"name":"osstr"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","std::path","",218,{"inputs":[{"name":"path"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",218,{"inputs":[{"name":"path"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"eq","","",218,{"inputs":[{"name":"path"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",146,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",218,{"inputs":[{"name":"path"},{"name":"cow"}],"output":{"name":"option"}}],[11,"partial_cmp","collections::borrow","",146,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","std::path","",218,{"inputs":[{"name":"path"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",144,{"inputs":[{"name":"osstring"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",218,{"inputs":[{"name":"path"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",144,{"inputs":[{"name":"osstring"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","","",145,{"inputs":[{"name":"osstr"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",145,{"inputs":[{"name":"osstr"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",146,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",146,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","std::ffi::os_str","",144,{"inputs":[{"name":"osstring"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",144,{"inputs":[{"name":"osstring"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",146,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",145,{"inputs":[{"name":"osstr"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",146,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",145,{"inputs":[{"name":"osstr"},{"name":"cow"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",146,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",146,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"eq","","",146,{"inputs":[{"name":"cow"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",144,{"inputs":[{"name":"osstring"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",146,{"inputs":[{"name":"cow"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",144,{"inputs":[{"name":"osstring"},{"name":"cow"}],"output":{"name":"option"}}],[11,"fmt","std::path","",219,{"inputs":[{"name":"stripprefixerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",219,{"inputs":[{"name":"stripprefixerror"}],"output":{"name":"str"}}],[11,"write","std::process","",207,null],[11,"flush","","",207,{"inputs":[{"name":"childstdin"}],"output":{"name":"result"}}],[11,"read","","",208,null],[11,"read","","",209,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",204,{"inputs":[{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",204,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"args","","Add multiple arguments to pass to the program.",204,null],[11,"env","","Inserts or updates an environment variable mapping.",204,{"inputs":[{"name":"command"},{"name":"k"},{"name":"v"}],"output":{"name":"command"}}],[11,"env_remove","","Removes an environment variable mapping.",204,{"inputs":[{"name":"command"},{"name":"k"}],"output":{"name":"command"}}],[11,"env_clear","","Clears the entire environment map for the child process.",204,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"current_dir","","Sets the working directory for the child process.",204,{"inputs":[{"name":"command"},{"name":"p"}],"output":{"name":"command"}}],[11,"stdin","","Configuration for the child process&#39;s stdin handle (file descriptor 0).",204,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stdout","","Configuration for the child process&#39;s stdout handle (file descriptor 1).",204,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stderr","","Configuration for the child process&#39;s stderr handle (file descriptor 2).",204,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"spawn","","Executes the command as a child process, returning a handle to it.",204,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",204,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",204,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",204,{"inputs":[{"name":"command"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",221,{"inputs":[{"name":"output"}],"output":{"name":"output"}}],[11,"eq","","",221,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"ne","","",221,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"fmt","","",221,{"inputs":[{"name":"output"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",206,{"inputs":[],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",206,{"inputs":[],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",206,{"inputs":[],"output":{"name":"stdio"}}],[11,"fmt","","",205,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",205,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",205,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",205,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",205,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","Returns the exit code of the process, if any.",205,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",205,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",222,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"id","","Returns the OS-assigned process identifier associated with this child.",222,{"inputs":[{"name":"child"}],"output":{"name":"u32"}}],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",222,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning an `Output`\ninstance.",222,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"clone","std::sync::mpsc::blocking","",223,{"inputs":[{"name":"signaltoken"}],"output":{"name":"signaltoken"}}],[11,"signal","","",223,{"inputs":[{"name":"signaltoken"}],"output":{"name":"bool"}}],[11,"cast_to_usize","","Convert to an unsafe usize value. Useful for storing in a pipe&#39;s state\nflag.",223,{"inputs":[{"name":"signaltoken"}],"output":{"name":"usize"}}],[11,"cast_from_usize","","Convert from an unsafe usize value. Useful for retrieving a pipe&#39;s state\nflag.",223,{"inputs":[{"name":"usize"}],"output":{"name":"signaltoken"}}],[11,"wait","","",224,null],[11,"new","std::sync::mpsc::oneshot","",225,{"inputs":[],"output":{"name":"packet"}}],[11,"send","","",225,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"sent","","",225,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"recv","","",225,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",225,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"upgrade","","",225,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"drop_chan","","",225,null],[11,"drop_port","","",225,null],[11,"can_recv","","",225,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",225,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",225,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop","","",225,null],[11,"eq","std::sync::mpsc::select","",226,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"ne","","",226,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new selection structure. This set is initially empty.",227,{"inputs":[],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",227,{"inputs":[{"name":"select"},{"name":"receiver"}],"output":{"name":"handle"}}],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",227,{"inputs":[{"name":"select"}],"output":{"name":"usize"}}],[11,"id","","Retrieves the id of this handle.",228,{"inputs":[{"name":"handle"}],"output":{"name":"usize"}}],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",228,{"inputs":[{"name":"handle"}],"output":{"name":"result"}}],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",228,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",228,null],[11,"drop","","",227,null],[11,"drop","","",228,null],[11,"next","","",229,{"inputs":[{"name":"packets"}],"output":{"name":"option"}}],[11,"fmt","","",227,{"inputs":[{"name":"select"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",228,{"inputs":[{"name":"handle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sync::mpsc::shared","",230,{"inputs":[],"output":{"name":"packet"}}],[11,"postinit_lock","","",230,{"inputs":[{"name":"packet"}],"output":{"name":"mutexguard"}}],[11,"inherit_blocker","","",230,null],[11,"send","","",230,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",230,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",230,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",230,null],[11,"drop_chan","","",230,null],[11,"drop_port","","",230,null],[11,"can_recv","","",230,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",230,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",230,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"drop","","",230,null],[11,"new","std::sync::mpsc::stream","",231,{"inputs":[],"output":{"name":"packet"}}],[11,"send","","",231,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"upgrade","","",231,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"recv","","",231,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",231,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop_chan","","",231,null],[11,"drop_port","","",231,null],[11,"can_recv","","",231,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",231,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",231,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"result"}}],[11,"drop","","",231,null],[11,"fmt","std::sync::mpsc::sync","",232,{"inputs":[{"name":"failure"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",233,{"inputs":[{"name":"usize"}],"output":{"name":"packet"}}],[11,"send","","",233,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","",233,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",233,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",233,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",233,null],[11,"drop_chan","","",233,null],[11,"drop_port","","",233,null],[11,"can_recv","","",233,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",233,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",233,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"drop","","",233,null],[11,"new","std::sync::mpsc::mpsc_queue","Creates a new queue that is safe to share among multiple producers and\none consumer.",234,{"inputs":[],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue.",234,null],[11,"pop","","Pops some data from this queue.",234,{"inputs":[{"name":"queue"}],"output":{"name":"popresult"}}],[11,"drop","","",234,null],[11,"new","std::sync::mpsc::spsc_queue","Creates a new queue.",235,{"inputs":[{"name":"usize"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue. Note that to use this function\nsafely, it must be externally guaranteed that there is only one pusher.",235,null],[11,"pop","","Attempts to pop a value from this queue. Remember that to use this type\nsafely you must ensure that there is only one popper at a time.",235,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"peek","","Attempts to peek at the head of the queue, returning `None` if the queue\nhas no data currently",235,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"drop","","",235,null],[11,"clone","std::sync::mpsc","",236,{"inputs":[{"name":"senderror"}],"output":{"name":"senderror"}}],[11,"eq","","",236,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"ne","","",236,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"fmt","","",237,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",237,{"inputs":[{"name":"recverror"}],"output":{"name":"recverror"}}],[11,"eq","","",237,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"ne","","",237,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"fmt","","",238,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",238,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"tryrecverror"}}],[11,"eq","","",238,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"ne","","",238,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"clone","","",239,{"inputs":[{"name":"trysenderror"}],"output":{"name":"trysenderror"}}],[11,"eq","","",239,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"ne","","",239,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",240,{"inputs":[{"name":"sender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",240,{"inputs":[{"name":"sender"}],"output":{"name":"sender"}}],[11,"drop","","",240,null],[11,"fmt","","",240,{"inputs":[{"name":"sender"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"send","","Sends a value on this synchronous channel.",241,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","Attempts to send a value on this channel without blocking.",241,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",241,{"inputs":[{"name":"syncsender"}],"output":{"name":"syncsender"}}],[11,"drop","","",241,null],[11,"fmt","","",241,{"inputs":[{"name":"syncsender"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",242,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",242,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",242,{"inputs":[{"name":"receiver"}],"output":{"name":"iter"}}],[11,"next","","",243,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",244,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"into_iter","","",242,{"inputs":[{"name":"receiver"}],"output":{"name":"intoiter"}}],[11,"drop","","",242,null],[11,"fmt","","",242,{"inputs":[{"name":"receiver"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",236,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",236,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",236,{"inputs":[{"name":"senderror"}],"output":{"name":"str"}}],[11,"cause","","",236,{"inputs":[{"name":"senderror"}],"output":{"name":"option"}}],[11,"fmt","","",239,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",239,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",239,{"inputs":[{"name":"trysenderror"}],"output":{"name":"str"}}],[11,"cause","","",239,{"inputs":[{"name":"trysenderror"}],"output":{"name":"option"}}],[11,"fmt","","",237,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",237,{"inputs":[{"name":"recverror"}],"output":{"name":"str"}}],[11,"cause","","",237,{"inputs":[{"name":"recverror"}],"output":{"name":"option"}}],[11,"fmt","","",238,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",238,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"str"}}],[11,"cause","","",238,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"option"}}],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",245,{"inputs":[{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads has rendezvoused here.",245,{"inputs":[{"name":"barrier"}],"output":{"name":"barrierwaitresult"}}],[11,"is_leader","","Returns whether this thread from `wait` is the &quot;leader thread&quot;.",246,{"inputs":[{"name":"barrierwaitresult"}],"output":{"name":"bool"}}],[11,"clone","std::sync::condvar","",247,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"waittimeoutresult"}}],[11,"eq","","",247,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"ne","","",247,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"fmt","","",247,{"inputs":[{"name":"waittimeoutresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"timed_out","","Returns whether the wait was known to have timed out.",247,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",248,{"inputs":[],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",248,{"inputs":[{"name":"condvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",248,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",248,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",248,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",248,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",248,null],[11,"drop","","",248,null],[11,"new","","Creates a new condition variable",249,{"inputs":[],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",249,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",249,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",249,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",249,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",249,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",249,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",249,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",250,{"inputs":[{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",250,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",250,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",250,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"into_inner","","Consumes this mutex, returning the underlying data.",250,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",250,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"drop","","",250,null],[11,"fmt","","",250,{"inputs":[{"name":"mutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new mutex in an unlocked state ready for use.",251,{"inputs":[],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",251,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",251,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates resources associated with this static mutex.",251,null],[11,"deref","","",252,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",252,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"drop","","",252,null],[11,"new","std::sync::once","Creates a new `Once` value.",253,{"inputs":[],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",253,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock&lt;T&gt;` which is unlocked.",254,{"inputs":[{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",254,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",254,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",254,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",254,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",254,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",254,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",254,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"drop","","",254,null],[11,"fmt","","",254,{"inputs":[{"name":"rwlock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new rwlock.",255,{"inputs":[],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",255,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this lock with shared read access.",255,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",255,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",255,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates all resources associated with this static lock.",255,null],[11,"map","","Transform this guard to hold a sub-borrow of the original data.",256,{"inputs":[{"name":"rwlockreadguard"},{"name":"f"}],"output":{"name":"rwlockreadguard"}}],[11,"map","","Transform this guard to hold a sub-borrow of the original data.",257,{"inputs":[{"name":"rwlockwriteguard"},{"name":"f"}],"output":{"name":"rwlockwriteguard"}}],[11,"deref","","",256,{"inputs":[{"name":"rwlockreadguard"}],"output":{"name":"t"}}],[11,"deref","","",257,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",257,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"drop","","",256,null],[11,"drop","","",257,null],[11,"new","std::sync::semaphore","Creates a new semaphore with the initial count specified.",258,{"inputs":[{"name":"isize"}],"output":{"name":"semaphore"}}],[11,"acquire","","Acquires a resource of this semaphore, blocking the current thread until\nit can do so.",258,null],[11,"release","","Release a resource from this semaphore.",258,null],[11,"access","","Acquires a resource of this semaphore, returning an RAII guard to\nrelease the semaphore when dropped.",258,{"inputs":[{"name":"semaphore"}],"output":{"name":"semaphoreguard"}}],[11,"drop","","",259,null],[11,"default","core::sync::atomic","",260,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",261,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"default","","",262,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"default","","",263,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"clone","","",264,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",260,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",260,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",260,null],[11,"swap","","Stores a value into the bool, returning the old value.",260,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",260,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",260,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",260,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",260,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",260,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",260,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",260,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",261,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",261,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",261,null],[11,"swap","","Stores a value into the isize, returning the old value.",261,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",261,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_exchange","","Stores a value into the `isize` if the current value is the same as the `current` value.",261,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_exchange_weak","","Stores a value into the `isize if the current value is the same as the `current` value.",261,null],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",261,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",261,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",261,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",261,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",261,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",262,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",262,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",262,null],[11,"swap","","Stores a value into the usize, returning the old value.",262,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",262,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_exchange","","Stores a value into the `usize` if the current value is the same as the `current` value.",262,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_exchange_weak","","Stores a value into the `usize` if the current value is the same as the `current` value.",262,null],[11,"fetch_add","","Add to the current usize, returning the previous value.",262,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",262,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",262,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",262,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",262,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",263,null],[11,"load","","Loads a value from the pointer.",263,null],[11,"store","","Stores a value into the pointer.",263,null],[11,"swap","","Stores a value into the pointer, returning the old value.",263,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",263,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",263,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",263,null],[11,"fmt","","",262,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",261,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",260,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",263,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","std::time::duration","",265,null],[11,"fmt","","",265,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",265,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",265,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",265,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",265,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",265,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",265,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"eq","","",265,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",265,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"clone","","",265,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"new","","Creates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",265,{"inputs":[{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",265,{"inputs":[{"name":"f"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",265,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",265,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",265,{"inputs":[{"name":"duration"}],"output":{"name":"u64"}}],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",265,{"inputs":[{"name":"duration"}],"output":{"name":"u32"}}],[11,"add","","",265,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"sub","","",265,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"mul","","",265,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"div","","",265,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"cmp","std::time","",266,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",266,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"option"}}],[11,"lt","","",266,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"le","","",266,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"gt","","",266,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"ge","","",266,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"eq","","",266,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"ne","","",266,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"clone","","",266,{"inputs":[{"name":"instant"}],"output":{"name":"instant"}}],[11,"cmp","","",267,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",267,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"option"}}],[11,"lt","","",267,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"le","","",267,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"gt","","",267,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"ge","","",267,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"eq","","",267,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"ne","","",267,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"clone","","",267,{"inputs":[{"name":"systemtime"}],"output":{"name":"systemtime"}}],[11,"fmt","","",268,{"inputs":[{"name":"systemtimeerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",268,{"inputs":[{"name":"systemtimeerror"}],"output":{"name":"systemtimeerror"}}],[11,"now","","Returns an instant corresponding to &quot;now&quot;.",266,{"inputs":[],"output":{"name":"instant"}}],[11,"duration_since","","Returns the amount of time elapsed from another instant to this one.",266,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"duration"}}],[11,"duration_from_earlier","","Deprecated, renamed to `duration_since`",266,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"duration"}}],[11,"elapsed","","Returns the amount of time elapsed since this instant was created.",266,{"inputs":[{"name":"instant"}],"output":{"name":"duration"}}],[11,"add","","",266,{"inputs":[{"name":"instant"},{"name":"duration"}],"output":{"name":"instant"}}],[11,"sub","","",266,{"inputs":[{"name":"instant"},{"name":"duration"}],"output":{"name":"instant"}}],[11,"sub","","",266,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"duration"}}],[11,"fmt","","",266,{"inputs":[{"name":"instant"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"now","","Returns the system time corresponding to &quot;now&quot;.",267,{"inputs":[],"output":{"name":"systemtime"}}],[11,"duration_since","","Returns the amount of time elapsed from an earlier point in time.",267,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"result"}}],[11,"duration_from_earlier","","Deprecated, renamed to `duration_since`",267,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"result"}}],[11,"elapsed","","Returns the amount of time elapsed since this system time was created.",267,{"inputs":[{"name":"systemtime"}],"output":{"name":"result"}}],[11,"add","","",267,{"inputs":[{"name":"systemtime"},{"name":"duration"}],"output":{"name":"systemtime"}}],[11,"sub","","",267,{"inputs":[{"name":"systemtime"},{"name":"duration"}],"output":{"name":"systemtime"}}],[11,"fmt","","",267,{"inputs":[{"name":"systemtime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"duration","","Returns the positive duration which represents how far forward the\nsecond system time was from the first.",268,{"inputs":[{"name":"systemtimeerror"}],"output":{"name":"duration"}}],[11,"description","","",268,{"inputs":[{"name":"systemtimeerror"}],"output":{"name":"str"}}],[11,"fmt","","",268,{"inputs":[{"name":"systemtimeerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys_common::condvar","Creates a new condition variable for use.",269,{"inputs":[],"output":{"name":"condvar"}}],[11,"notify_one","","Signals one waiter on this condition variable to wake up.",269,null],[11,"notify_all","","Awakens all current waiters on this condition variable.",269,null],[11,"wait","","Waits for a signal on the specified mutex.",269,null],[11,"wait_timeout","","Waits for a signal on the specified mutex with a timeout duration\nspecified by `dur` (a relative time into the future).",269,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","Deallocates all resources associated with this condition variable.",269,null],[11,"clone","std::sys_common::dwarf::eh","",270,{"inputs":[{"name":"ehcontext"}],"output":{"name":"ehcontext"}}],[11,"new","std::sys_common::dwarf","",271,null],[11,"read","","",271,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"t"}}],[11,"read_uleb128","","",271,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"u64"}}],[11,"read_sleb128","","",271,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"i64"}}],[11,"clone","std::sys_common::libunwind","",272,{"inputs":[{"name":"_unwind_action"}],"output":{"name":"_unwind_action"}}],[11,"clone","","",273,{"inputs":[{"name":"_unwind_reason_code"}],"output":{"name":"_unwind_reason_code"}}],[11,"new","std::sys_common::mutex","Creates a new mutex for use.",274,{"inputs":[],"output":{"name":"mutex"}}],[11,"lock","","Locks the mutex blocking the current thread until it is available.",274,null],[11,"try_lock","","Attempts to lock the mutex without blocking, returning whether it was\nsuccessfully acquired or not.",274,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"unlock","","Unlocks the mutex.",274,null],[11,"destroy","","Deallocates all resources associated with this mutex.",274,null],[11,"next","std::sys_common::net","",275,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"drop","","",275,null],[11,"connect","","",276,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",276,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"into_socket","","",276,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"set_read_timeout","","",276,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",276,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",276,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","",276,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",276,null],[11,"write","","",276,null],[11,"peer_addr","","",276,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"socket_addr","","",276,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","",276,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"duplicate","","",276,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",276,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",277,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",277,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"into_socket","","",277,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"socket_addr","","",277,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","",277,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"duplicate","","",277,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"fmt","","",277,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",278,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",278,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"into_socket","","",278,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"socket_addr","","",278,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"recv_from","","",278,null],[11,"send_to","","",278,null],[11,"duplicate","","",278,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","",278,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",278,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",278,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","",278,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",278,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys_common::poison","",279,{"inputs":[],"output":{"name":"flag"}}],[11,"borrow","","",279,{"inputs":[{"name":"flag"}],"output":{"name":"result"}}],[11,"done","","",279,null],[11,"get","","",279,{"inputs":[{"name":"flag"}],"output":{"name":"bool"}}],[11,"fmt","","",280,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",280,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",280,{"inputs":[{"name":"poisonerror"}],"output":{"name":"str"}}],[11,"new","","Creates a `PoisonError`.",280,{"inputs":[{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",280,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",280,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",280,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"from","","",281,{"inputs":[{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",281,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",281,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",281,{"inputs":[{"name":"trylockerror"}],"output":{"name":"str"}}],[11,"cause","","",281,{"inputs":[{"name":"trylockerror"}],"output":{"name":"option"}}],[11,"new","std::sys_common::remutex","Creates a new reentrant mutex in an unlocked state.",282,{"inputs":[{"name":"t"}],"output":{"name":"reentrantmutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",282,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",282,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"drop","","",282,null],[11,"fmt","","",282,{"inputs":[{"name":"reentrantmutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",283,{"inputs":[{"name":"reentrantmutexguard"}],"output":{"name":"t"}}],[11,"drop","","",283,null],[11,"new","std::sys_common::rwlock","Creates a new reader-writer lock for use.",284,{"inputs":[],"output":{"name":"rwlock"}}],[11,"read","","Acquires shared access to the underlying lock, blocking the current\nthread to do so.",284,null],[11,"try_read","","Attempts to acquire shared access to this lock, returning whether it\nsucceeded or not.",284,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","Acquires write access to the underlying lock, blocking the current thread\nto do so.",284,null],[11,"try_write","","Attempts to acquire exclusive access to this lock, returning whether it\nsucceeded or not.",284,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","Unlocks previously acquired shared access to this lock.",284,null],[11,"write_unlock","","Unlocks previously acquired exclusive access to this lock.",284,null],[11,"destroy","","Destroys OS-related resources with this RWLock.",284,null],[11,"new","std::sys_common::thread_local","",285,{"inputs":[{"name":"option"}],"output":{"name":"statickey"}}],[11,"get","","Gets the value associated with this TLS key",285,null],[11,"set","","Sets this TLS key to a new value.",285,null],[11,"destroy","","Deallocates this OS TLS key.",285,null],[11,"new","","Creates a new managed OS TLS key.",286,{"inputs":[{"name":"option"}],"output":{"name":"key"}}],[11,"get","","See StaticKey::get",286,null],[11,"set","","See StaticKey::set",286,null],[11,"drop","","",286,null],[11,"clone","std::sys_common::wtf8","",287,{"inputs":[{"name":"codepoint"}],"output":{"name":"codepoint"}}],[11,"partial_cmp","","",287,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"option"}}],[11,"lt","","",287,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"le","","",287,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"gt","","",287,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ge","","",287,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"cmp","","",287,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"ordering"}}],[11,"eq","","",287,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ne","","",287,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"fmt","","",287,{"inputs":[{"name":"codepoint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_u32_unchecked","","Unsafely creates a new `CodePoint` without checking the value.",287,{"inputs":[{"name":"u32"}],"output":{"name":"codepoint"}}],[11,"from_u32","","Creates a new `CodePoint` if the value is a valid code point.",287,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_char","","Creates a new `CodePoint` from a `char`.",287,{"inputs":[{"name":"char"}],"output":{"name":"codepoint"}}],[11,"to_u32","","Returns the numeric value of the code point.",287,{"inputs":[{"name":"codepoint"}],"output":{"name":"u32"}}],[11,"to_char","","Optionally returns a Unicode scalar value for the code point.",287,{"inputs":[{"name":"codepoint"}],"output":{"name":"option"}}],[11,"to_char_lossy","","Returns a Unicode scalar value for the code point.",287,{"inputs":[{"name":"codepoint"}],"output":{"name":"char"}}],[11,"clone","","",288,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"partial_cmp","","",288,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"option"}}],[11,"lt","","",288,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"le","","",288,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"gt","","",288,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ge","","",288,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"cmp","","",288,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"ordering"}}],[11,"eq","","",288,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ne","","",288,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"from_str","","Creates a WTF-8 slice from a UTF-8 `&amp;str` slice.",289,{"inputs":[{"name":"str"}],"output":{"name":"wtf8"}}],[11,"len","","Returns the length, in WTF-8 bytes.",289,{"inputs":[{"name":"wtf8"}],"output":{"name":"usize"}}],[11,"is_empty","","",289,{"inputs":[{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ascii_byte_at","","Returns the code point at `position` if it is in the ASCII range,\nor `b&#39;\\xFF&#39; otherwise.",289,{"inputs":[{"name":"wtf8"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"code_points","","Returns an iterator for the string’s code points.",289,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8codepoints"}}],[11,"as_str","","Tries to convert the string to UTF-8 and return a `&amp;str` slice.",289,{"inputs":[{"name":"wtf8"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Lossily converts the string to UTF-8.\nReturns a UTF-8 `&amp;str` slice if the contents are well-formed in UTF-8.",289,{"inputs":[{"name":"wtf8"}],"output":{"name":"cow"}}],[11,"encode_wide","","Converts the WTF-8 string to potentially ill-formed UTF-16\nand return an iterator of 16-bit code units.",289,{"inputs":[{"name":"wtf8"}],"output":{"name":"encodewide"}}],[11,"deref","","",288,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"fmt","","",288,{"inputs":[{"name":"wtf8buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new, empty WTF-8 string.",288,{"inputs":[],"output":{"name":"wtf8buf"}}],[11,"with_capacity","","Creates a new, empty WTF-8 string with pre-allocated capacity for `n` bytes.",288,{"inputs":[{"name":"usize"}],"output":{"name":"wtf8buf"}}],[11,"from_string","","Creates a WTF-8 string from a UTF-8 `String`.",288,{"inputs":[{"name":"string"}],"output":{"name":"wtf8buf"}}],[11,"from_str","","Creates a WTF-8 string from a UTF-8 `&amp;str` slice.",288,{"inputs":[{"name":"str"}],"output":{"name":"wtf8buf"}}],[11,"clear","","",288,null],[11,"from_wide","","Creates a WTF-8 string from a potentially ill-formed UTF-16 slice of 16-bit code units.",288,null],[11,"as_slice","","",288,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `Wtf8Buf`.\nThe collection may reserve more space to avoid frequent reallocations.",288,null],[11,"reserve_exact","","",288,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without reallocating.",288,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"usize"}}],[11,"push_str","","Append a UTF-8 slice at the end of the string.",288,null],[11,"push_wtf8","","Append a WTF-8 slice at the end of the string.",288,null],[11,"push_char","","Append a Unicode scalar value at the end of the string.",288,null],[11,"push","","Append a code point at the end of the string.",288,null],[11,"truncate","","Shortens a string to the specified length.",288,null],[11,"into_string","","Consumes the WTF-8 string and tries to convert it to UTF-8.",288,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"result"}}],[11,"into_string_lossy","","Consumes the WTF-8 string and converts it lossily to UTF-8.",288,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"string"}}],[11,"from_iter","","",288,{"inputs":[{"name":"t"}],"output":{"name":"wtf8buf"}}],[11,"extend","","",288,null],[11,"partial_cmp","","",289,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"option"}}],[11,"lt","","",289,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"le","","",289,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"gt","","",289,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ge","","",289,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"eq","","",289,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ne","","",289,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"cmp","","",289,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"ordering"}}],[11,"fmt","","",289,{"inputs":[{"name":"wtf8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"index","","",289,{"inputs":[{"name":"wtf8"},{"name":"range"}],"output":{"name":"wtf8"}}],[11,"index","","",289,{"inputs":[{"name":"wtf8"},{"name":"rangefrom"}],"output":{"name":"wtf8"}}],[11,"index","","",289,{"inputs":[{"name":"wtf8"},{"name":"rangeto"}],"output":{"name":"wtf8"}}],[11,"index","","",289,{"inputs":[{"name":"wtf8"},{"name":"rangefull"}],"output":{"name":"wtf8"}}],[11,"clone","","",290,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"wtf8codepoints"}}],[11,"next","","",290,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"option"}}],[11,"size_hint","","",290,null],[11,"clone","","",291,{"inputs":[{"name":"encodewide"}],"output":{"name":"encodewide"}}],[11,"next","","",291,{"inputs":[{"name":"encodewide"}],"output":{"name":"option"}}],[11,"size_hint","","",291,null],[11,"hash","","",287,null],[11,"hash","","",288,null],[11,"hash","","",289,null],[11,"is_ascii","","",289,{"inputs":[{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"to_ascii_uppercase","","",289,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"to_ascii_lowercase","","",289,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"eq_ignore_ascii_case","","",289,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"make_ascii_uppercase","","",289,null],[11,"make_ascii_lowercase","","",289,null],[11,"new","std::sys::weak","",292,{"inputs":[{"name":"str"}],"output":{"name":"weak"}}],[11,"get","","",292,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"new","std::sys::condvar","",293,{"inputs":[],"output":{"name":"condvar"}}],[11,"notify_one","","",293,null],[11,"notify_all","","",293,null],[11,"wait","","",293,null],[11,"wait_timeout","","",293,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","",293,null],[11,"new","std::sys::fd","",294,{"inputs":[{"name":"i32"}],"output":{"name":"filedesc"}}],[11,"raw","","",294,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"into_raw","","Extracts the actual filedescriptor without closing it.",294,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"read","","",294,null],[11,"write","","",294,null],[11,"set_cloexec","","",294,null],[11,"duplicate","","",294,{"inputs":[{"name":"filedesc"}],"output":{"name":"result"}}],[11,"drop","","",294,null],[11,"clone","std::sys::fs","",295,{"inputs":[{"name":"fileattr"}],"output":{"name":"fileattr"}}],[11,"clone","","",296,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",297,{"inputs":[{"name":"filepermissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",297,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"ne","","",297,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"clone","","",297,{"inputs":[{"name":"filepermissions"}],"output":{"name":"filepermissions"}}],[11,"hash","","",298,null],[11,"eq","","",298,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",298,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",298,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"size","","",295,{"inputs":[{"name":"fileattr"}],"output":{"name":"u64"}}],[11,"perm","","",295,{"inputs":[{"name":"fileattr"}],"output":{"name":"filepermissions"}}],[11,"file_type","","",295,{"inputs":[{"name":"fileattr"}],"output":{"name":"filetype"}}],[11,"modified","","",295,{"inputs":[{"name":"fileattr"}],"output":{"name":"result"}}],[11,"accessed","","",295,{"inputs":[{"name":"fileattr"}],"output":{"name":"result"}}],[11,"created","","",295,{"inputs":[{"name":"fileattr"}],"output":{"name":"result"}}],[11,"readonly","","",297,{"inputs":[{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","",297,null],[11,"mode","","",297,{"inputs":[{"name":"filepermissions"}],"output":{"name":"u32"}}],[11,"is_dir","","",298,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","",298,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","",298,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is","","",298,{"inputs":[{"name":"filetype"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"next","","",299,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"drop","","",300,null],[11,"path","","",301,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"file_name","","",301,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"metadata","","",301,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","",301,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"ino","","",301,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"new","","",296,{"inputs":[],"output":{"name":"openoptions"}}],[11,"read","","",296,null],[11,"write","","",296,null],[11,"append","","",296,null],[11,"truncate","","",296,null],[11,"create","","",296,null],[11,"create_new","","",296,null],[11,"custom_flags","","",296,null],[11,"mode","","",296,null],[11,"open","","",302,{"inputs":[{"name":"path"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"open_c","","",302,{"inputs":[{"name":"cstr"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"file_attr","","",302,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fsync","","",302,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"datasync","","",302,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"truncate","","",302,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read","","",302,null],[11,"write","","",302,null],[11,"flush","","",302,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",302,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"duplicate","","",302,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fd","","",302,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",302,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"new","","",303,{"inputs":[],"output":{"name":"dirbuilder"}}],[11,"mkdir","","",303,{"inputs":[{"name":"dirbuilder"},{"name":"path"}],"output":{"name":"result"}}],[11,"set_mode","","",303,null],[11,"fmt","","",302,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys::mutex","",304,{"inputs":[],"output":{"name":"mutex"}}],[11,"lock","","",304,null],[11,"unlock","","",304,null],[11,"try_lock","","",304,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"destroy","","",304,null],[11,"uninitialized","","",305,{"inputs":[],"output":{"name":"reentrantmutex"}}],[11,"init","","",305,null],[11,"lock","","",305,null],[11,"try_lock","","",305,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"bool"}}],[11,"unlock","","",305,null],[11,"destroy","","",305,null],[11,"new","std::sys::net","",306,{"inputs":[{"name":"socketaddr"},{"name":"i32"}],"output":{"name":"result"}}],[11,"accept","","",306,null],[11,"duplicate","","",306,{"inputs":[{"name":"socket"}],"output":{"name":"result"}}],[11,"read","","",306,null],[11,"set_timeout","","",306,{"inputs":[{"name":"socket"},{"name":"option"},{"name":"i32"}],"output":{"name":"result"}}],[11,"timeout","","",306,{"inputs":[{"name":"socket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"shutdown","","",306,{"inputs":[{"name":"socket"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"clone","libc::unix","",307,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",308,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",309,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",310,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[11,"clone","","",311,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[11,"clone","","",312,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",313,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",314,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",315,{"inputs":[{"name":"ipv6_mreq"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",316,{"inputs":[{"name":"hostent"}],"output":{"name":"hostent"}}],[11,"clone","","",317,{"inputs":[{"name":"iovec"}],"output":{"name":"iovec"}}],[11,"clone","","",318,{"inputs":[{"name":"pollfd"}],"output":{"name":"pollfd"}}],[11,"clone","libc::unix::notbsd","",319,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",320,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",321,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",322,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",323,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",324,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",325,{"inputs":[{"name":"sockaddr_ll"}],"output":{"name":"sockaddr_ll"}}],[11,"clone","","",326,{"inputs":[{"name":"fd_set"}],"output":{"name":"fd_set"}}],[11,"clone","","",327,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"clone","","",328,{"inputs":[{"name":"sched_param"}],"output":{"name":"sched_param"}}],[11,"clone","","",329,{"inputs":[{"name":"dl_info"}],"output":{"name":"dl_info"}}],[11,"clone","","",330,{"inputs":[{"name":"epoll_event"}],"output":{"name":"epoll_event"}}],[11,"clone","","",331,{"inputs":[{"name":"utsname"}],"output":{"name":"utsname"}}],[11,"clone","libc::unix::notbsd::linux","",332,{"inputs":[{"name":"dirent"}],"output":{"name":"dirent"}}],[11,"clone","","",333,{"inputs":[{"name":"dirent64"}],"output":{"name":"dirent64"}}],[11,"clone","","",334,{"inputs":[{"name":"rlimit64"}],"output":{"name":"rlimit64"}}],[11,"clone","","",335,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",336,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[11,"clone","","",337,{"inputs":[{"name":"pthread_mutex_t"}],"output":{"name":"pthread_mutex_t"}}],[11,"clone","","",338,{"inputs":[{"name":"pthread_rwlock_t"}],"output":{"name":"pthread_rwlock_t"}}],[11,"clone","","",339,{"inputs":[{"name":"pthread_mutexattr_t"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"clone","","",340,{"inputs":[{"name":"pthread_cond_t"}],"output":{"name":"pthread_cond_t"}}],[11,"clone","","",341,{"inputs":[{"name":"passwd"}],"output":{"name":"passwd"}}],[11,"clone","","",342,{"inputs":[{"name":"statvfs"}],"output":{"name":"statvfs"}}],[11,"clone","","",343,{"inputs":[{"name":"sockaddr_nl"}],"output":{"name":"sockaddr_nl"}}],[11,"clone","","",344,{"inputs":[{"name":"dqblk"}],"output":{"name":"dqblk"}}],[11,"clone","","",345,{"inputs":[{"name":"signalfd_siginfo"}],"output":{"name":"signalfd_siginfo"}}],[11,"clone","","",346,{"inputs":[{"name":"fsid_t"}],"output":{"name":"fsid_t"}}],[11,"clone","","",347,{"inputs":[{"name":"mq_attr"}],"output":{"name":"mq_attr"}}],[11,"clone","","",348,{"inputs":[{"name":"cpu_set_t"}],"output":{"name":"cpu_set_t"}}],[11,"clone","libc::unix::notbsd::linux::other","",349,{"inputs":[{"name":"sigaction"}],"output":{"name":"sigaction"}}],[11,"clone","","",350,{"inputs":[{"name":"stack_t"}],"output":{"name":"stack_t"}}],[11,"clone","","",351,{"inputs":[{"name":"siginfo_t"}],"output":{"name":"siginfo_t"}}],[11,"clone","","",352,{"inputs":[{"name":"glob64_t"}],"output":{"name":"glob64_t"}}],[11,"clone","","",353,{"inputs":[{"name":"ucred"}],"output":{"name":"ucred"}}],[11,"clone","","",354,{"inputs":[{"name":"statfs"}],"output":{"name":"statfs"}}],[11,"clone","","",355,{"inputs":[{"name":"msghdr"}],"output":{"name":"msghdr"}}],[11,"clone","","",356,{"inputs":[{"name":"termios"}],"output":{"name":"termios"}}],[11,"clone","","",357,{"inputs":[{"name":"flock"}],"output":{"name":"flock"}}],[11,"clone","libc::unix::notbsd::linux::other::b64","",358,{"inputs":[{"name":"sigset_t"}],"output":{"name":"sigset_t"}}],[11,"clone","libc::unix::notbsd::linux::other::b64::x86_64","",359,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",360,{"inputs":[{"name":"stat64"}],"output":{"name":"stat64"}}],[11,"clone","","",361,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","libc::unix::notbsd::linux::other","",362,{"inputs":[{"name":"ipc_perm"}],"output":{"name":"ipc_perm"}}],[11,"clone","","",363,{"inputs":[{"name":"shmid_ds"}],"output":{"name":"shmid_ds"}}],[11,"next","std::sys::os","",364,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",364,null],[11,"fmt","","",365,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",365,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",365,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",366,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",366,null],[11,"len","","",366,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",367,{"inputs":[{"name":"env"}],"output":{"name":"option"}}],[11,"size_hint","","",367,null],[11,"hash","std::sys::os_str","",368,null],[11,"clone","","",368,{"inputs":[{"name":"buf"}],"output":{"name":"buf"}}],[11,"fmt","","",369,{"inputs":[{"name":"slice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",368,{"inputs":[{"name":"buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_string","","",368,{"inputs":[{"name":"string"}],"output":{"name":"buf"}}],[11,"with_capacity","","",368,{"inputs":[{"name":"usize"}],"output":{"name":"buf"}}],[11,"clear","","",368,null],[11,"capacity","","",368,{"inputs":[{"name":"buf"}],"output":{"name":"usize"}}],[11,"reserve","","",368,null],[11,"reserve_exact","","",368,null],[11,"as_slice","","",368,{"inputs":[{"name":"buf"}],"output":{"name":"slice"}}],[11,"into_string","","",368,{"inputs":[{"name":"buf"}],"output":{"name":"result"}}],[11,"push_slice","","",368,null],[11,"from_str","","",369,{"inputs":[{"name":"str"}],"output":{"name":"slice"}}],[11,"to_str","","",369,{"inputs":[{"name":"slice"}],"output":{"name":"option"}}],[11,"to_string_lossy","","",369,{"inputs":[{"name":"slice"}],"output":{"name":"cow"}}],[11,"to_owned","","",369,{"inputs":[{"name":"slice"}],"output":{"name":"buf"}}],[11,"from_fd","std::sys::pipe","",370,{"inputs":[{"name":"i32"}],"output":{"name":"anonpipe"}}],[11,"read","","",370,null],[11,"write","","",370,null],[11,"fd","","",370,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",370,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"new","std::sys::process","",371,{"inputs":[{"name":"osstr"}],"output":{"name":"command"}}],[11,"arg","","",371,null],[11,"env","","",371,null],[11,"env_remove","","",371,null],[11,"env_clear","","",371,null],[11,"cwd","","",371,null],[11,"uid","","",371,null],[11,"gid","","",371,null],[11,"session_leader","","",371,null],[11,"before_exec","","",371,null],[11,"stdin","","",371,null],[11,"stdout","","",371,null],[11,"stderr","","",371,null],[11,"spawn","","",371,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"result"}}],[11,"exec","","",371,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"error"}}],[11,"fmt","","",371,{"inputs":[{"name":"command"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",372,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",372,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",372,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",372,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","",372,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","",372,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"signal","","",372,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",372,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"id","","",373,{"inputs":[{"name":"process"}],"output":{"name":"u32"}}],[11,"kill","","",373,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"wait","","",373,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"new","std::sys::rand::imp","Create a new `OsRng`.",374,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",374,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",374,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",374,null],[11,"new","std::sys::rwlock","",375,{"inputs":[],"output":{"name":"rwlock"}}],[11,"read","","",375,null],[11,"try_read","","",375,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","",375,null],[11,"try_write","","",375,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","",375,null],[11,"write_unlock","","",375,null],[11,"destroy","","",375,null],[11,"new","std::sys::stack_overflow","",376,{"inputs":[],"output":{"name":"handler"}}],[11,"drop","","",376,null],[11,"new","std::sys::thread","",377,{"inputs":[{"name":"usize"},{"name":"box"}],"output":{"name":"result"}}],[11,"yield_now","","",377,null],[11,"set_name","","",377,null],[11,"sleep","","",377,null],[11,"join","","",377,null],[11,"id","","",377,{"inputs":[{"name":"thread"}],"output":{"name":"u64"}}],[11,"into_id","","",377,{"inputs":[{"name":"thread"}],"output":{"name":"u64"}}],[11,"drop","","",377,null],[11,"clone","std::sys::time::inner","",378,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"cmp","","",379,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",379,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"option"}}],[11,"lt","","",379,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"le","","",379,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"gt","","",379,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"ge","","",379,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"eq","","",379,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"ne","","",379,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"clone","","",379,{"inputs":[{"name":"instant"}],"output":{"name":"instant"}}],[11,"cmp","","",380,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",380,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"option"}}],[11,"lt","","",380,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"le","","",380,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"gt","","",380,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"ge","","",380,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"eq","","",380,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"ne","","",380,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"clone","","",380,{"inputs":[{"name":"systemtime"}],"output":{"name":"systemtime"}}],[11,"now","","",379,{"inputs":[],"output":{"name":"instant"}}],[11,"sub_instant","","",379,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"duration"}}],[11,"add_duration","","",379,{"inputs":[{"name":"instant"},{"name":"duration"}],"output":{"name":"instant"}}],[11,"sub_duration","","",379,{"inputs":[{"name":"instant"},{"name":"duration"}],"output":{"name":"instant"}}],[11,"fmt","","",379,{"inputs":[{"name":"instant"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"now","","",380,{"inputs":[],"output":{"name":"systemtime"}}],[11,"sub_time","","",380,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"result"}}],[11,"add_duration","","",380,{"inputs":[{"name":"systemtime"},{"name":"duration"}],"output":{"name":"systemtime"}}],[11,"sub_duration","","",380,{"inputs":[{"name":"systemtime"},{"name":"duration"}],"output":{"name":"systemtime"}}],[11,"from","","",380,{"inputs":[{"name":"timespec"}],"output":{"name":"systemtime"}}],[11,"fmt","","",380,{"inputs":[{"name":"systemtime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"now","","",378,{"inputs":[{"name":"i32"}],"output":{"name":"timespec"}}],[11,"eq","","",378,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",378,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"option"}}],[11,"cmp","","",378,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"ordering"}}],[11,"new","std::sys::stdio","",381,{"inputs":[],"output":{"name":"result"}}],[11,"read","","",381,null],[11,"new","","",382,{"inputs":[],"output":{"name":"result"}}],[11,"write","","",382,null],[11,"new","","",383,{"inputs":[],"output":{"name":"result"}}],[11,"write","","",383,null],[11,"write","","",383,null],[11,"flush","","",383,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"clone","std::panicking","",384,{"inputs":[{"name":"handler"}],"output":{"name":"handler"}}],[11,"payload","","Returns the payload associated with the panic.",385,{"inputs":[{"name":"panicinfo"}],"output":{"name":"any"}}],[11,"location","","Returns information about the location from which the panic originated,\nif available.",385,{"inputs":[{"name":"panicinfo"}],"output":{"name":"option"}}],[11,"file","","Returns the name of the source file from which the panic originated.",386,{"inputs":[{"name":"location"}],"output":{"name":"str"}}],[11,"line","","Returns the line number from which the panic originated.",386,{"inputs":[{"name":"location"}],"output":{"name":"u32"}}],[11,"new","std::rand::reader","Create a new `ReaderRng` from a `Read`.",387,{"inputs":[{"name":"r"}],"output":{"name":"readerrng"}}],[11,"next_u32","","",387,{"inputs":[{"name":"readerrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",387,{"inputs":[{"name":"readerrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",387,null],[11,"clone","std::rand","",388,{"inputs":[{"name":"stdrng"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",388,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",388,{"inputs":[{"name":"stdrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",388,{"inputs":[{"name":"stdrng"}],"output":{"name":"u64"}}],[11,"reseed","","",388,null],[11,"from_seed","","",388,null],[11,"reseed","","",389,null],[11,"clone","","",390,{"inputs":[{"name":"threadrng"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",390,{"inputs":[{"name":"threadrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",390,{"inputs":[{"name":"threadrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",390,null],[11,"new","","Create a new `OsRng`.",391,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",391,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",391,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",391,null],[11,"fmt","","",392,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",392,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",392,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",392,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",392,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",392,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",392,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",392,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",393,null],[11,"fmt","","",393,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",393,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",393,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",393,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",393,{"inputs":[],"output":{"name":"typeid"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",394,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",394,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",394,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",394,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",394,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",394,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",394,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",395,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",395,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",395,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",395,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",396,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",396,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",396,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",396,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",396,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",396,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",396,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",396,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",396,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",397,null],[11,"clone","","",397,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",398,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",398,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",398,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",398,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",399,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",399,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",400,null],[11,"deref","","",399,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",399,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",401,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",401,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",401,null],[11,"fmt","core::cmp","",402,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",402,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",402,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",402,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",402,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",402,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",402,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",403,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",403,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",403,null],[11,"finish","","",403,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",403,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",403,{"inputs":[],"output":{"name":"siphasher"}}],[11,"build_hasher","core::hash","",404,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"h"}}],[11,"clone","","",404,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"buildhasherdefault"}}],[11,"default","","",404,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"clone","core::iter","",405,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",405,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",405,null],[11,"next_back","","",405,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",406,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",406,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",406,null],[11,"next_back","","",406,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",407,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",407,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",407,null],[11,"clone","","",408,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"clone","","",409,{"inputs":[{"name":"chainstate"}],"output":{"name":"chainstate"}}],[11,"next","","",408,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",408,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",408,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",408,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",408,null],[11,"next_back","","",408,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",410,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",410,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",410,null],[11,"next_back","","",410,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",411,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",411,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",411,null],[11,"next_back","","",411,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",412,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",412,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",412,null],[11,"next_back","","",412,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",413,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",413,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",413,null],[11,"next_back","","",413,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",414,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",414,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",414,null],[11,"nth","","",414,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",414,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",414,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",415,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",415,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",415,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",415,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",415,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",415,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",415,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks if the iterator has finished iterating.",415,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",416,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",416,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",416,null],[11,"clone","","",417,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",417,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",417,null],[11,"clone","","",418,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",418,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",418,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",418,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",418,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",418,null],[11,"clone","","",419,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",419,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",419,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",419,null],[11,"clone","","",420,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",420,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",420,null],[11,"clone","","",421,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",421,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",421,null],[11,"next_back","","",421,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",422,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",422,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",422,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",422,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",422,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",422,null],[11,"next_back","","",422,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",423,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",423,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",423,null],[11,"next_back","","",423,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",424,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",425,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",426,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",424,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",424,null],[11,"clone","","",427,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",427,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",427,null],[11,"next_back","","",427,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",424,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",424,null],[11,"next","core::ops","",426,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",426,null],[11,"next_back","","",426,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",425,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",428,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",428,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",428,null],[11,"next_back","","",428,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",429,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",429,null],[11,"next_back","","",429,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",429,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",429,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",429,{"inputs":[],"output":{"name":"empty"}}],[11,"clone","","",430,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",430,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",430,null],[11,"next_back","","",430,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",430,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"hash","core::marker","",431,null],[11,"eq","","",431,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",431,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",431,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",431,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"default","","",431,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",432,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",432,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",432,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",432,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",426,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",426,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",426,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",426,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",425,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",425,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",425,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",425,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",433,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",433,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",433,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",433,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","core::ptr","Creates a new `Unique`.",434,null],[11,"get","","Dereferences the content.",434,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",434,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",434,null],[11,"fmt","","",434,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Shared`.",435,null],[11,"clone","","",435,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",435,null],[11,"fmt","","",435,{"inputs":[{"name":"shared"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","core::raw","",436,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",437,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",438,null],[11,"fmt","","",438,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",438,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",438,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",438,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",438,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",438,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",438,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",438,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",438,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",438,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",438,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",438,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",438,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",438,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",438,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",438,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",438,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",438,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",438,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",438,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",438,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",438,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",438,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",438,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",438,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",438,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",438,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",438,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",438,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",438,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",439,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",439,null],[11,"next_back","","",439,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",439,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",440,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",440,null],[11,"next_back","","",440,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",441,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",441,null],[11,"next_back","","",441,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",438,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"hash","core::option","",442,null],[11,"fmt","","",442,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",442,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",442,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",442,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",442,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",442,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",442,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",442,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",442,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",442,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"is_some","","Returns `true` if the option is a `Some` value",442,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",442,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",442,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",442,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",442,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",442,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",442,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",442,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",442,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",442,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",442,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",442,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",442,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",442,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",442,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",442,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",442,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",442,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",442,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",442,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",442,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",442,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","","",442,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",442,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",443,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",443,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",443,null],[11,"next_back","","",443,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",444,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",444,null],[11,"next_back","","",444,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",444,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",445,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",445,null],[11,"next_back","","",445,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",446,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",446,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",446,null],[11,"next_back","","",446,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",442,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"clone","alloc::boxed","",447,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"exchangeheapsingleton"}}],[11,"pointer","","",448,null],[11,"make_place","","",448,{"inputs":[],"output":{"name":"intermediatebox"}}],[11,"finalize","","",448,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"finalize","","",61,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",447,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"intermediatebox"}}],[11,"drop","","",448,null],[11,"new","","Allocates memory on the heap and then places `x` into it.",61,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from a raw pointer.",61,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",61,null],[11,"default","","",61,{"inputs":[],"output":{"name":"box"}}],[11,"default","","",61,{"inputs":[],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box&#39;s contents.",61,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone_from","","Copies `source`&#39;s contents into `self` without creating a new allocation.",61,null],[11,"clone","","",61,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"eq","","",61,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",61,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"option"}}],[11,"lt","","",61,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"le","","",61,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ge","","",61,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"gt","","",61,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"cmp","","",61,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"ordering"}}],[11,"hash","","",61,null],[11,"from","","",61,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",61,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",61,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",61,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref_mut","","",61,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"next","","",61,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"size_hint","","",61,null],[11,"next_back","","",61,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"call_once","","",61,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"call_once","","",61,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"clone","","",61,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"borrow","","",61,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"borrow_mut","","",61,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"as_ref","","",61,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"as_mut","","",61,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"new","alloc::rc","Constructs a new `Rc&lt;T&gt;`.",449,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc&lt;T&gt;` has only one strong reference.\nThis will succeed even if there are outstanding weak references.",449,{"inputs":[{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",449,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Downgrades the `Rc&lt;T&gt;` to a `Weak&lt;T&gt;` reference.",449,{"inputs":[{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",449,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",449,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak&lt;T&gt;` values that share\nthe same inner value.",449,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc&lt;T&gt;` has\none strong reference and no weak references.",449,{"inputs":[{"name":"rc"}],"output":{"name":"option"}}],[11,"make_mut","","Make a mutable reference into the given `Rc&lt;T&gt;` by cloning the inner\ndata if the `Rc&lt;T&gt;` doesn&#39;t have one strong reference and no weak\nreferences.",449,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",449,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"drop","","Drops the `Rc&lt;T&gt;`.",449,null],[11,"clone","","Makes a clone of the `Rc&lt;T&gt;`.",449,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"default","","Creates a new `Rc&lt;T&gt;`, with the `Default` value for `T`.",449,{"inputs":[],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc&lt;T&gt;`s.",449,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Rc&lt;T&gt;`s.",449,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Rc&lt;T&gt;`s.",449,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Rc&lt;T&gt;`s.",449,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"le","","&#39;Less-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",449,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Rc&lt;T&gt;`s.",449,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ge","","&#39;Greater-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",449,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"cmp","","Comparison for two `Rc&lt;T&gt;`s.",449,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"ordering"}}],[11,"hash","","",449,null],[11,"fmt","","",449,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",449,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",449,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",449,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",450,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"drop","","Drops the `Weak&lt;T&gt;`.",450,null],[11,"clone","","Makes a clone of the `Weak&lt;T&gt;`.",450,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"fmt","","",450,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Constructs a new `Weak&lt;T&gt;` without an accompanying instance of T.",450,{"inputs":[],"output":{"name":"weak"}}],[11,"borrow","","",449,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"as_ref","","",449,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"borrow","collections::borrow","",146,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"clone","","",146,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",146,null],[11,"into_owned","","Extracts the owned data.",146,null],[11,"deref","","",146,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"cmp","","",146,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"ordering"}}],[11,"eq","","",146,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",146,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"option"}}],[11,"fmt","","",146,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",146,null],[11,"into_cow","","",146,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"as_ref","","",146,{"inputs":[{"name":"cow"}],"output":{"name":"t"}}],[11,"borrow","collections::vec","",118,null],[11,"borrow_mut","","",118,null],[11,"clone","collections::str","",451,{"inputs":[{"name":"encodeutf16"}],"output":{"name":"encodeutf16"}}],[11,"next","","",451,{"inputs":[{"name":"encodeutf16"}],"output":{"name":"option"}}],[11,"size_hint","","",451,null],[11,"borrow","collections::string","",147,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"fmt","core::str::pattern","",452,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",452,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",452,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",452,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",453,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",454,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",453,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",453,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",453,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",455,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",455,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",455,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",455,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",455,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",455,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",455,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",455,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",456,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",456,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",456,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",456,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",456,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",456,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",456,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",456,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",457,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",457,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",457,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",457,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",457,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",457,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",457,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",457,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",458,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",458,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",459,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",459,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",460,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",460,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",458,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",458,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",458,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",458,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",458,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",461,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",461,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",462,{"inputs":[],"output":{"name":"bool"}}],[11,"rejecting","","",462,null],[11,"matching","","",462,null],[11,"use_early_reject","","",463,{"inputs":[],"output":{"name":"bool"}}],[11,"rejecting","","",463,null],[11,"matching","","",463,null],[11,"cmp","collections::string","",147,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",147,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"option"}}],[11,"lt","","",147,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"le","","",147,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"gt","","",147,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ge","","",147,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"fmt","","",66,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",67,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new empty `String`.",147,{"inputs":[],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",147,{"inputs":[{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",147,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid characters.",147,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `Err`\nif `v` contains any invalid data.",147,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",147,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",147,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",147,{"inputs":[{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Converts a `String` into a byte vector.",147,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"as_str","","Extracts a string slice containing the entire string.",147,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_mut_str","","Extracts a string slice containing the entire string.",147,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"push_str","","Appends a given string slice onto the end of this `String`.",147,null],[11,"capacity","","Returns this `String`&#39;s capacity, in bytes.",147,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"reserve","","Ensures that this `String`&#39;s capacity is at least `additional` bytes\nlarger than its length.",147,null],[11,"reserve_exact","","Ensures that this `String`&#39;s capacity is `additional` bytes\nlarger than its length.",147,null],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",147,null],[11,"push","","Appends the given `char` to the end of this `String`.",147,null],[11,"as_bytes","","Returns a byte slice of this `String`&#39;s contents.",147,null],[11,"truncate","","Shortens this `String` to the specified length.",147,null],[11,"pop","","Removes the last character from the string buffer and returns it.",147,{"inputs":[{"name":"string"}],"output":{"name":"option"}}],[11,"remove","","Removes a `char` from this `String` at a byte position and returns it.",147,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"char"}}],[11,"insert","","Inserts a character into this `String` at a byte position.",147,null],[11,"as_mut_vec","","Returns a mutable reference to the contents of this `String`.",147,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of this `String`, in bytes.",147,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if this `String` has a length of zero.",147,{"inputs":[{"name":"string"}],"output":{"name":"bool"}}],[11,"clear","","Truncates this `String`, removing all contents.",147,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars.",147,{"inputs":[{"name":"string"},{"name":"r"}],"output":{"name":"drain"}}],[11,"into_boxed_str","","Converts this `String` into a `Box&lt;str&gt;`.",147,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"into_bytes","","Returns the bytes that were attempted to convert to a `String`.",66,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"vec"}}],[11,"utf8_error","","Fetch a `Utf8Error` to get more details about the conversion failure.",66,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"utf8error"}}],[11,"fmt","","",66,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",67,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",147,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"clone_from","","",147,null],[11,"from_iter","","",147,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",147,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",147,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",147,null],[11,"extend","","",147,null],[11,"extend","","",147,null],[11,"extend","","",147,null],[11,"eq","","",147,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",147,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",147,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",147,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",147,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",147,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",146,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",146,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",146,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",146,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",146,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",146,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","collections::string","",147,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"ne","","",147,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"default","","",147,{"inputs":[],"output":{"name":"string"}}],[11,"fmt","","",147,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",147,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",147,null],[11,"add","","",147,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"index","","",147,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index","","",147,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index","","",147,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index","","",147,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"index_mut","","",147,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index_mut","","",147,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index_mut","","",147,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index_mut","","",147,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"deref","","",147,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"deref_mut","","",147,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"from_str","","",147,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",68,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"fmt","","",68,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",68,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",68,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"as_ref","","",147,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_ref","","",147,null],[11,"from","","",147,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",146,{"inputs":[{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",146,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",147,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"into_cow","","",147,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"write_str","","",147,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",147,{"inputs":[{"name":"string"},{"name":"char"}],"output":{"name":"result"}}],[11,"drop","","",464,null],[11,"next","","",464,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",464,null],[11,"next_back","","",464,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"new","collections::vec","Constructs a new, empty `Vec&lt;T&gt;`.",118,{"inputs":[],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec&lt;T&gt;` with the specified capacity.",118,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec&lt;T&gt;` directly from the raw components of another vector.",118,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",118,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec&lt;T&gt;`. The collection may reserve more space to avoid\nfrequent reallocations.",118,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec&lt;T&gt;`. Does nothing if the capacity is already\nsufficient.",118,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",118,null],[11,"into_boxed_slice","","Converts the vector into Box&lt;[T]&gt;.",118,{"inputs":[{"name":"vec"}],"output":{"name":"box"}}],[11,"truncate","","Shorten a vector to be `len` elements long, dropping excess elements.",118,null],[11,"as_slice","","Extracts a slice containing the entire vector.",118,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",118,null],[11,"set_len","","Sets the length of a vector.",118,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",118,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after it to the right.",118,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after it to the left.",118,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"retain","","Retains only the elements specified by the predicate.",118,null],[11,"push","","Appends an element to the back of a collection.",118,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",118,{"inputs":[{"name":"vec"}],"output":{"name":"option"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",118,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items.",118,{"inputs":[{"name":"vec"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the vector, removing all values.",118,null],[11,"len","","Returns the number of elements in the vector.",118,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the vector contains no elements.",118,{"inputs":[{"name":"vec"}],"output":{"name":"bool"}}],[11,"split_off","","Splits the collection into two at the given index.",118,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",118,null],[11,"push_all","","",118,null],[11,"extend_from_slice","","Appends all elements in a slice to the `Vec`.",118,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",118,null],[11,"clone","","",118,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"clone_from","","",118,null],[11,"hash","","",118,null],[11,"index","","",118,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",118,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index","","",118,null],[11,"index","","",118,null],[11,"index","","",118,null],[11,"index","","",118,null],[11,"index_mut","","",118,null],[11,"index_mut","","",118,null],[11,"index_mut","","",118,null],[11,"index_mut","","",118,null],[11,"deref","","",118,null],[11,"deref_mut","","",118,null],[11,"from_iter","","",118,{"inputs":[{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",118,{"inputs":[{"name":"vec"}],"output":{"name":"intoiter"}}],[11,"extend","","",118,null],[11,"extend","","",118,null],[11,"eq","","",118,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",118,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","collections::borrow","",146,null],[11,"ne","","",146,null],[11,"eq","","",146,null],[11,"ne","","",146,null],[11,"eq","","",146,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",146,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","collections::vec","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"partial_cmp","","",118,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"option"}}],[11,"cmp","","",118,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"ordering"}}],[11,"drop","","",118,null],[11,"default","","",118,{"inputs":[],"output":{"name":"vec"}}],[11,"fmt","","",118,{"inputs":[{"name":"vec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",118,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_mut","","",118,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_ref","","",118,null],[11,"as_mut","","",118,null],[11,"from","","",118,null],[11,"from","","",118,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"from","collections::borrow","",146,null],[11,"from","","",146,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"from_iter","","",146,{"inputs":[{"name":"i"}],"output":{"name":"cow"}}],[11,"into_cow","collections::vec","",118,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"next","","",465,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",465,null],[11,"count","","",465,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next_back","","",465,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"clone","","",465,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"drop","","",465,null],[11,"next","","",466,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",466,null],[11,"next_back","","",466,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"drop","","",466,null],[11,"next","rustc_unicode::char","",467,{"inputs":[{"name":"tolowercase"}],"output":{"name":"option"}}],[11,"next","","",468,{"inputs":[{"name":"touppercase"}],"output":{"name":"option"}}],[11,"next","","",469,{"inputs":[{"name":"casemappingiter"}],"output":{"name":"option"}}],[11,"clone","","",470,{"inputs":[{"name":"decodeutf16"}],"output":{"name":"decodeutf16"}}],[11,"next","","",470,{"inputs":[{"name":"decodeutf16"}],"output":{"name":"option"}}],[11,"size_hint","","",470,null],[6,"c_char","libsystemd_sys","",null,null],[6,"c_int","","",null,null],[4,"c_void","","Type used to construct void pointers for use with C.",null,null],[6,"c_uint","","",null,null],[3,"iovec","","",null,null],[12,"iov_base","","",471,null],[12,"iov_len","","",471,null],[3,"const_iovec","","",null,null],[12,"iov_base","","",472,null],[12,"iov_len","","",472,null],[5,"array_to_iovecs","","",null,null],[0,"id128","","",null,null],[3,"sd_id128_t","libsystemd_sys::id128","",null,null],[12,"bytes","","",473,null],[5,"sd_id128_to_string","","",null,null],[5,"sd_id128_from_string","","",null,null],[5,"sd_id128_randomize","","",null,null],[5,"sd_id128_get_machine","","",null,null],[5,"sd_id128_get_boot","","",null,null],[17,"SD_ID128_STRING_MAX","","",null,null],[0,"event","libsystemd_sys","",null,null],[4,"sd_event","libsystemd_sys::event","",null,null],[4,"sd_event_source","","",null,null],[5,"sd_event_default","","",null,null],[5,"sd_event_new","","",null,null],[5,"sd_event_ref","","",null,null],[5,"sd_event_unref","","",null,null],[5,"sd_event_add_io","","",null,null],[5,"sd_event_add_time","","",null,null],[5,"sd_event_add_signal","","",null,null],[5,"sd_event_add_child","","",null,null],[5,"sd_event_add_defer","","",null,null],[5,"sd_event_add_post","","",null,null],[5,"sd_event_add_exit","","",null,null],[5,"sd_event_prepare","","",null,null],[5,"sd_event_wait","","",null,null],[5,"sd_event_dispatch","","",null,null],[5,"sd_event_run","","",null,null],[5,"sd_event_loop","","",null,null],[5,"sd_event_exit","","",null,null],[5,"sd_event_now","","",null,null],[5,"sd_event_get_fd","","",null,null],[5,"sd_event_get_state","","",null,null],[5,"sd_event_get_tid","","",null,null],[5,"sd_event_get_exit_code","","",null,null],[5,"sd_event_set_watchdog","","",null,null],[5,"sd_event_get_watchdog","","",null,null],[5,"sd_event_source_ref","","",null,null],[5,"sd_event_source_unref","","",null,null],[5,"sd_event_source_get_event","","",null,null],[5,"sd_event_source_get_userdata","","",null,null],[5,"sd_event_source_set_userdata","","",null,null],[5,"sd_event_source_set_description","","",null,null],[5,"sd_event_source_get_description","","",null,null],[5,"sd_event_source_set_prepare","","",null,null],[5,"sd_event_source_get_pending","","",null,null],[5,"sd_event_source_get_priority","","",null,null],[5,"sd_event_source_set_priority","","",null,null],[5,"sd_event_source_get_enabled","","",null,null],[5,"sd_event_source_set_enabled","","",null,null],[5,"sd_event_source_get_io_fd","","",null,null],[5,"sd_event_source_set_io_fd","","",null,null],[5,"sd_event_source_get_io_events","","",null,null],[5,"sd_event_source_set_io_events","","",null,null],[5,"sd_event_source_get_io_revents","","",null,null],[5,"sd_event_source_get_time","","",null,null],[5,"sd_event_source_set_time","","",null,null],[5,"sd_event_source_get_time_accuracy","","",null,null],[5,"sd_event_source_set_time_accuracy","","",null,null],[5,"sd_event_source_get_time_clock","","",null,null],[5,"sd_event_source_get_signal","","",null,null],[5,"sd_event_source_get_child_pid","","",null,null],[6,"sd_event_handler_t","","",null,null],[6,"sd_event_io_handler_t","","",null,null],[6,"sd_event_time_handler_t","","",null,null],[6,"sd_event_signal_handler_t","","",null,null],[6,"sd_event_child_handler_t","","",null,null],[17,"SD_EVENT_OFF","","",null,null],[17,"SD_EVENT_ON","","",null,null],[17,"SD_EVENT_ONESHOT","","",null,null],[17,"SD_EVENT_INITIAL","","",null,null],[17,"SD_EVENT_ARMED","","",null,null],[17,"SD_EVENT_PENDING","","",null,null],[17,"SD_EVENT_RUNNING","","",null,null],[17,"SD_EVENT_EXITING","","",null,null],[17,"SD_EVENT_FINISHED","","",null,null],[17,"SD_EVENT_PRIORITY_IMPORTANT","","",null,null],[17,"SD_EVENT_PRIORITY_NORMAL","","",null,null],[17,"SD_EVENT_PRIORITY_IDLE","","",null,null],[0,"daemon","libsystemd_sys","",null,null],[5,"sd_listen_fds","libsystemd_sys::daemon","",null,null],[5,"sd_is_fifo","","",null,null],[5,"sd_is_special","","",null,null],[5,"sd_is_socket","","",null,null],[5,"sd_is_socket_inet","","",null,null],[5,"sd_is_socket_unix","","",null,null],[5,"sd_is_mq","","",null,null],[5,"sd_notify","","",null,null],[5,"sd_pid_notify","","",null,null],[5,"sd_booted","","",null,null],[5,"sd_watchdog_enabled","","",null,null],[0,"journal","libsystemd_sys","",null,null],[4,"sd_journal","libsystemd_sys::journal","",null,null],[5,"sd_journal_sendv","","",null,null],[5,"sd_journal_open","","",null,null],[5,"sd_journal_close","","",null,null],[5,"sd_journal_previous","","",null,null],[5,"sd_journal_next","","",null,null],[5,"sd_journal_previous_skip","","",null,null],[5,"sd_journal_next_skip","","",null,null],[5,"sd_journal_get_realtime_usec","","",null,null],[5,"sd_journal_get_monotonic_usec","","",null,null],[5,"sd_journal_set_data_threshold","","",null,null],[5,"sd_journal_get_data_threshold","","",null,null],[5,"sd_journal_get_data","","",null,null],[5,"sd_journal_enumerate_data","","",null,null],[5,"sd_journal_restart_data","","",null,null],[5,"sd_journal_add_match","","",null,null],[5,"sd_journal_add_disjunction","","",null,null],[5,"sd_journal_add_conjunction","","",null,null],[5,"sd_journal_flush_matches","","",null,null],[5,"sd_journal_seek_head","","",null,null],[5,"sd_journal_seek_tail","","",null,null],[5,"sd_journal_seek_monotonic_usec","","",null,null],[5,"sd_journal_seek_realtime_usec","","",null,null],[5,"sd_journal_seek_cursor","","",null,null],[5,"sd_journal_get_cursor","","",null,null],[5,"sd_journal_test_cursor","","",null,null],[5,"sd_journal_get_cutoff_realtime_usec","","",null,null],[5,"sd_journal_get_cutoff_monotonic_usec","","",null,null],[5,"sd_journal_get_usage","","",null,null],[5,"sd_journal_query_unique","","",null,null],[5,"sd_journal_enumerate_unique","","",null,null],[5,"sd_journal_restart_unique","","",null,null],[5,"sd_journal_get_fd","","",null,null],[5,"sd_journal_get_events","","",null,null],[5,"sd_journal_get_timeout","","",null,null],[5,"sd_journal_process","","",null,null],[5,"sd_journal_wait","","",null,null],[5,"sd_journal_reliable_fd","","",null,null],[5,"sd_journal_get_catalog","","",null,null],[5,"sd_journal_get_catalog_for_message_id","","",null,null],[17,"SD_JOURNAL_LOCAL_ONLY","","",null,null],[17,"SD_JOURNAL_RUNTIME_ONLY","","",null,null],[17,"SD_JOURNAL_SYSTEM","","",null,null],[17,"SD_JOURNAL_CURRENT_USER","","",null,null],[0,"bus","libsystemd_sys","",null,null],[3,"sd_bus_error","libsystemd_sys::bus","",null,null],[12,"name","","",474,null],[12,"message","","",474,null],[12,"need_free","","",474,null],[3,"sd_bus_error_map","","",null,null],[12,"name","","",475,null],[12,"code","","",475,null],[4,"sd_bus","","",null,null],[4,"sd_bus_message","","",null,null],[4,"sd_bus_slot","","",null,null],[4,"sd_bus_creds","","",null,null],[4,"sd_bus_track","","",null,null],[5,"sd_bus_default","","",null,null],[5,"sd_bus_default_user","","",null,null],[5,"sd_bus_default_system","","",null,null],[5,"sd_bus_open","","",null,null],[5,"sd_bus_open_user","","",null,null],[5,"sd_bus_open_system","","",null,null],[5,"sd_bus_open_system_remote","","",null,null],[5,"sd_bus_open_system_machine","","",null,null],[5,"sd_bus_new","","",null,null],[5,"sd_bus_set_address","","",null,null],[5,"sd_bus_set_fd","","",null,null],[5,"sd_bus_set_exec","","",null,null],[5,"sd_bus_get_address","","",null,null],[5,"sd_bus_set_bus_client","","",null,null],[5,"sd_bus_is_bus_client","","",null,null],[5,"sd_bus_set_server","","",null,null],[5,"sd_bus_is_server","","",null,null],[5,"sd_bus_set_anonymous","","",null,null],[5,"sd_bus_is_anonymous","","",null,null],[5,"sd_bus_set_trusted","","",null,null],[5,"sd_bus_is_trusted","","",null,null],[5,"sd_bus_set_monitor","","",null,null],[5,"sd_bus_is_monitor","","",null,null],[5,"sd_bus_set_description","","",null,null],[5,"sd_bus_get_description","","",null,null],[5,"sd_bus_negotiate_creds","","",null,null],[5,"sd_bus_negotiate_timestamp","","",null,null],[5,"sd_bus_negotiate_fds","","",null,null],[5,"sd_bus_can_send","","",null,null],[5,"sd_bus_get_creds_mask","","",null,null],[5,"sd_bus_set_allow_interactive_authorization","","",null,null],[5,"sd_bus_get_allow_interactive_authorization","","",null,null],[5,"sd_bus_start","","",null,null],[5,"sd_bus_try_close","","",null,null],[5,"sd_bus_close","","",null,null],[5,"sd_bus_ref","","",null,null],[5,"sd_bus_unref","","",null,null],[5,"sd_bus_flush_close_unref","","",null,null],[5,"sd_bus_default_flush_close","","",null,null],[5,"sd_bus_is_open","","",null,null],[5,"sd_bus_get_bus_id","","",null,null],[5,"sd_bus_get_scope","","",null,null],[5,"sd_bus_get_tid","","",null,null],[5,"sd_bus_get_owner_creds","","",null,null],[5,"sd_bus_send","","",null,null],[5,"sd_bus_send_to","","",null,null],[5,"sd_bus_call","","",null,null],[5,"sd_bus_call_async","","",null,null],[5,"sd_bus_get_fd","","",null,null],[5,"sd_bus_get_events","","",null,null],[5,"sd_bus_get_timeout","","",null,null],[5,"sd_bus_process","","",null,null],[5,"sd_bus_process_priority","","",null,null],[5,"sd_bus_wait","","",null,null],[5,"sd_bus_flush","","",null,null],[5,"sd_bus_get_current_slot","","",null,null],[5,"sd_bus_get_current_message","","",null,null],[5,"sd_bus_get_current_handler","","",null,null],[5,"sd_bus_get_current_userdata","","",null,null],[5,"sd_bus_attach_event","","",null,null],[5,"sd_bus_detach_event","","",null,null],[5,"sd_bus_get_event","","",null,null],[5,"sd_bus_add_filter","","",null,null],[5,"sd_bus_add_match","","",null,null],[5,"sd_bus_add_object","","",null,null],[5,"sd_bus_add_fallback","","",null,null],[5,"sd_bus_add_object_vtable","","",null,null],[5,"sd_bus_add_fallback_vtable","","",null,null],[5,"sd_bus_add_node_enumerator","","",null,null],[5,"sd_bus_add_object_manager","","",null,null],[5,"sd_bus_slot_ref","","",null,null],[5,"sd_bus_slot_unref","","",null,null],[5,"sd_bus_slot_get_bus","","",null,null],[5,"sd_bus_slot_get_userdata","","",null,null],[5,"sd_bus_slot_set_userdata","","",null,null],[5,"sd_bus_slot_set_description","","",null,null],[5,"sd_bus_slot_get_description","","",null,null],[5,"sd_bus_slot_get_current_message","","",null,null],[5,"sd_bus_slot_get_current_handler","","",null,null],[5,"sd_bus_slot_get_current_userdata","","",null,null],[5,"sd_bus_message_new_signal","","",null,null],[5,"sd_bus_message_new_method_call","","",null,null],[5,"sd_bus_message_new_method_return","","",null,null],[5,"sd_bus_message_new_method_error","","",null,null],[5,"sd_bus_message_new_method_errorf","","",null,null],[5,"sd_bus_message_new_method_errno","","",null,null],[5,"sd_bus_message_new_method_errnof","","",null,null],[5,"sd_bus_message_ref","","",null,null],[5,"sd_bus_message_unref","","",null,null],[5,"sd_bus_message_get_type","","",null,null],[5,"sd_bus_message_get_cookie","","",null,null],[5,"sd_bus_message_get_reply_cookie","","",null,null],[5,"sd_bus_message_get_priority","","",null,null],[5,"sd_bus_message_get_expect_reply","","",null,null],[5,"sd_bus_message_get_auto_start","","",null,null],[5,"sd_bus_message_get_allow_interactive_authorization","","",null,null],[5,"sd_bus_message_get_signature","","",null,null],[5,"sd_bus_message_get_path","","",null,null],[5,"sd_bus_message_get_interface","","",null,null],[5,"sd_bus_message_get_member","","",null,null],[5,"sd_bus_message_get_destination","","",null,null],[5,"sd_bus_message_get_sender","","",null,null],[5,"sd_bus_message_get_error","","",null,null],[5,"sd_bus_message_get_errno","","",null,null],[5,"sd_bus_message_get_monotonic_usec","","",null,null],[5,"sd_bus_message_get_realtime_usec","","",null,null],[5,"sd_bus_message_get_seqnum","","",null,null],[5,"sd_bus_message_get_bus","","",null,null],[5,"sd_bus_message_get_creds","","",null,null],[5,"sd_bus_message_is_signal","","",null,null],[5,"sd_bus_message_is_method_call","","",null,null],[5,"sd_bus_message_is_method_error","","",null,null],[5,"sd_bus_message_is_empty","","",null,null],[5,"sd_bus_message_has_signature","","",null,null],[5,"sd_bus_message_set_expect_reply","","",null,null],[5,"sd_bus_message_set_auto_start","","",null,null],[5,"sd_bus_message_set_allow_interactive_authorization","","",null,null],[5,"sd_bus_message_set_destination","","",null,null],[5,"sd_bus_message_set_priority","","",null,null],[5,"sd_bus_message_append","","",null,null],[5,"sd_bus_message_append_basic","","",null,null],[5,"sd_bus_message_append_array","","",null,null],[5,"sd_bus_message_append_array_space","","",null,null],[5,"sd_bus_message_append_array_iovec","","",null,null],[5,"sd_bus_message_append_array_memfd","","",null,null],[5,"sd_bus_message_append_string_space","","",null,null],[5,"sd_bus_message_append_string_iovec","","",null,null],[5,"sd_bus_message_append_string_memfd","","",null,null],[5,"sd_bus_message_append_strv","","",null,null],[5,"sd_bus_message_open_container","","",null,null],[5,"sd_bus_message_close_container","","",null,null],[5,"sd_bus_message_copy","","",null,null],[5,"sd_bus_message_read","","",null,null],[5,"sd_bus_message_read_basic","","",null,null],[5,"sd_bus_message_read_array","","",null,null],[5,"sd_bus_message_read_strv","","",null,null],[5,"sd_bus_message_skip","","",null,null],[5,"sd_bus_message_enter_container","","",null,null],[5,"sd_bus_message_exit_container","","",null,null],[5,"sd_bus_message_peek_type","","",null,null],[5,"sd_bus_message_verify_type","","",null,null],[5,"sd_bus_message_at_end","","",null,null],[5,"sd_bus_message_rewind","","",null,null],[5,"sd_bus_get_unique_name","","",null,null],[5,"sd_bus_request_name","","",null,null],[5,"sd_bus_release_name","","",null,null],[5,"sd_bus_list_names","","",null,null],[5,"sd_bus_get_name_creds","","",null,null],[5,"sd_bus_get_name_machine_id","","",null,null],[5,"sd_bus_call_method","","",null,null],[5,"sd_bus_call_method_async","","",null,null],[5,"sd_bus_get_property","","",null,null],[5,"sd_bus_get_property_trivial","","",null,null],[5,"sd_bus_get_property_string","","",null,null],[5,"sd_bus_get_property_strv","","",null,null],[5,"sd_bus_set_property","","",null,null],[5,"sd_bus_reply_method_return","","",null,null],[5,"sd_bus_reply_method_error","","",null,null],[5,"sd_bus_reply_method_errorf","","",null,null],[5,"sd_bus_reply_method_errno","","",null,null],[5,"sd_bus_reply_method_errnof","","",null,null],[5,"sd_bus_emit_signal","","",null,null],[5,"sd_bus_emit_properties_changed_strv","","",null,null],[5,"sd_bus_emit_properties_changed","","",null,null],[5,"sd_bus_emit_object_added","","",null,null],[5,"sd_bus_emit_object_removed","","",null,null],[5,"sd_bus_emit_interfaces_added_strv","","",null,null],[5,"sd_bus_emit_interfaces_added","","",null,null],[5,"sd_bus_emit_interfaces_removed_strv","","",null,null],[5,"sd_bus_emit_interfaces_removed","","",null,null],[5,"sd_bus_query_sender_creds","","",null,null],[5,"sd_bus_query_sender_privilege","","",null,null],[5,"sd_bus_creds_new_from_pid","","",null,null],[5,"sd_bus_creds_ref","","",null,null],[5,"sd_bus_creds_unref","","",null,null],[5,"sd_bus_creds_get_mask","","",null,null],[5,"sd_bus_creds_get_augmented_mask","","",null,null],[5,"sd_bus_creds_get_pid","","",null,null],[5,"sd_bus_creds_get_ppid","","",null,null],[5,"sd_bus_creds_get_tid","","",null,null],[5,"sd_bus_creds_get_uid","","",null,null],[5,"sd_bus_creds_get_euid","","",null,null],[5,"sd_bus_creds_get_suid","","",null,null],[5,"sd_bus_creds_get_fsuid","","",null,null],[5,"sd_bus_creds_get_gid","","",null,null],[5,"sd_bus_creds_get_egid","","",null,null],[5,"sd_bus_creds_get_sgid","","",null,null],[5,"sd_bus_creds_get_fsgid","","",null,null],[5,"sd_bus_creds_get_supplementary_gids","","",null,null],[5,"sd_bus_creds_get_comm","","",null,null],[5,"sd_bus_creds_get_tid_comm","","",null,null],[5,"sd_bus_creds_get_exe","","",null,null],[5,"sd_bus_creds_get_cmdline","","",null,null],[5,"sd_bus_creds_get_cgroup","","",null,null],[5,"sd_bus_creds_get_unit","","",null,null],[5,"sd_bus_creds_get_slice","","",null,null],[5,"sd_bus_creds_get_user_unit","","",null,null],[5,"sd_bus_creds_get_user_slice","","",null,null],[5,"sd_bus_creds_get_session","","",null,null],[5,"sd_bus_creds_get_owner_uid","","",null,null],[5,"sd_bus_creds_has_effective_cap","","",null,null],[5,"sd_bus_creds_has_permitted_cap","","",null,null],[5,"sd_bus_creds_has_inheritable_cap","","",null,null],[5,"sd_bus_creds_has_bounding_cap","","",null,null],[5,"sd_bus_creds_get_selinux_context","","",null,null],[5,"sd_bus_creds_get_audit_session_id","","",null,null],[5,"sd_bus_creds_get_audit_login_uid","","",null,null],[5,"sd_bus_creds_get_tty","","",null,null],[5,"sd_bus_creds_get_unique_name","","",null,null],[5,"sd_bus_creds_get_well_known_names","","",null,null],[5,"sd_bus_creds_get_description","","",null,null],[5,"sd_bus_error_free","","",null,null],[5,"sd_bus_error_set","","",null,null],[5,"sd_bus_error_setf","","",null,null],[5,"sd_bus_error_set_const","","",null,null],[5,"sd_bus_error_set_errno","","",null,null],[5,"sd_bus_error_set_errnof","","",null,null],[5,"sd_bus_error_get_errno","","",null,null],[5,"sd_bus_error_copy","","",null,null],[5,"sd_bus_error_is_set","","",null,null],[5,"sd_bus_error_has_name","","",null,null],[5,"sd_bus_error_add_map","","",null,null],[5,"sd_bus_path_encode","","",null,null],[5,"sd_bus_path_encode_many","","",null,null],[5,"sd_bus_path_decode","","",null,null],[5,"sd_bus_path_decode_many","","",null,null],[5,"sd_bus_track_new","","",null,null],[5,"sd_bus_track_ref","","",null,null],[5,"sd_bus_track_unref","","",null,null],[5,"sd_bus_track_get_bus","","",null,null],[5,"sd_bus_track_get_userdata","","",null,null],[5,"sd_bus_track_set_userdata","","",null,null],[5,"sd_bus_track_add_sender","","",null,null],[5,"sd_bus_track_remove_sender","","",null,null],[5,"sd_bus_track_add_name","","",null,null],[5,"sd_bus_track_remove_name","","",null,null],[5,"sd_bus_track_count","","",null,null],[5,"sd_bus_track_contains","","",null,null],[5,"sd_bus_track_first","","",null,null],[5,"sd_bus_track_next","","",null,null],[0,"vtable","","",null,null],[3,"sd_bus_vtable","libsystemd_sys::bus::vtable","",null,null],[3,"sd_bus_table_start","","",null,null],[12,"element_size","","",476,null],[3,"sd_bus_table_method","","",null,null],[12,"member","","",477,null],[12,"signature","","",477,null],[12,"result","","",477,null],[12,"handler","","",477,null],[12,"offset","","",477,null],[3,"sd_bus_table_signal","","",null,null],[12,"member","","",478,null],[12,"signature","","",478,null],[3,"sd_bus_table_property","","",null,null],[12,"member","","",479,null],[12,"signature","","",479,null],[12,"get","","",479,null],[12,"set","","",479,null],[12,"offset","","",479,null],[4,"SdBusVtableType","","",null,null],[13,"Start","","",480,null],[13,"End","","",480,null],[13,"Method","","",480,null],[13,"Signal","","",480,null],[13,"Property","","",480,null],[13,"WritableProperty","","",480,null],[4,"SdBusVtableFlag","","",null,null],[13,"Deprecated","","",481,null],[13,"Hidden","","",481,null],[13,"Unprivileged","","",481,null],[13,"MethodNoReply","","",481,null],[13,"PropertyConst","","",481,null],[13,"PropertyEmitsChange","","",481,null],[13,"PropertyEmitsInvalidation","","",481,null],[13,"PropertyExplicit","","",481,null],[13,"CapabilityMask","","",481,null],[11,"fmt","","",480,{"inputs":[{"name":"sdbusvtabletype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",480,{"inputs":[{"name":"sdbusvtabletype"}],"output":{"name":"sdbusvtabletype"}}],[11,"fmt","","",481,{"inputs":[{"name":"sdbusvtableflag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",481,{"inputs":[{"name":"sdbusvtableflag"}],"output":{"name":"sdbusvtableflag"}}],[11,"fmt","","",482,{"inputs":[{"name":"sd_bus_vtable"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",482,{"inputs":[{"name":"sd_bus_vtable"}],"output":{"name":"sd_bus_vtable"}}],[11,"default","","",482,{"inputs":[],"output":{"name":"self"}}],[11,"type_and_flags","","",482,{"inputs":[{"name":"u32"},{"name":"u64"}],"output":{"name":"u64"}}],[11,"typ","","",482,{"inputs":[{"name":"sd_bus_vtable"}],"output":{"name":"u32"}}],[11,"flags","","",482,{"inputs":[{"name":"sd_bus_vtable"}],"output":{"name":"u64"}}],[6,"sd_bus_message_handler_t","libsystemd_sys::bus","",null,null],[6,"sd_bus_property_get_t","","",null,null],[6,"sd_bus_property_set_t","","",null,null],[6,"sd_bus_object_find_t","","",null,null],[6,"sd_bus_node_enumerator_t","","",null,null],[6,"sd_bus_track_handler_t","","",null,null]],"paths":[[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"fd_set"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"fsid_t"],[3,"mq_attr"],[3,"cpu_set_t"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"sigset_t"],[3,"stat"],[3,"stat64"],[3,"pthread_attr_t"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"Box"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"ParseIntError"],[3,"ParseFloatError"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[4,"ParseError"],[8,"Error"],[3,"EscapeDefault"],[3,"Wrapping"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"ScopedKey"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"RawBucket"],[3,"Bucket"],[3,"SafeHash"],[3,"FullBucket"],[3,"EmptyBucket"],[4,"BucketState"],[3,"GapThenFull"],[3,"RawTable"],[3,"RawBuckets"],[3,"RevMoveBuckets"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"DefaultResizePolicy"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"DefaultState"],[3,"BinaryHeap"],[3,"Hole"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Vec"],[3,"Iter"],[3,"IntoIter"],[3,"Rawlink"],[3,"LinkedList"],[3,"IterMut"],[3,"FrontPlace"],[3,"BackPlace"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"DynamicLibrary"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"IntoStringError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[4,"Cow"],[3,"String"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"ReadDir"],[3,"DirEntry"],[3,"WalkDir"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"Cursor"],[3,"Custom"],[4,"ErrorKind"],[4,"Repr"],[3,"Lazy"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"StdinRaw"],[3,"StdoutRaw"],[3,"StderrRaw"],[4,"Maybe"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Broadcast"],[3,"Chain"],[3,"Take"],[3,"Tee"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"stat"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[3,"AssertRecoverSafe"],[4,"Prefix"],[4,"State"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Path"],[3,"StripPrefixError"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"SignalToken"],[3,"WaitToken"],[3,"Packet"],[4,"StartResult"],[3,"Select"],[3,"Handle"],[3,"Packets"],[3,"Packet"],[3,"Packet"],[4,"Failure"],[3,"Packet"],[3,"Queue"],[3,"Queue"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"Mutex"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"Semaphore"],[3,"SemaphoreGuard"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Duration"],[3,"Instant"],[3,"SystemTime"],[3,"SystemTimeError"],[3,"Condvar"],[3,"EHContext"],[3,"DwarfReader"],[4,"_Unwind_Action"],[4,"_Unwind_Reason_Code"],[3,"Mutex"],[3,"LookupHost"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[3,"Flag"],[3,"PoisonError"],[4,"TryLockError"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"RWLock"],[3,"StaticKey"],[3,"Key"],[3,"CodePoint"],[3,"Wtf8Buf"],[3,"Wtf8"],[3,"Wtf8CodePoints"],[3,"EncodeWide"],[3,"Weak"],[3,"Condvar"],[3,"FileDesc"],[3,"FileAttr"],[3,"OpenOptions"],[3,"FilePermissions"],[3,"FileType"],[3,"ReadDir"],[3,"Dir"],[3,"DirEntry"],[3,"File"],[3,"DirBuilder"],[3,"Mutex"],[3,"ReentrantMutex"],[3,"Socket"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"fd_set"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"passwd"],[3,"statvfs"],[3,"sockaddr_nl"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"fsid_t"],[3,"mq_attr"],[3,"cpu_set_t"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"sigset_t"],[3,"stat"],[3,"stat64"],[3,"pthread_attr_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"Env"],[3,"Buf"],[3,"Slice"],[3,"AnonPipe"],[3,"Command"],[3,"ExitStatus"],[3,"Process"],[3,"OsRng"],[3,"RWLock"],[3,"Handler"],[3,"Thread"],[3,"Timespec"],[3,"Instant"],[3,"SystemTime"],[3,"Stdin"],[3,"Stdout"],[3,"Stderr"],[4,"Handler"],[3,"PanicInfo"],[3,"Location"],[3,"ReaderRng"],[3,"StdRng"],[3,"ThreadRngReseeder"],[3,"ThreadRng"],[3,"OsRng"],[8,"Any"],[3,"TypeId"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[4,"Ordering"],[3,"SipHasher"],[3,"BuildHasherDefault"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[4,"ChainState"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeFrom"],[3,"Range"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"PhantomData"],[3,"RangeFull"],[3,"RangeTo"],[3,"Unique"],[3,"Shared"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[4,"Option"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"Rc"],[3,"Weak"],[3,"EncodeUtf16"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"Drain"],[3,"IntoIter"],[3,"Drain"],[3,"ToLowercase"],[3,"ToUppercase"],[4,"CaseMappingIter"],[3,"DecodeUtf16"],[3,"iovec"],[3,"const_iovec"],[3,"sd_id128_t"],[3,"sd_bus_error"],[3,"sd_bus_error_map"],[3,"sd_bus_table_start"],[3,"sd_bus_table_method"],[3,"sd_bus_table_signal"],[3,"sd_bus_table_property"],[4,"SdBusVtableType"],[4,"SdBusVtableFlag"],[3,"sd_bus_vtable"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"utimbuf","libc","",null,null],[12,"actime","","",0,null],[12,"modtime","","",0,null],[3,"timeval","","",null,null],[12,"tv_sec","","",1,null],[12,"tv_usec","","",1,null],[3,"timespec","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_nsec","","",2,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",3,null],[12,"rlim_max","","",3,null],[3,"rusage","","",null,null],[12,"ru_utime","","",4,null],[12,"ru_stime","","",4,null],[12,"ru_maxrss","","",4,null],[12,"ru_ixrss","","",4,null],[12,"ru_idrss","","",4,null],[12,"ru_isrss","","",4,null],[12,"ru_minflt","","",4,null],[12,"ru_majflt","","",4,null],[12,"ru_nswap","","",4,null],[12,"ru_inblock","","",4,null],[12,"ru_oublock","","",4,null],[12,"ru_msgsnd","","",4,null],[12,"ru_msgrcv","","",4,null],[12,"ru_nsignals","","",4,null],[12,"ru_nvcsw","","",4,null],[12,"ru_nivcsw","","",4,null],[3,"in_addr","","",null,null],[12,"s_addr","","",5,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",6,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",7,null],[12,"imr_interface","","",7,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",8,null],[12,"ipv6mr_interface","","",8,null],[3,"hostent","","",null,null],[12,"h_name","","",9,null],[12,"h_aliases","","",9,null],[12,"h_addrtype","","",9,null],[12,"h_length","","",9,null],[12,"h_addr_list","","",9,null],[3,"iovec","","",null,null],[12,"iov_base","","",10,null],[12,"iov_len","","",10,null],[3,"pollfd","","",null,null],[12,"fd","","",11,null],[12,"events","","",11,null],[12,"revents","","",11,null],[3,"winsize","","",null,null],[12,"ws_row","","",12,null],[12,"ws_col","","",12,null],[12,"ws_xpixel","","",12,null],[12,"ws_ypixel","","",12,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",13,null],[12,"sa_data","","",13,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",14,null],[12,"sin_port","","",14,null],[12,"sin_addr","","",14,null],[12,"sin_zero","","",14,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",15,null],[12,"sin6_port","","",15,null],[12,"sin6_flowinfo","","",15,null],[12,"sin6_addr","","",15,null],[12,"sin6_scope_id","","",15,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",16,null],[12,"sun_path","","",16,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",17,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",18,null],[12,"ai_family","","",18,null],[12,"ai_socktype","","",18,null],[12,"ai_protocol","","",18,null],[12,"ai_addrlen","","",18,null],[12,"ai_addr","","",18,null],[12,"ai_canonname","","",18,null],[12,"ai_next","","",18,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",19,null],[12,"nl_pid","","",19,null],[12,"nl_groups","","",19,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",20,null],[12,"sll_protocol","","",20,null],[12,"sll_ifindex","","",20,null],[12,"sll_hatype","","",20,null],[12,"sll_pkttype","","",20,null],[12,"sll_halen","","",20,null],[12,"sll_addr","","",20,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",21,null],[12,"tm_min","","",21,null],[12,"tm_hour","","",21,null],[12,"tm_mday","","",21,null],[12,"tm_mon","","",21,null],[12,"tm_year","","",21,null],[12,"tm_wday","","",21,null],[12,"tm_yday","","",21,null],[12,"tm_isdst","","",21,null],[12,"tm_gmtoff","","",21,null],[12,"tm_zone","","",21,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",22,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",23,null],[12,"dli_fbase","","",23,null],[12,"dli_sname","","",23,null],[12,"dli_saddr","","",23,null],[3,"epoll_event","","",null,null],[12,"events","","",24,null],[12,"u64","","",24,null],[3,"utsname","","",null,null],[12,"sysname","","",25,null],[12,"nodename","","",25,null],[12,"release","","",25,null],[12,"version","","",25,null],[12,"machine","","",25,null],[12,"domainname","","",25,null],[3,"lconv","","",null,null],[12,"decimal_point","","",26,null],[12,"thousands_sep","","",26,null],[12,"grouping","","",26,null],[12,"int_curr_symbol","","",26,null],[12,"currency_symbol","","",26,null],[12,"mon_decimal_point","","",26,null],[12,"mon_thousands_sep","","",26,null],[12,"mon_grouping","","",26,null],[12,"positive_sign","","",26,null],[12,"negative_sign","","",26,null],[12,"int_frac_digits","","",26,null],[12,"frac_digits","","",26,null],[12,"p_cs_precedes","","",26,null],[12,"p_sep_by_space","","",26,null],[12,"n_cs_precedes","","",26,null],[12,"n_sep_by_space","","",26,null],[12,"p_sign_posn","","",26,null],[12,"n_sign_posn","","",26,null],[12,"int_p_cs_precedes","","",26,null],[12,"int_p_sep_by_space","","",26,null],[12,"int_n_cs_precedes","","",26,null],[12,"int_n_sep_by_space","","",26,null],[12,"int_p_sign_posn","","",26,null],[12,"int_n_sign_posn","","",26,null],[3,"dirent","","",null,null],[12,"d_ino","","",27,null],[12,"d_off","","",27,null],[12,"d_reclen","","",27,null],[12,"d_type","","",27,null],[12,"d_name","","",27,null],[3,"dirent64","","",null,null],[12,"d_ino","","",28,null],[12,"d_off","","",28,null],[12,"d_reclen","","",28,null],[12,"d_type","","",28,null],[12,"d_name","","",28,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",29,null],[12,"rlim_max","","",29,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",30,null],[12,"gl_pathv","","",30,null],[12,"gl_offs","","",30,null],[12,"gl_flags","","",30,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",31,null],[12,"ifa_name","","",31,null],[12,"ifa_flags","","",31,null],[12,"ifa_addr","","",31,null],[12,"ifa_netmask","","",31,null],[12,"ifa_ifu","","",31,null],[12,"ifa_data","","",31,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",32,null],[12,"pw_passwd","","",32,null],[12,"pw_uid","","",32,null],[12,"pw_gid","","",32,null],[12,"pw_gecos","","",32,null],[12,"pw_dir","","",32,null],[12,"pw_shell","","",32,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",33,null],[12,"f_frsize","","",33,null],[12,"f_blocks","","",33,null],[12,"f_bfree","","",33,null],[12,"f_bavail","","",33,null],[12,"f_files","","",33,null],[12,"f_ffree","","",33,null],[12,"f_favail","","",33,null],[12,"f_fsid","","",33,null],[12,"f_flag","","",33,null],[12,"f_namemax","","",33,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",34,null],[12,"dqb_bsoftlimit","","",34,null],[12,"dqb_curspace","","",34,null],[12,"dqb_ihardlimit","","",34,null],[12,"dqb_isoftlimit","","",34,null],[12,"dqb_curinodes","","",34,null],[12,"dqb_btime","","",34,null],[12,"dqb_itime","","",34,null],[12,"dqb_valid","","",34,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",35,null],[12,"ssi_errno","","",35,null],[12,"ssi_code","","",35,null],[12,"ssi_pid","","",35,null],[12,"ssi_uid","","",35,null],[12,"ssi_fd","","",35,null],[12,"ssi_tid","","",35,null],[12,"ssi_band","","",35,null],[12,"ssi_overrun","","",35,null],[12,"ssi_trapno","","",35,null],[12,"ssi_status","","",35,null],[12,"ssi_int","","",35,null],[12,"ssi_ptr","","",35,null],[12,"ssi_utime","","",35,null],[12,"ssi_stime","","",35,null],[12,"ssi_addr","","",35,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",36,null],[12,"mq_maxmsg","","",36,null],[12,"mq_msgsize","","",36,null],[12,"mq_curmsgs","","",36,null],[3,"cpu_set_t","","",null,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",37,null],[12,"sa_mask","","",37,null],[12,"sa_flags","","",37,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",38,null],[12,"ss_flags","","",38,null],[12,"ss_size","","",38,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",39,null],[12,"si_errno","","",39,null],[12,"si_code","","",39,null],[12,"_pad","","",39,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",40,null],[12,"gl_pathv","","",40,null],[12,"gl_offs","","",40,null],[12,"gl_flags","","",40,null],[3,"ucred","","",null,null],[12,"pid","","",41,null],[12,"uid","","",41,null],[12,"gid","","",41,null],[3,"statfs","","",null,null],[12,"f_type","","",42,null],[12,"f_bsize","","",42,null],[12,"f_blocks","","",42,null],[12,"f_bfree","","",42,null],[12,"f_bavail","","",42,null],[12,"f_files","","",42,null],[12,"f_ffree","","",42,null],[12,"f_fsid","","",42,null],[12,"f_namelen","","",42,null],[12,"f_frsize","","",42,null],[3,"msghdr","","",null,null],[12,"msg_name","","",43,null],[12,"msg_namelen","","",43,null],[12,"msg_iov","","",43,null],[12,"msg_iovlen","","",43,null],[12,"msg_control","","",43,null],[12,"msg_controllen","","",43,null],[12,"msg_flags","","",43,null],[3,"termios","","",null,null],[12,"c_iflag","","",44,null],[12,"c_oflag","","",44,null],[12,"c_cflag","","",44,null],[12,"c_lflag","","",44,null],[12,"c_line","","",44,null],[12,"c_cc","","",44,null],[12,"c_ispeed","","",44,null],[12,"c_ospeed","","",44,null],[3,"flock","","",null,null],[12,"l_type","","",45,null],[12,"l_whence","","",45,null],[12,"l_start","","",45,null],[12,"l_len","","",45,null],[12,"l_pid","","",45,null],[3,"ipc_perm","","",null,null],[12,"__key","","",46,null],[12,"uid","","",46,null],[12,"gid","","",46,null],[12,"cuid","","",46,null],[12,"cgid","","",46,null],[12,"mode","","",46,null],[12,"__seq","","",46,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",47,null],[12,"shm_segsz","","",47,null],[12,"shm_atime","","",47,null],[12,"shm_dtime","","",47,null],[12,"shm_ctime","","",47,null],[12,"shm_cpid","","",47,null],[12,"shm_lpid","","",47,null],[12,"shm_nattch","","",47,null],[3,"sigset_t","","",null,null],[3,"stat","","",null,null],[12,"st_dev","","",48,null],[12,"st_ino","","",48,null],[12,"st_nlink","","",48,null],[12,"st_mode","","",48,null],[12,"st_uid","","",48,null],[12,"st_gid","","",48,null],[12,"st_rdev","","",48,null],[12,"st_size","","",48,null],[12,"st_blksize","","",48,null],[12,"st_blocks","","",48,null],[12,"st_atime","","",48,null],[12,"st_atime_nsec","","",48,null],[12,"st_mtime","","",48,null],[12,"st_mtime_nsec","","",48,null],[12,"st_ctime","","",48,null],[12,"st_ctime_nsec","","",48,null],[3,"stat64","","",null,null],[12,"st_dev","","",49,null],[12,"st_ino","","",49,null],[12,"st_nlink","","",49,null],[12,"st_mode","","",49,null],[12,"st_uid","","",49,null],[12,"st_gid","","",49,null],[12,"st_rdev","","",49,null],[12,"st_size","","",49,null],[12,"st_blksize","","",49,null],[12,"st_blocks","","",49,null],[12,"st_atime","","",49,null],[12,"st_atime_nsec","","",49,null],[12,"st_mtime","","",49,null],[12,"st_mtime_nsec","","",49,null],[12,"st_ctime","","",49,null],[12,"st_ctime_nsec","","",49,null],[3,"pthread_attr_t","","",null,null],[3,"mcontext_t","","",null,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",50,null],[12,"uc_link","","",50,null],[12,"uc_stack","","",50,null],[12,"uc_mcontext","","",50,null],[12,"uc_sigmask","","",50,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"pthread_kill","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"sigwait","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"recvfrom","","",null,null],[5,"mkfifo","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkstemps","","",null,null],[5,"mkdtemp","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"getpwuid_r","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_ctl","","",null,null],[5,"epoll_wait","","",null,null],[5,"pipe2","","",null,null],[5,"mount","","",null,null],[5,"umount","","",null,null],[5,"umount2","","",null,null],[5,"clone","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"memrchr","","",null,null],[5,"syscall","","",null,null],[5,"sendfile","","",null,null],[5,"splice","","",null,null],[5,"tee","","",null,null],[5,"vmsplice","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"eventfd","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"unshare","","",null,null],[5,"sethostname","","",null,null],[5,"setns","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",51,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",51,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",51,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",51,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",51,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",51,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",51,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",51,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",51,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",51,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",51,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",51,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",51,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",51,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",51,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",51,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",51,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",51,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",51,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",51,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",51,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",51,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","core::num","",52,{"inputs":[],"output":{"name":"wrapping"}}],[11,"fmt","","",52,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"shl","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",52,null],[11,"shr","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",52,null],[11,"shl","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",52,null],[11,"shr","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",52,null],[11,"shl","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",52,null],[11,"shr","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",52,null],[11,"shl","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",52,null],[11,"shr","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",52,null],[11,"shl","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",52,null],[11,"shr","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",52,null],[11,"shl","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",52,null],[11,"shr","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",52,null],[11,"shl","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",52,null],[11,"shr","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",52,null],[11,"shl","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",52,null],[11,"shr","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",52,null],[11,"shl","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",52,null],[11,"shr","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",52,null],[11,"shl","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",52,null],[11,"shr","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",52,null],[11,"add","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",52,null],[11,"sub","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",52,null],[11,"mul","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",52,null],[11,"div","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",52,null],[11,"rem","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",52,null],[11,"not","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",52,null],[11,"add","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",52,null],[11,"sub","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",52,null],[11,"mul","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",52,null],[11,"div","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",52,null],[11,"rem","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",52,null],[11,"not","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",52,null],[11,"add","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",52,null],[11,"sub","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",52,null],[11,"mul","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",52,null],[11,"div","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",52,null],[11,"rem","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",52,null],[11,"not","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",52,null],[11,"add","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",52,null],[11,"sub","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",52,null],[11,"mul","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",52,null],[11,"div","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",52,null],[11,"rem","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",52,null],[11,"not","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",52,null],[11,"add","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",52,null],[11,"sub","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",52,null],[11,"mul","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",52,null],[11,"div","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",52,null],[11,"rem","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",52,null],[11,"not","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",52,null],[11,"add","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",52,null],[11,"sub","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",52,null],[11,"mul","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",52,null],[11,"div","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",52,null],[11,"rem","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",52,null],[11,"not","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",52,null],[11,"add","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",52,null],[11,"sub","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",52,null],[11,"mul","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",52,null],[11,"div","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",52,null],[11,"rem","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",52,null],[11,"not","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",52,null],[11,"add","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",52,null],[11,"sub","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",52,null],[11,"mul","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",52,null],[11,"div","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",52,null],[11,"rem","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",52,null],[11,"not","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",52,null],[11,"add","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",52,null],[11,"sub","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",52,null],[11,"mul","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",52,null],[11,"div","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",52,null],[11,"rem","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",52,null],[11,"not","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",52,null],[11,"add","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",52,null],[11,"sub","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",52,null],[11,"mul","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",52,null],[11,"div","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",52,null],[11,"rem","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",52,null],[11,"not","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",52,null],[11,"fmt","","",53,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",53,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"ne","","",53,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",53,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[11,"eq","","",54,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",54,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",54,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",54,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",55,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",55,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",55,{"inputs":[{"name":"interrorkind"}],"output":{"name":"interrorkind"}}],[11,"fmt","","",55,{"inputs":[{"name":"interrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",54,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",56,null],[11,"fmt","","",56,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",56,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",56,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",56,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",56,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",56,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",56,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",56,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",56,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",56,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually &quot;non-zero&quot;.",56,{"inputs":[{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",56,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",57,null],[11,"get","","Dereferences the content.",57,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",57,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",57,null],[11,"fmt","","",57,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Shared`.",58,null],[11,"clone","","",58,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",58,null],[11,"fmt","","",58,{"inputs":[{"name":"shared"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::marker","",59,null],[11,"eq","","",59,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",59,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",59,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",59,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"default","","",59,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",60,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",60,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",60,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",61,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",61,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",61,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",62,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",62,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",62,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",63,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",63,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",63,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",63,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cmp","",64,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",64,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",64,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",64,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",64,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",64,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","libc","",65,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",65,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",65,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",65,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",65,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",65,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",65,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",65,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",66,null],[11,"fmt","","",66,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",66,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",66,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",66,{"inputs":[],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",67,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",68,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"default","","",69,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"default","","",70,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"clone","","",71,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",67,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",67,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",67,null],[11,"swap","","Stores a value into the bool, returning the old value.",67,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",67,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",67,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",67,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",67,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",67,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",67,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",67,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",68,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",68,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",68,null],[11,"swap","","Stores a value into the isize, returning the old value.",68,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",68,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_exchange","","Stores a value into the `isize` if the current value is the same as the `current` value.",68,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_exchange_weak","","Stores a value into the `isize if the current value is the same as the `current` value.",68,null],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",68,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",68,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",68,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",68,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",68,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",69,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",69,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",69,null],[11,"swap","","Stores a value into the usize, returning the old value.",69,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",69,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_exchange","","Stores a value into the `usize` if the current value is the same as the `current` value.",69,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_exchange_weak","","Stores a value into the `usize` if the current value is the same as the `current` value.",69,null],[11,"fetch_add","","Add to the current usize, returning the previous value.",69,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",69,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",69,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",69,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",69,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",70,null],[11,"load","","Loads a value from the pointer.",70,null],[11,"store","","Stores a value into the pointer.",70,null],[11,"swap","","Stores a value into the pointer, returning the old value.",70,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",70,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",70,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",70,null],[11,"fmt","","",69,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",68,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",67,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",72,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",72,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",72,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",72,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",72,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",72,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",72,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",73,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",73,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",73,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",74,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",74,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",74,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",74,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",74,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",74,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",74,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",74,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",74,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",75,null],[11,"clone","","",75,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",76,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",76,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",76,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",76,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",77,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",77,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",78,null],[11,"deref","","",77,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",77,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",79,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",79,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",79,null],[11,"clone","core::char","",80,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"clone","","",81,{"inputs":[{"name":"escapeunicodestate"}],"output":{"name":"escapeunicodestate"}}],[11,"next","","",80,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"size_hint","","",80,null],[11,"clone","","",82,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"clone","","",83,{"inputs":[{"name":"escapedefaultstate"}],"output":{"name":"escapedefaultstate"}}],[11,"next","","",82,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",82,null],[11,"count","","",82,{"inputs":[{"name":"escapedefault"}],"output":{"name":"usize"}}],[11,"nth","","",82,{"inputs":[{"name":"escapedefault"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",82,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"clone","core::iter","",84,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",84,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",84,null],[11,"next_back","","",84,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",85,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",85,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",85,null],[11,"next_back","","",85,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",86,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",86,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",86,null],[11,"clone","","",87,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"clone","","",88,{"inputs":[{"name":"chainstate"}],"output":{"name":"chainstate"}}],[11,"next","","",87,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",87,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",87,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",87,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",87,null],[11,"next_back","","",87,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",89,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",89,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",89,null],[11,"next_back","","",89,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",90,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",90,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",90,null],[11,"next_back","","",90,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",91,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",91,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",91,null],[11,"next_back","","",91,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",92,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",92,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",92,null],[11,"next_back","","",92,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",93,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",93,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",93,null],[11,"nth","","",93,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",93,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",93,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",94,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",94,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",94,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",94,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",94,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",94,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",94,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks if the iterator has finished iterating.",94,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",95,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",95,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",95,null],[11,"clone","","",96,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",96,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",96,null],[11,"clone","","",97,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",97,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",97,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",97,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",97,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",97,null],[11,"clone","","",98,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",98,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",98,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",98,null],[11,"clone","","",99,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",99,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",99,null],[11,"clone","","",100,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",100,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",100,null],[11,"next_back","","",100,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",101,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",101,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",101,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",101,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",101,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",101,null],[11,"next_back","","",101,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",102,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",102,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",102,null],[11,"next_back","","",102,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",103,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",62,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",61,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",103,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",103,null],[11,"clone","","",104,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",104,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",104,null],[11,"next_back","","",104,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",103,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",103,null],[11,"next","core::ops","",61,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",61,null],[11,"next_back","","",61,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",62,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",105,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",105,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",105,null],[11,"next_back","","",105,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",106,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",106,null],[11,"next_back","","",106,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",106,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",106,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",106,{"inputs":[],"output":{"name":"empty"}}],[11,"clone","","",107,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",107,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",107,null],[11,"next_back","","",107,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",107,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"hash","core::option","",51,null],[11,"fmt","","",51,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",51,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",51,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",51,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",51,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",51,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",51,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",51,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",51,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"default","","",51,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",51,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",108,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",108,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",108,null],[11,"next_back","","",108,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",109,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",109,null],[11,"next_back","","",109,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",109,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",110,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",110,null],[11,"next_back","","",110,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",111,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",111,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",111,null],[11,"next_back","","",111,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",51,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",112,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",113,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",114,null],[11,"fmt","","",114,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",114,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",114,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",114,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",114,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",114,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",114,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",114,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",114,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",114,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",114,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",114,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",114,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",114,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",114,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",114,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",114,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",114,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",114,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",114,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",114,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",114,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",114,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",114,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",114,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",114,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",114,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",114,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",114,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",114,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",115,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",115,null],[11,"next_back","","",115,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",115,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",116,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",116,null],[11,"next_back","","",116,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",117,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",117,null],[11,"next_back","","",117,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",114,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"as_slice","core::slice","View the underlying data as a subslice of the original data.",118,null],[11,"next","","",118,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",118,null],[11,"count","","",118,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",118,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",118,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",118,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",118,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",119,null],[11,"next","","",119,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",119,null],[11,"count","","",119,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",119,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",119,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",119,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",120,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",120,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",120,null],[11,"next_back","","",120,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",120,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",121,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",121,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",121,null],[11,"next_back","","",121,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",122,{"inputs":[{"name":"genericsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",122,null],[11,"next","","",123,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",123,null],[11,"next","","",124,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",124,null],[11,"next","","",125,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",125,null],[11,"next","","",126,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",126,null],[11,"clone","","",127,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[11,"next","","",127,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",127,null],[11,"count","","",127,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"nth","","",127,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",127,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"next_back","","",127,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"clone","","",128,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[11,"next","","",128,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",128,null],[11,"count","","",128,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"nth","","",128,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",128,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next_back","","",128,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next","","",129,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",129,null],[11,"count","","",129,{"inputs":[{"name":"chunksmut"}],"output":{"name":"usize"}}],[11,"nth","","",129,{"inputs":[{"name":"chunksmut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",129,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"next_back","","",129,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"fmt","core::str::pattern","",130,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",130,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",130,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",130,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",131,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",132,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",131,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",131,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",131,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",133,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",133,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",133,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",133,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",133,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",133,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",133,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",133,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",134,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",134,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",134,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",134,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",134,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",134,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",134,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",134,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",135,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",135,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",135,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",135,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",135,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",135,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",135,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",135,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",136,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",136,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",137,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",137,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",138,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",138,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",136,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",136,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",136,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",136,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",136,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",139,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",139,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",140,{"inputs":[],"output":{"name":"bool"}}],[11,"rejecting","","",140,null],[11,"matching","","",140,null],[11,"use_early_reject","","",141,{"inputs":[],"output":{"name":"bool"}}],[11,"rejecting","","",141,null],[11,"matching","","",141,null],[11,"eq","core::str","",142,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",142,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",142,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",142,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",142,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",143,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",143,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",143,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",143,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",143,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",144,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[11,"next","","",144,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",144,null],[11,"next_back","","",144,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",144,{"inputs":[{"name":"chars"}],"output":{"name":"str"}}],[11,"clone","","",145,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[11,"next","","",145,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",145,null],[11,"next_back","","",145,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",145,{"inputs":[{"name":"charindices"}],"output":{"name":"str"}}],[11,"clone","","",146,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"next","","",146,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",146,null],[11,"count","","",146,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"last","","",146,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"nth","","",146,{"inputs":[{"name":"bytes"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next_back","","",146,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",146,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"clone","","",147,{"inputs":[{"name":"splitinternal"}],"output":{"name":"splitinternal"}}],[11,"next","","",148,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",148,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",149,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",149,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",148,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",149,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"next","","",150,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",150,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[11,"next","","",151,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",151,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",150,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",151,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",152,{"inputs":[{"name":"splitninternal"}],"output":{"name":"splitninternal"}}],[11,"next","","",153,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",153,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[11,"next","","",154,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",154,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"clone","","",155,{"inputs":[{"name":"matchindicesinternal"}],"output":{"name":"matchindicesinternal"}}],[11,"next","","",156,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",156,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[11,"next","","",157,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",157,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",156,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",157,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",158,{"inputs":[{"name":"matchesinternal"}],"output":{"name":"matchesinternal"}}],[11,"next","","",159,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",159,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"next","","",160,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",160,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",159,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",160,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",161,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[11,"next","","",161,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",161,null],[11,"next_back","","",161,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"clone","","",162,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"clone","","",163,{"inputs":[{"name":"linesanymap"}],"output":{"name":"linesanymap"}}],[11,"call","","",163,null],[11,"call_mut","","",163,null],[11,"call_once","","",163,null],[11,"next","","",162,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",162,null],[11,"next_back","","",162,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"clone","","",164,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",165,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",165,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",165,null],[11,"finish","","",165,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",165,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",165,{"inputs":[],"output":{"name":"siphasher"}}],[11,"build_hasher","core::hash","",166,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"h"}}],[11,"clone","","",166,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"buildhasherdefault"}}],[11,"default","","",166,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"eq","core::fmt::num","",167,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",167,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"clone","","",167,{"inputs":[{"name":"binary"}],"output":{"name":"binary"}}],[11,"eq","","",168,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"ne","","",168,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"clone","","",168,{"inputs":[{"name":"octal"}],"output":{"name":"octal"}}],[11,"eq","","",169,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",169,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"clone","","",169,{"inputs":[{"name":"decimal"}],"output":{"name":"decimal"}}],[11,"eq","","",170,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"ne","","",170,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"clone","","",170,{"inputs":[{"name":"lowerhex"}],"output":{"name":"lowerhex"}}],[11,"eq","","",171,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"ne","","",171,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"clone","","",171,{"inputs":[{"name":"upperhex"}],"output":{"name":"upperhex"}}],[11,"eq","","",172,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"ne","","",172,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"clone","","",172,{"inputs":[{"name":"radix"}],"output":{"name":"radix"}}],[11,"clone","","",173,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",173,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",173,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",173,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",173,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",173,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",173,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",173,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",173,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",173,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",173,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",173,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",173,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",173,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",173,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",173,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",173,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",173,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",173,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",173,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",173,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_str","core::fmt::builders","",174,{"inputs":[{"name":"padadapter"},{"name":"str"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated struct output.",175,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Finishes output and returns any error encountered.",175,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",176,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Finishes output and returns any error encountered.",176,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"formatter","","Returns the wrapped `Formatter`.",176,{"inputs":[{"name":"debugtuple"}],"output":{"name":"formatter"}}],[11,"finish","","",177,null],[11,"entry","","Adds a new entry to the set output.",178,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"entries","","Adds the contents of an iterator of entries to the set output.",178,{"inputs":[{"name":"debugset"},{"name":"i"}],"output":{"name":"debugset"}}],[11,"finish","","Finishes output and returns any error encountered.",178,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the list output.",179,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"entries","","Adds the contents of an iterator of entries to the list output.",179,{"inputs":[{"name":"debuglist"},{"name":"i"}],"output":{"name":"debuglist"}}],[11,"finish","","Finishes output and returns any error encountered.",179,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",180,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"entries","","Adds the contents of an iterator of entries to the map output.",180,{"inputs":[{"name":"debugmap"},{"name":"i"}],"output":{"name":"debugmap"}}],[11,"finish","","Finishes output and returns any error encountered.",180,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"fmt","core::fmt","",181,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",181,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",182,{"inputs":[{"name":"argumentv1"}],"output":{"name":"argumentv1"}}],[11,"clone","","",183,{"inputs":[{"name":"flagv1"}],"output":{"name":"flagv1"}}],[11,"clone","","",184,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",184,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",184,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",185,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",185,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",185,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",185,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",185,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as &#39;fill&#39; whenever there is alignment",185,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",185,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",185,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",185,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"sign_plus","","Determines if the `+` flag was specified.",185,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_minus","","Determines if the `-` flag was specified.",185,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"alternate","","Determines if the `#` flag was specified.",185,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",185,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",185,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",185,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",185,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",185,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",185,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"write_str","","",185,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",185,{"inputs":[{"name":"formatter"},{"name":"char"}],"output":{"name":"result"}}],[11,"write_fmt","","",185,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"fmt","","",181,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",59,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",72,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",74,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",76,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",77,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone_from","libc::dox","Performs copy-assignment from `source`.",186,null],[11,"clone_from","libc::dox::imp","Performs copy-assignment from `source`.",186,null],[11,"clone","libc","",48,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",49,{"inputs":[{"name":"stat64"}],"output":{"name":"stat64"}}],[11,"clone","","",187,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","","",188,{"inputs":[{"name":"mcontext_t"}],"output":{"name":"mcontext_t"}}],[11,"clone","","",50,{"inputs":[{"name":"ucontext_t"}],"output":{"name":"ucontext_t"}}],[11,"clone","","",189,{"inputs":[{"name":"sigset_t"}],"output":{"name":"sigset_t"}}],[11,"clone","","",37,{"inputs":[{"name":"sigaction"}],"output":{"name":"sigaction"}}],[11,"clone","","",38,{"inputs":[{"name":"stack_t"}],"output":{"name":"stack_t"}}],[11,"clone","","",39,{"inputs":[{"name":"siginfo_t"}],"output":{"name":"siginfo_t"}}],[11,"clone","","",40,{"inputs":[{"name":"glob64_t"}],"output":{"name":"glob64_t"}}],[11,"clone","","",41,{"inputs":[{"name":"ucred"}],"output":{"name":"ucred"}}],[11,"clone","","",42,{"inputs":[{"name":"statfs"}],"output":{"name":"statfs"}}],[11,"clone","","",43,{"inputs":[{"name":"msghdr"}],"output":{"name":"msghdr"}}],[11,"clone","","",44,{"inputs":[{"name":"termios"}],"output":{"name":"termios"}}],[11,"clone","","",45,{"inputs":[{"name":"flock"}],"output":{"name":"flock"}}],[11,"clone","","",46,{"inputs":[{"name":"ipc_perm"}],"output":{"name":"ipc_perm"}}],[11,"clone","","",47,{"inputs":[{"name":"shmid_ds"}],"output":{"name":"shmid_ds"}}],[11,"clone","","",27,{"inputs":[{"name":"dirent"}],"output":{"name":"dirent"}}],[11,"clone","","",28,{"inputs":[{"name":"dirent64"}],"output":{"name":"dirent64"}}],[11,"clone","","",29,{"inputs":[{"name":"rlimit64"}],"output":{"name":"rlimit64"}}],[11,"clone","","",30,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",31,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[11,"clone","","",190,{"inputs":[{"name":"pthread_mutex_t"}],"output":{"name":"pthread_mutex_t"}}],[11,"clone","","",191,{"inputs":[{"name":"pthread_rwlock_t"}],"output":{"name":"pthread_rwlock_t"}}],[11,"clone","","",192,{"inputs":[{"name":"pthread_mutexattr_t"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"clone","","",193,{"inputs":[{"name":"pthread_cond_t"}],"output":{"name":"pthread_cond_t"}}],[11,"clone","","",32,{"inputs":[{"name":"passwd"}],"output":{"name":"passwd"}}],[11,"clone","","",33,{"inputs":[{"name":"statvfs"}],"output":{"name":"statvfs"}}],[11,"clone","","",34,{"inputs":[{"name":"dqblk"}],"output":{"name":"dqblk"}}],[11,"clone","","",35,{"inputs":[{"name":"signalfd_siginfo"}],"output":{"name":"signalfd_siginfo"}}],[11,"clone","","",194,{"inputs":[{"name":"fsid_t"}],"output":{"name":"fsid_t"}}],[11,"clone","","",36,{"inputs":[{"name":"mq_attr"}],"output":{"name":"mq_attr"}}],[11,"clone","","",195,{"inputs":[{"name":"cpu_set_t"}],"output":{"name":"cpu_set_t"}}],[11,"clone","","",13,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",14,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",15,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",16,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",17,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",18,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",19,{"inputs":[{"name":"sockaddr_nl"}],"output":{"name":"sockaddr_nl"}}],[11,"clone","","",20,{"inputs":[{"name":"sockaddr_ll"}],"output":{"name":"sockaddr_ll"}}],[11,"clone","","",196,{"inputs":[{"name":"fd_set"}],"output":{"name":"fd_set"}}],[11,"clone","","",21,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"clone","","",22,{"inputs":[{"name":"sched_param"}],"output":{"name":"sched_param"}}],[11,"clone","","",23,{"inputs":[{"name":"dl_info"}],"output":{"name":"dl_info"}}],[11,"clone","","",24,{"inputs":[{"name":"epoll_event"}],"output":{"name":"epoll_event"}}],[11,"clone","","",25,{"inputs":[{"name":"utsname"}],"output":{"name":"utsname"}}],[11,"clone","","",26,{"inputs":[{"name":"lconv"}],"output":{"name":"lconv"}}],[11,"clone","","",0,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",1,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",2,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",3,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[11,"clone","","",4,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[11,"clone","","",5,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",6,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",7,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",8,{"inputs":[{"name":"ipv6_mreq"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",9,{"inputs":[{"name":"hostent"}],"output":{"name":"hostent"}}],[11,"clone","","",10,{"inputs":[{"name":"iovec"}],"output":{"name":"iovec"}}],[11,"clone","","",11,{"inputs":[{"name":"pollfd"}],"output":{"name":"pollfd"}}],[11,"clone","","",12,{"inputs":[{"name":"winsize"}],"output":{"name":"winsize"}}],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"loff_t","","",null,null],[6,"clockid_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"key_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"AF_PACKET","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"CBAUD","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"WNOHANG","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"NCCS","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"IUTF8","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"EXTPROC","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"FIONREAD","","",null,null],[17,"TIOCCONS","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_perf_event_open","","",null,null]],"paths":[[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"stat"],[3,"stat64"],[3,"ucontext_t"],[4,"Option"],[3,"Wrapping"],[4,"FpCategory"],[3,"ParseIntError"],[4,"IntErrorKind"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[4,"EscapeUnicodeState"],[3,"EscapeDefault"],[4,"EscapeDefaultState"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[4,"ChainState"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"GenericSplitN"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"SplitInternal"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitNInternal"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndicesInternal"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"MatchesInternal"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"LinesAnyMap"],[3,"CharRange"],[3,"SipHasher"],[3,"BuildHasherDefault"],[3,"Binary"],[3,"Octal"],[3,"Decimal"],[3,"LowerHex"],[3,"UpperHex"],[3,"Radix"],[3,"RadixFmt"],[3,"PadAdapter"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugInner"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"ArgumentV1"],[4,"FlagV1"],[3,"Arguments"],[3,"Formatter"],[8,"Clone"],[3,"pthread_attr_t"],[3,"mcontext_t"],[3,"sigset_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex["utf8_cstr"] = {"doc":"","items":[[3,"Utf8CStr","utf8_cstr","A wrapper that promises it&#39;s contents are null-terminated &amp; validly utf-8 encoded",null,null],[4,"Utf8CStrError","","",null,null],[13,"NoNulTerm","","",0,null],[13,"EmbeddedNulTerm","","",0,null],[13,"Utf8Error","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"utf8cstrerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"utf8cstr"},{"name":"utf8cstr"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"utf8cstr"},{"name":"utf8cstr"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"utf8cstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"utf8cstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_raw_parts","","Construct a `Utf8CStr` with no checking.",1,null],[11,"from_ptr_unchecked","","Construct a `Utf8CStr` with minimal checking.",1,null],[11,"from_cstr","","Failable convertion from a CStr.",1,{"inputs":[{"name":"cstr"}],"output":{"name":"result"}}],[11,"from_cstr_unchecked","","Convert from a `&amp;CStr` without any checking",1,{"inputs":[{"name":"cstr"}],"output":{"name":"utf8cstr"}}],[11,"from_bytes","","Convert directly from bytes",1,null],[11,"from_bytes_with_nul_unchecked","","Raw convertion from basic data type with no checking.",1,null],[11,"as_ptr","","",1,null],[11,"as_ref","","",1,{"inputs":[{"name":"utf8cstr"}],"output":{"name":"str"}}],[11,"as_ref","","",1,{"inputs":[{"name":"utf8cstr"}],"output":{"name":"cstr"}}],[11,"deref","","",1,{"inputs":[{"name":"utf8cstr"}],"output":{"name":"target"}}]],"paths":[[4,"Utf8CStrError"],[3,"Utf8CStr"]]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","items":[[3,"LogRecord","log","The &quot;payload&quot; of a log message.",null,null],[3,"LogMetadata","","Metadata about a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level\nfilter.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",null,null],[3,"ShutdownLoggerError","","The type returned by `shutdown_logger_raw` if `shutdown_logger_raw` has\nalready been called or if `set_logger_raw` has not been called yet.",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework",null,null],[13,"Error","","The &quot;error&quot; level.",0,null],[13,"Warn","","The &quot;warn&quot; level.",0,null],[13,"Info","","The &quot;info&quot; level.",0,null],[13,"Debug","","The &quot;debug&quot; level.",0,null],[13,"Trace","","The &quot;trace&quot; level.",0,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging\nframework.",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"max_log_level","","Returns the current maximum log level.",null,{"inputs":[],"output":{"name":"loglevelfilter"}}],[5,"set_logger","","Sets the global logger.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"set_logger_raw","","Sets the global logger from a raw pointer.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"shutdown_logger","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[5,"shutdown_logger_raw","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message with the specified metadata would be\nlogged.",2,{"inputs":[{"name":"log"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[10,"log","","Logs the `LogRecord`.",2,{"inputs":[{"name":"log"},{"name":"logrecord"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"loglevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"loglevel"}],"output":{"name":"loglevel"}}],[11,"eq","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"option"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"ordering"}}],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"loglevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level.",0,{"inputs":[],"output":{"name":"loglevel"}}],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,{"inputs":[{"name":"loglevel"}],"output":{"name":"loglevelfilter"}}],[11,"fmt","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"loglevelfilter"}],"output":{"name":"loglevelfilter"}}],[11,"eq","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevel"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"ordering"}}],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level filter.",1,{"inputs":[],"output":{"name":"loglevelfilter"}}],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,{"inputs":[{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"args","","The message body.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"arguments"}}],[11,"metadata","","Metadata about the log directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"logmetadata"}}],[11,"location","","The location of the log directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"loglocation"}}],[11,"level","","The verbosity level of the message.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"str"}}],[11,"level","","The verbosity level of the message.",4,{"inputs":[{"name":"logmetadata"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",4,{"inputs":[{"name":"logmetadata"}],"output":{"name":"str"}}],[11,"fmt","","",5,{"inputs":[{"name":"loglocation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"loglocation"}}],[11,"module_path","","The module path of the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"str"}}],[11,"file","","The source file containing the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"str"}}],[11,"line","","The line containing the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"u32"}}],[11,"fmt","","",6,{"inputs":[{"name":"maxloglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","Gets the current maximum log level filter.",6,{"inputs":[{"name":"maxloglevelfilter"}],"output":{"name":"loglevelfilter"}}],[11,"set","","Sets the maximum log level.",6,{"inputs":[{"name":"maxloglevelfilter"},{"name":"loglevelfilter"}],"output":null}],[11,"fmt","","",7,{"inputs":[{"name":"setloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"setloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",7,{"inputs":[{"name":"setloggererror"}],"output":{"name":"str"}}],[11,"fmt","","",8,{"inputs":[{"name":"shutdownloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"shutdownloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",8,{"inputs":[{"name":"shutdownloggererror"}],"output":{"name":"str"}}],[14,"log!","","The standard logging macro.",null,null],[14,"error!","","Logs a message at the error level.",null,null],[14,"warn!","","Logs a message at the warn level.",null,null],[14,"info!","","Logs a message at the info level.",null,null],[14,"debug!","","Logs a message at the debug level.",null,null],[14,"trace!","","Logs a message at the trace level.",null,null],[14,"log_enabled!","","Determines if a message logged at the specified level in that module will\nbe logged.",null,null]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"ShutdownLoggerError"]]};
initSearch(searchIndex);
